(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     28454,        590]
NotebookOptionsPosition[     27913,        567]
NotebookOutlinePosition[     28261,        582]
CellTagsIndexPosition[     28218,        579]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Light Sensor and gauges", "Title",
 CellChangeTimes->{{3.6968698558281884`*^9, 
  3.6968698712843637`*^9}},ExpressionUUID->"e7e6360f-199b-4029-b924-\
2a269290d33f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"device", "=", 
  RowBox[{"DeviceOpen", "[", "\"\<Vernier\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.696869411269321*^9, 
  3.696869426216947*^9}},ExpressionUUID->"5b2f3ce6-8746-428b-b72a-\
2006973e98a5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Light 6000 Sensor)", 
                "Not Connected (Light 6000 Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$ = 1, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{176., {5., 9.}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Light 6000 Sensor)", 
                "Not Connected (Light 6000 Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Vernier", 1}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                   MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Vernier", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6968694168508964`*^9, 
  3.696869426571906*^9}},ExpressionUUID->"fbfc4fec-3595-4e6b-8572-\
6a62050b3ed2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"AngularGauge", "[", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"QuantityMagnitude", "@", 
      RowBox[{"DeviceRead", "[", "device", "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "6000"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6968694272829456`*^9, 3.6968694308089*^9}, {
  3.6968695873055906`*^9, 3.6968695925849304`*^9}, {3.69686979519125*^9, 
  3.696869822766257*^9}},ExpressionUUID->"5847586f-32cf-4a70-ae18-\
d34fbeb1796d"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   AngularGauge[$CellContext`x = QuantityMagnitude[
      DeviceRead[$CellContext`device]], {0, 6000}], StandardForm],
  ImageSizeCache->{180., {87., 93.}}]], "Output",
 CellChangeTimes->{{3.696869431536517*^9, 3.6968694473405895`*^9}, 
   3.6968695928894033`*^9, 
   3.6968698235080385`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
gWcMft+xcY7GNB/5ArF6x2W8QaK+lUe2NZsijBtItbUjNTaX3TLOoMgAY8Ba
VST9+R6M/Z9bb0iM/b3y65zVu1vJ38gtCxu612QoT6zXFinQOKujfqLO1nE8
QraJb8T33//uzC7+Itz83+o3HL4SeV96Ka2/+w1ZM/gqM3gDrZX9iR7Z1gJb
eKrUM9q00ry3QfNpJrkITMnF79k4FrrjFku9DybPYKGw1AkRgwn1fg6z7WTq
tBVUVb5kMyOpzTHw2SUNVlKdjxkinHobD2CaoYlBkQfmVfXZPobBr15dpZLw
GMCFUPPJA2o5PHLmL5CMgQfjIwbjCzxwdgEV0iUHKuY2+X/PnN7FBjzL2SBA
RgpssOWdOtEmEkU22EIJ/jh82TBAHCAbGB8sF3IYtLCAztgQdyhpNgZ+3Obz
gFshL99wdRcP4IJyZRSZk/5QsoVxDQxS2V9kX2TAb9m0PnSQAa/fe1cXA7r1
oEVb0F16Az9UBzH1yyBWCO9z/tHxYD+b3FVKEg+eOP6wFKU3oQeWKmrdcsjj
0ZpakhuioJWTwm87NmDV49nw/E/+vosNXE5jdcX5LHeHe8/Ap4rukiVL0nBm
ayj/7W/Ter9O8G/9YmkCz4Wv8EwXvuaO+5qqhQAOzg9GJAYzZUQpItNddYvc
BvPBsLQSJA+oWt62bBtAN16a4FPUE7bnwzV+HNCDBzCOJg9aVYkc7P9QE5vg
11BfULHO+KVBV/j1tR5e2QqyDQZQqqi8Zjqom/wDEYP40WINxCUKLdauVAcP
tGl9WCIDUJDJGUCdxhIgS3hQ7snAF/mPEr6tk8LvFKgvrRBOsXESk9R+sYdZ
4r+B79SeQGWAwldSWd0JVU3G0ZODejhjK5o2GMC9cTCPGFgBW7dWOh6DTfP/
YJvWRyOC95VRMgC7Vc20IK3VVf+b4FNxwntiz/+DC9T3j1oNbemObDO2pExF
SwVN8Kke5JRVdR+VRIz4uk2LNDKn3qfCpL40n6gCfE/cK4rg40eLgaChLdRI
OJBvOAfMOETqfRGU1DMOFbip/r8JPslehuS2os7nEJvWR6C2M31GIIKn8/Hz
WXql2VgTfJK9tz36f3iKQxz1S//0uw3qfeHTwKvQkA8v11MzDVeusm+CT1kQ
ZOUMj4eZbJO/6XoJ3qejXAb5+ZzsUfKP1t4Ar2YP2XtsmVPD8A6zaX3g8Xaf
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\
\>"],ExpressionUUID->"cff71495-d0db-4abf-bbc2-ed777dc8162c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -1927}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (February 22, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 170, 3, 101, "Title"],
Cell[CellGroupData[{
Cell[775, 29, 231, 5, 30, "Input"],
Cell[1009, 36, 16384, 344, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17430, 385, 514, 12, 30, "Input"],
Cell[17947, 399, 9938, 164, 195, 203, 4, "CachedBoxData", "BoxData", "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

