(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    136804,       2635]
NotebookOptionsPosition[    129245,       2482]
NotebookOutlinePosition[    134761,       2590]
CellTagsIndexPosition[    134718,       2587]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
The Sound Level Sensor allows you to easily measure sound level in decibels \
(dB) in a variety of school settings. Simply connect and collect\[LongDash] \
no background knowledge of sound-level weighting, response times, or the \
decibel scale is needed to use this sensor.\
\>", "Text",
 CellChangeTimes->{
  3.699715254464568*^9, 3.6997916443859177`*^9, 3.6997929818087907`*^9, 
   3.69979382372225*^9, {3.6998031642633557`*^9, 
   3.699803169725423*^9}},ExpressionUUID->"baaf8659-8a79-40dc-b974-\
a4e326deb9e3"],

Cell["\<\
The Sound Level Sensor is A-weighted, meaning it responds to sound loudness \
the same way the human ear does. It measures sound level to within 3 dB along \
a single range from 55 to 110 dB, with no need to switch between ranges \
during an experiment. You can monitor classroom sound levels, measure \
reverberation time, and investigate sound insulation.\
\>", "Text",
 CellChangeTimes->{
  3.699715254464568*^9, 3.6997916443859177`*^9, 3.6997929818087907`*^9, 
   3.69979382372225*^9, {3.6998031642633557`*^9, 
   3.699803170892415*^9}},ExpressionUUID->"ca784e85-e227-4421-bb13-\
3b249a627a9e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXdYFFu66H2+e597n+/e+/1x7pkze2YHJXZONBlEBEQEmiZ3k3MSkIyi
opIMKBgQQVEQkCzmQKZzEwx7m3PGhDln5XurCsq2Ubczc2bP7HH9nnfXXr2q
qC668Vdvv7VqtV5kinfsf/u3f/u3jP8XFt4RWfbp6RFzff4dHoiSM+LjkmOi
XZIzY+Ji0i0j/zt0fv///Nu/PYX/sPYIAvEvyvsx/qJViL+R3+9r+/s9cgTi
mwK5/R/C7/e1/f0eOQLxTYHc/g/h9/va/n6PHIFAIBAIBAKBQCAQCAQCgUAg
EAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgE
AoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFA
IBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQ
CAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQC
gUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBD/wrz/FF/Y7G9/or/h
YBEIBALxVSC3IxAIxL8eyO0IBALxrwdyOwKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEIh/GdB4RQQCgfjXA7kdgUAg/vVAbkcgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEIjfC+gKLwKBQCAQCAQCgUAgEAgEAoFAIBAIxO+E9+9H
3v11MfIV8Vfv/O8aX3Pk8Mr81u/EJ+IT787IyJuRkbf/kCNEIBC/I3CB/DXx
aRt9HH/1zv+u8TVH/huYU2ugxGfcrhX/sFMPAoH4J+YT+vpKx/114vt6jf5d
Q+t4/sn5WOYann8/9oYhEAjER4Af3r579waWROPdu7e4QUbH2461xxrvRuPd
u099i/y7X4u3+HJs43ef24/WXj+z2Rd+/Mt7fjf61O/GGu/hl34Hvz0Zb969
Jds4ow/fvH07Fm9ev3nz6tXbN6/gf69fv4R49eoFHs9fvXz+EuLFM4gXL549
f/bk6dPHY/FIo/346ZNHz8bajx8/fPDg3rNnT54/f/qCiBdPYQ+wZ4260Kfe
Qvw3/Y3/bv75Id/uv9P2CMQ/FS9fvHzy5MmzZ89evXr18uVL8JJGqfaz9hjj
t6tO/M3Av1Ew8Ou3r19hFgbxwm/+4jkez148f/b0yePHjx4+evjg4YP7D+7f
e/zg/qP79x7cvfvw7l2scefO3bu38bhz587w7dvDw8O37t4Zvn/n1t3hm/fv
DD+8d/v2zWu3rl0dvjF06/pVaNy4euna5YvXrlwcunxh6NL5q5fOX75w9tL5
MxfPnT53+sSZk8dOnzgKDYizp46fOXHs3KnjF86eunz+zJULZ2Fj+EFYXjp3
Bp7iycN7zx7df/bk4ZPH9x89uvvixZO3b+Cdevnm9Qv4RV7D+/biOfwKENiv
8/I5/g5iv+8/+jX/5wK5HfHt8Pbt2wsXLpw4ceLMmTNnz549dOjQ0aOHL146
M3Tt0q3ha3fv3br/4Pa9e7cePhh++OA2vhx+9PDO40d3njy+S8RjiEcQWOej
h7chHj7Etrx/7+YD+MF74L0b925fx+MaLO/CboeH7twaun3jyvCNy7euX7p2
7SIRQ1cvDF09D3HlyrnLl89evnTm0sXTF/G4cOHUhfMnz0OcO3H27PEzZ46d
PXPszOmjpyFOHTl54pcTx38m4tixQ0ePHDx29ODRIweOHN4PcfiX/b/8MojF
zwM/H+qHOHSw7+AB9YH9qv2DysEBxQBEv7y/X9bXh4VaJVGpJP1KSb9KCqFW
9PQpe1XyboWiR6GE6JUruqWyTrmyRy7rUkg7FNJ2uaRN1guxT9bTJuvukHa1
Y9Hd0dvZJulqh2VPxz4iutv3drXt6dq3G6ITX3bs3dW+Z2fb7h0Q+3Zt72nf
C5vt2tqyc2sLtmxt3r6laVtLY2tT/ZbGuqbGzY0NtXWbN9XWVNZUb6zetGFT
1fqqyvKNG9ZWrF9TUVG6oWLtxsqSlq1Vw7cvw9sLn0j+0X9i/0QgtyO+HZ4+
eXri+ImTJ04eO3rsyOEjCrlCpVL29alUKkV/v/rAwcE9e3YVFOSuWLFkWWH+
8mUFy5cvKsJicXHRkuLixcXFS6ATVi0rLFi2DIvCwrylS3OXLMldVLCgIC+7
IG9eXs7c3IVzIHIWZOUsmJ27MAt7uCArL2cO0Z+bO5eIfNg4b15+XnYe3sgb
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
7V0dSpfpIn19KnFflYbbsbzd2spS6GZx9rRiBLkdgfjG0BoDyWYxAgMDivG8
vbGxkRjiTrg9KiqKvJZKKh2a2EN86pixvJ1ijOXtfuB2thCyd1+Wp7eRl1gY
mzSnuCx9WQlX6M109+V5BdJd3RIWLoC8XSmXSqS9e/Gx6Pv27t6zeycEtFua
G8rLSmTS7oL8hQvmz+nq3Csfl7eTMtdMwrUSb6KWolV1/9W8nejs6enuhaRd
Y8Q7EXh1RfIFt2tePNWsqGj2f6XbP1XekSuUErVKvX1rhwnflkplaLmdqMlA
3u7hbnXhnHoEuR2B+MYg3Z6CXUs1ZLEY/v5+y5Yvr6ysbGhoIPN2ot6ur6/L
YNDB6HjgMwlQDSAMKNiSCmk/lwUrjMDtIn+Gux8L3O4pogk9BAlJq5u2ljdv
n7eqnO3mzXAXs939KNNdZubmYm7Hhsj07Nq5HWIbPFtLE0RD/eb169YuWZy3
pmTF3DmZs2elbWlpUMKmGkPHNe09PvHWyuQ1R8tonQhIt/dIRseu9/R2YtHT
3tvTCdHT3S3pBaX3yKRdcjk0QM6AQiaT4tc0P0rFtYSsmahrDZjRFL5W7UXr
fKHVxurtcqlK2b91S7sx3wZOuPj4dvxaKj4XjSm4HbvP19zLY9Lli4MjRL0d
TRaGQHwzkG7PTE1i0iksJt3f33/ZsmUbN26EvJ2YUqa1tRWS1PDwcAMDXSaT
Dpk7NoEvPncW5naaoQFFH8KQZsDmMik0Kt/OwUQcwPQK4HoGcLzFVDdhwJzs
ta07Vtc2FlRs4nmK6UIRx8Of7iJIXLiwr79fpZB3dLbl5+WUrV1TU10FVm9p
bqyvq129qnjpkvzWLY2rVxWtWrl829ZmuVwy3u2aQxk/53at4TGabidvYuoB
jUs6eiVg9Q6JtFMiBcN39HS39fZ0wL5hN/CpQSGHjwBd+DHIZTIl+F2uINwu
+7LbNRX917n94wR+1O3NjXt5HCs6g4p/TwqTnGcM3I5PUGPu4z156OrBEeR2
BOIbg3R79pxMFp3KZNACcLdD3k64vRVHIpHgbtcbmwURn5+dRqHQDKl0Chie
QsUaXB4LVhjbTzX1C2R6BkByzvTwoQndneMSorNzAhPT/JMzWW7eVDdfhsAX
8vbEnJz+gQGVQqZSK/bs3rkRn02lYn35hop1tTWbtrQ09nS379zRWrpmZXvb
boUcfN49vsA+fnzjeLePH8r+Kbfjq3C3Y0u8H2Qul/X09vTIpVIZlrd3K5Qg
dmxsOZ63k27/bN6uNRjmv9DtferBqo3NTLopvCP45MBMnkbejrnd3Ezsa3fz
xuER5HYE4huDdHtOdhYP+xY8mp9YDG7ftGlTQ0NDc3MzoXdwYmhYqD5Fj84k
JvGlEGFIN4QwoBlQGBQak8blc2h0Gs/WzljkT7id5elLcxM6Rcetamip3rk3
u2QdU+BFc/Olu/roOzolYHn7gAJEp5D1qZUqpRy7h7S7c/euHY0N9csKF0dF
huTmZM/Pztq9axs4Fr936YPbP3dfkmaZXWu4i1bJnVD6mOphVQ+k671YZQZC
unPnnuio4IL8+Wqlon5zfVCgv4+3x5rSIqW6VyrrGa3MyOHgPxoGqXWRlIxP
3riqVXLXdPsndzL2g9jelMr+hrpd5qZ2VJohXpPB5g0mwsTYCJtb0szU389h
+NaxEdzt6L5UBOLb4UPenpXJxWfQ9ffzKyws3LhxY319ffMY3d3dYWGheuB2
Np3CpBoyKGQYgNvB8EwKjU1nG3PpLCbf3oHv6wdu53kHsr1FdHcPh4jolfXN
26WqRRtqWAIvhruYJRRj9facHHVfvxI8hs8eo8QNX19XGxkRtmP71uSkeGM+
p6pyvcjXs7ysRK2Skfeljne71oAWzbx9fPWGrLFrjnLHxA4nDmmXRNrR3dOu
kKs3VtTq6PwpPT0RTjrenl4/fv+DgZ6enYPlzl1NCiV8lIFnB8f2yuS9X+P2
Tw5i19xey+2fGvr4kdtVyv7G+t2mxrbwoYnI24lp4TXdHhzkdPfOyRHkdgTi
G2P0+1If3p+VlsyiU1gshlgsLly6FNxeV1fX1NREpO6Qt4dHhIPbabjbyTBk
Ug0YEBRo0CB1NOEx2WxzJ2cz/yC2dxAXUndvEeTtrvEzs1asyVi0PCgtizZd
SHH1ZrqJ6C6CpLxcwu2QtysV8q7O9qzZmSAlP7FvZ0db9rzZ3l7CFcWFqSmJ
9XXVSoVEquF2zaq7ltu1cnjNabt+ze0S3O3t3d3tSsXgyuJ1hoY/rCtf2VC3
2VDPwMrCOtDfn2tkWLauSN0vwy6twkKG5fCa9zF9zu3jrf63uB1+o/6+/aUl
m2hUPpOJfbUhG//6D6IsA263sDAzNTWNCBc8fHBmBLkdgfjGGM3bHz1IT51J
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
tKjYoLnZzvEzaQJvmlBMdfOluggylhWSNZmBfvWaklXWlmbhYUElq4u7uvbu
3b0nLiampaW+vGy1TNoNYta6d0lrdsevd3tPT3dNzab6+toebK6wrrKy0vy8
nO3bW5UqBabWsWuppWsq2EwjPR0dPd0f9PX/bGREbWrahM2RMOZ2csjieLdr
qfuT6fp4t5OHSvYQPidrMqTbFQqpTKmurds1xdYV3gEuh0Hm7XwjrpmpsbW1
+ZRJxttbiuH9Hav5oZGQiH923o8LQrJ4lYMciPIOLPsS0uvHT589ff7i2cs3
r9+Nbjp6vRL+4t/iA8Q/cR54+eLl/v4B0EtTQ+Omyk1lpWt7u7tfvXh58/qN
C+fOH/vlyMG+/QPKvn5l38H+AycOH7949tytm0OPHz58TZgfe/rXhw/3L140
33aypaGBnrER39rCOiwkbEXRilkZmcGBQfOzs4ODAu3t7FNT093c3CfbTElL
y7C2thEIhHPmzEtJSctIz+rvO3Dr5r2rV27euDm8sWpjVHRkUFCQ2Nd/QHXw
5o3bQ0PXCLeD2IeGrl+5cu3ylWsnT546duTnXwbUJw4MXDp95OL5Y8M3L798
8YQQuZbgiZfiwoWTXt6uXB4D3D7d1SUxJTU7J6ewuGhV6Zri1asgyjdUBEeE
0nl0rhmXY8Jm8pkMIwY8BKsT1RgQO8eEx7cw4fA4ZtOmGoshY/fjegWwvHz0
XV1DsnPWNe/YvK9rQWW1oasHNn+7ELuWiuXtAwNymaQXstC+vo0V6xztbHw8
XFOT4/fu29ne1hYSFFhbg9Xbwe3YjUsS7eGO0o9vUB0/JHJsVCE2vxY+6XqP
Uqls3bLD2NgoOjqov0+5IHs+k06nUgy8vJzbO1oUil45lrtL+gcOzsrMpRoa
REeFLissKFyav3pVUUf7HqXy00WVL2fgmun3+A0+V7HXrNVrltz7lPiE8MqB
hbmruRwrDpPK44De2eSNSxbmJrZW1g42/N27l+Pv8lt8CC4C8c+OltixT5yj
VseuTj59+vjatasnjh/p71NJe3u6Ojo72jrhX/n+gUPnzl56/PgpsRMslSUk
/37k9avXT588fXjv/r07d2/fGr4zfPvcmbPt+9q2NLdUbthYXbUpd2FOXk7u
kkWLU5KSI8MjQgIDA0S+/r4+sAz294sIDo6LikhNTSjIy63cUNXZ3nP86PFb
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
JObemejJ7+nuOnWyLTEhhsdl8Dh8r9tx5EhLb8+Zzs5zSJb17nPQ6e/v27t3
v1DInzu3LNIU0bR2jctlyc6OHRrs6ew6i2UkeLoIyPcW6Xj63idE/jjDn1hL
xR4zjvcJj+nqAbYPXcpILyUSyQI+G1keYjMFHKaIz5EKuQqZQBMqjYwQvXzx
+EOE7Wge0MlMYZPtX28IAx+Ovvf+35qaGjPSk7BComajEdvUGRIcwuNwWUxG
YKAfEU9MiE3u7xn+6IPL8P0CelitZoVcCkhHa9WBLFWymWxcULC/32zgeXBg
EHSQDL3PPOszcxY8YV5O7vKGhu3bNqckJXFY3HBNREJs6ryaxRvXbWrdsWff
rn37d+/b37rnwJ69B/bthxl324mT7WfPgYbqONfeca6j/WxH24m2fXv2b9uy
7fjRE8eOHM3JSY3yukqKCz+5/Mk3N27fuH7r2tVrX1758ovPv7jy2RefffLZ
5Y8uf/zhP99/96O3/v7OG6+9+cpLf714/uXB/vNdHb1nTrUfO3Jyb+uB7Vt3
rW/avGZV84rGNUvqGxctXDKvtq66cl55SVV+TnFGak5CbIrbGW1BqmxHhmn0
MplSLJYKBEIulwuii0ljwF/NZXP4XJ5EJJZLpWqVTKtR6sPVBn2YIUJrNups
kQaPw5qenDC3as7OrZvOD/Z+8snl+8grjzWkfgdaoelf/AqjDx+9d3tlQz2f
wyQScWKxMCEhDmV7eU11JVC9DEbEspLYmCg6k8xi0xhMCp1BBgO20xkkOpOE
gZ1MCYGbJCqJrQkVedxiT6zcHSeLihe7o7z5xTXLVy5tWl/ZsFxgcUo8cXJv
vMrpWbt1yyCwvb9rsK93nNhwBAEPY9bqVctf/cuLmzc1HzywZ3iob3wtdSLY
xzcxPVGt6UfY3t3VceTwwc2bmubWwtA1B8aOjZuWt5873t2NeNpRtrfDnGHn
zp0iMb+5uRGmSKAKZFJhVXXOQH8Xsr9pQvb4H1o8/b9n+/fivQ/dLdXV2z44
9GJGegmFjJRGZbPoPDZLyGWJge0inlImCFNJrSbRa6+cffgd2ydF+2T7ifbg
8YZuq7n/+Wcfbt3SlJ+fmRAf5XE5I3R6AY+Px4WEBOPYTBaNQiUTCSIhT6fV
FeQVpyZmSMVymO0K+XyFTAYo43E5dCoVj8MhSQYCg4ICAgHsM6dPf/5ZJCsj
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
56K1OXqf8K5MRPoTS6UTlfw47ScaqG601saZ9vazR48dPHxkb3tHG5xBN64i
Ppm+vr6Wlj1isYJOo4VrNSXFuZs2rT59+jDycyjPMevsbO9ETiH9J7woTy+q
jt/7dGeCo+Z7fvB7Fmr7u8+19xkNbioV2M7kcpgCDgfYLuZzZGK+SiHWhEqT
4nRXPkFqMo6O3nsw9gmaxPv/3vaDbB9Fii0+uDt67cq1K59e+fjDj9/6+9/+
8sqLF84P9Pd17t2zY8uWdatWLV1cP3/+vOrKivLiwqKcrLzU5LT42ASvOwpU
a4TOGKpQA70FPCFQnY3UzuNBH/AORzCAPAhyMEzqk4kkGAvgCEYhk+Ekg0Zn
MZk8LlckECjEQHW5VqU2aMON4TqTXm+OMFiMRpfNFhcVDbq9ec3aE8dgIt99
5vSJTRub4KpAymMpiBMSYmOivV6P0+1yuNAKplZQ7RZUYUeaIkG+m4xmowlj
Pmh4owF5ZizzowX6BoMVbprgpN5i1FnRrUNOq8njsCbEeDNTE4tys+ZWla9Y
Wr9lQ9PBA3s62k+/eGno7X/87fPPLt+8cRW4/fgL/hBzbd27dw/rTJwl/Sfc
L9/f7t/bvH4dwnYSUSIQpiQkVpVXLJi3YPGi+iX1i+vrFm3asDEhNo4+xnby
uIF6R0pLUIiYkgdJD2wXPmK7wh0vccdyrc78Rcvi8oqiM3OLFy4VWT1SL8J2
jTtq486d5y8MDfZ1D/YC24fXNzetb169bu2KPhDAHd0rVzRs2dy0amVD+7lT
/X3fE9D+k2wfP/ME25HSHt3tnV1nwUCoY3tRu3pQBd7T3tF5pr+/t7l5E5XC
5nGZ6enxAPYTJw52tJ/pONc+VrLjKbaPK/aJ3J5oEx/w89n+dCgOcrOv79Sp
brXKSKPR+TwGh/09bE9L0l+78g94b0fv330wFut676c+B5Pt/7fth3X7g9GR
kXfefPOVSy++ePFSfy98+TrPnjl19MihvXtatm/btHbNqmVLFy9cML+6sqqo
oCgjLSPaGwNID1NrJSIpm8kBuU7Ek0KC8bigEDDoEEKIoMbhJKhxBg3Z5Q8d
NpMFeOdzAfoC0PCor0OqkItDlVJVqAxMo1ZoVHJNKGJatdKo17od1sy05AW1
87Zu2ny27dRfXnr58gcfXvvy6p1vvxm9d/ubm9c++eeHoPrOnmk7fOjArpYd
Gzc0r161YumS+gXz51aDuC8vLSrMz8vNzs3Jys7KyIRLT09OT0sCS0tNzEhP
ycnJKCrImVNaVFs1p25+zbLFdWtWNm5sXrtt88ZdO7bt37P7xNFD3R1nLw4P
vPHXVz549+0vPvvk5vWv7n5788HoXXSf11hY/IMH9x7cvwsMH0Eb1oHj/fuj
959qE174MfsP0/7+9s3rge1Ab6lQlJqQWF1RCUhftmQpZhvXb4iLjnma7eNU
xwzYTibgBSqVwuuVumLkrjiZN07kisqoWdi8Z//61v25tXViuxfYLvfEhbmj
N7W0oGzvQtl+fuOG9dlZqatXNSA+me7e1auWFxXmLG9cAuPj925W+km2f69o
7+lGUuwibnM0KgZlO1g7EgOJcPtcR+fp7u6zBw7sSUiMl4gkMGmk0wlarXzn
zo09Pec6Os6OIx3rjN+c6H6f2H+C8E+c/3HvzcRome/u7e87c6ZXG2ah0Wg8
Lp3NGvPJYGxXK8VqpSQr3fzN9feQt/bByCTb/3e2H+T5d/4YZCp39YvPO063
nTvddvjgwR3btzY3rQWY11RXlpYU5eXkpaekJ8YngkQHCaxSakCN0yh0oHdw
IA6zoIBg4DnAnEykYIunTDpgnMPj8EUCMeh5MIVMqZQr1KEqlTIUjmhHpQpV
YFQH04aFGg3hbpctLS2xqrKsuXn1ieOHX3n54j8vf3jj669H7twdHbkHx9u3
vr1185sbX19/7923X3rx4oXzQ2AXLwxfungeO8LN88ODL166APcODw0ASeAm
dhJunh/uv3Rx8OWXLvzllUt/e+PVDz9455+XP/js04++/OLTr69/8c3Nr+7c
vnHnzje3v/3mzu1bd+98C7/y3j3ERkZQu3sbTsJdYLdvf3vnzrd3kTO34TiC
PHIEk+hPCPUfahPfhSfO/Ds5/2B059ZNYj4XZbswMyW1prIKRHvjsgawlctX
bNm8JTY6GlQ9xnY4YkYnExGvO+KWGWM7lUgEtiujouSeWIU7TuqJBba7sgvX
tOzZcuCIN6tA6oyRRSXJvfFhHoTtFy4Og24f6usFtjevW7twQc3KFUuHh/qP
HTm+eNGCZUvrFtcvOHb0IOqB737Cl/405H8e28d0O0r19jFDbgKrO1Han0bt
TGfn2UMHji5aWBcf5xWLWRs2rBgcaG/vONPRAYQ/9zTbx/H+BMnHmTwxcvJf
8sw/HlfT1dvf29bWJZPqaFQal0NHdDuXA2CXCLhyRLeLVEpxfrb9zjcfo1EQ
k2z/X9p+Cu0PUbY/+PSfHx0/vH9jM7JVsLamsqS4EFRuSlJSXGysxxXlsDlN
BrM+XK8OVWNroJi/RcgXgaEuF6EIqUQtBhmPkVwuVSjloZihVA9VKdVYfCBm
ETq9x+VOT00pLSlYsnjhhvXrsJxRb/79tU8/u3zj5ld3794Cu33n5jffXL9x
A1j+9fXr8P/XwPmbN29eu/rVG6+//vKLL7506dKlCxcunj9/6eKFFy+dB56/
/NKlV15+8W9vvPbO22+9+fc3/vHW36Hz/nvvfPnF51e/vPLJPz8CmH/+2eUv
v/js6pefXb/25fVrV689suuoXbv2Fdj169euX7sGvxT5jTdu3Lx545tvbt66
dev2t9+iVL995+6dOzDY3LuL2cjoyOhT7V9l+8S7/n2fgvst2zYDGWgkhO1Z
aem1VdVL6hcvb2hc0bh85fLl27ZsTYpPoJEIT7AdRPs42KEDbKeTyUK1OjQ6
BpS50h0vj4oXu6Liiues2tm6rmVP8v9p77zjorja9v//7/O+z5tqV9r2XWCX
vjSxYE2ikV7sNUossWti771r7BW70nsHe6F3EAQRBcSexFj43WfO7mHYWZYF
jZjHcz3XMzk7O8wu7vI919xz5szshQ7u/sB2F99R/X2GY7ZfTk1i2H7l+LGj
S5csPHTw9yuXUiPDI08GHgsJPhd08VxiQgwD8CYDY7hsJ9zWn+3q3I7wnpAY
i9memAR5Pjo2LhKdTt29b9mSpRvWrzpwYHt4+NnExIg4NdvZYCds1+A2Jjk3
tGuwvcVpJDVqMilpqcHBMT2dVWy3trJQ2lijC5eUNj0dEdv79nac/YvP33/e
Z2Z+omz/TNUi29FZ1IZ3z57UxkWH/L5r06oVS+bPmz1t6pTx48aO8B8BWR3A
7vaj+49Dhgwd8sP33w0cNMh1YP9+A/oNdO3TD9y3tysYuN2rZx/McEjimOR9
e6PNBg/8bsj3Q/FglR+H/Ojt6TU14GfIivGxcWWld2oePHz6+AmahvEVmsPl
rz/+/OPlSyA5QLy+vv7Ro0eI50+fPkNobdQLwH3946KCwuzMrKyMzMz0jIK8
gory8pLigvtVlRV3y8rLSoHnd0qLCgvyiosK7twprqwoR1ei1j6orqq6V1F5
/17Vw+oHtQ9rah88rHlYW1NTV1tb/6ju8aNHj+vrMdHR65KXfsEIwP4HAjvS
XwB3lNcB7wD2v8F/v3nNZbtW6QY+N8Dr+vz00tvAo4eA7aZMvX3SuPFLflu0
bs1aBPaNm7dt3nr44KFxY8ZiqjfN7SKMd2xo43Opvfz8e3qPYAbJjLJz9xkz
b9HqPfs37D04ZeFSB3c/XJMBtu8/cZxhe+KV1JTLaVcO7N+7cMHs3bu2pKUm
Az4jwoIT4iOZgkw8+xbYzQ2Pwc9yq+stsl3t2IT4uHhUk4liWJ3868JlcHQp
Q7N7Gv/008i4uLD4OGB7NGa7htWQb0L4hEToLmIJzNlPsQnfwplTzadQvT04
OLpvnx/Mzcw12O7iaNe3lyOwfcGcEW//rml4S9ne/vrwB9qtfN1m2Y789u2b
VwV5GadOHt68ad3SxQtnz5w2ZfKECWPHjB4xyt/X38fLB5js6eHuNgwA/T0g
HogN3O7vOoAQvk+vPpDq+/Xt19+1/8D+AwehO9wNBsNDeArWw36WLlkafDGo
uKj4+bPnf/3558sXL1Aaf/y0HogKrqtHYbkeoPqcScovgKnPn79Uk1VFVwzY
B/erge2F+QUFefl5ObnQTbx49vwJ5G3I4tX3Ed/vlILvlJbA8m552f17lbDy
XmXF/ar796uqq+/DVg8eVj98+KDmIWZ7zaO62vq6Ongn0K3ox3Yc3dHskX+/
wuX113rhXR+260l+Pb8FJ48fRmwXiextbMePGbtkEbB9zeaNG7du3rx929Zj
R46MGzNaYSq1NDdjl9wJ22UiPlguFQHb7V1dew33d/Yd6ew90tF7hNLTx/+X
Ob+fPBeacnny4hUObmjou7PPiP6+/gdUbE++kpoKbN+/b++mjWuPHzuYAviC
JB0TGR4WBLk9KQFN9sXcEI85MZqgZRoBcHxcDMG7DsgnMqPTExNQUGcGq8cw
Y2bQ8JiEeDR4BpI5vNbRIycclD0dHRydnZTDhg3u2dPm0KE9KclxaN6KuFhw
bGx0o1GYj46PV+8nAZf0VUWb5tiuOgPLCvktDrNBTk5Iu3Tp6NFzcnN7ubnc
2gqiu9zOxpKZTMbWxVHp2tvRtZfjooVj372tRWxn5nR+R++p1376+GzXK/Yx
UwgyqHj7+vWrkpKChNjIUycO7dq+Yc3KRQvnzZwREDBh7Dg/H18PN3c8OVhP
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
FkSHhzg5WAtMuiuYejvkdlxsx2WZc+dOz/plhjmH7WR2XzLTr6lUatOnN+R2
O3dfe3c/pZe/pbv7sJ9+2nHoxPo9BweOGqt083Ty8HEc5tXXw+sQw/ZEhu1J
iSkXL5zbsX3T0SP7L19KCboQNHKE349DB0+bOpnJ7Yhp7GEtuM0ud7ArHjHM
Pc5JTlbXYcKZmB2Gczthr3rLCMJ2DPYIhts4rjMbhzFuhD/O9uEo3odhsEeg
nB8aHhaiTvvhbKu7kkaT4gy7OE/YTo4+2EWbuNiYlJTLc2YtgdxuaWFuYymz
sWhku729XS9nhwF9LFKTLjRgtqPc/pqy/TNUa9n+5vWbP168fPbkKeD9UW1d
zYOaajT9VnkZc/0nqp7kQ/LOzsliYjeTt3GAR6DOgBSOAnwmSyTP4xoLTvKF
jFABp6iYFFsax7c0rZmjIYtM1QXDHDBe8+AhmuaLZeiJ6h89wrGc0JuIFF6I
NMov5MypBtg1RshoqLlrZvVRc3V1Pdmue/AkW/Aq8C2Iiwp3srdCbDeVTp4w
CddkSG6/ePHcnFkzubkdz9/Otkwqse7T28nXx8HLH7Hd09/a0/P7MWO37Duy
/cDx78dMtHfzgtzu6O7j6uVz+NTJlLRk5oxhYlJCcuDxo+vXrTx8aG9qShIg
bc/uHZs3rZkzewYgFw1/bJrPCRK5tQ5tVZFwdiZnHIbxy8rS4Wy2Y25HhAfB
UQMT4FXG2G8Ee1hQeBgsQyPCw1QOC2MehuL0zra6j2hC+1h1T0QONNQdDXqK
VVZSOSY6Kinx0tSAuXxjCbDdztrc1lLRyHYHJbB9cD/La5ciGpiaDDOfzN+U
7Z+5dNTb37IuhPz71SsAF74CFAAIzARgMpcRMfVrQH1lZblazHDzEjI2hl1O
Jytx/GaPeCRXLaF6OGTv+3jPjSLXKzWe+nzYJIqz6yrwDhGpmXkj2ZmcC/Pm
eI6Rzr1aVuPCWKA3l/NaazJah0HqHtD+D4nJ7Q0JcVHO9tY8wy6W5qY/TZy0
euWqLZs3Yrbv2L41NCRo3pxZ+GwpMQntjXdfMhVLpRJbVzR/u6P3CGd3fwfP
4TZDhv26cfPmA0e2Hz05a80G6yFu9l4Q6X1dPXwOB55Mg9yehO4rnRAfv2vn
thXLF+3etfXypeQL588D1X+aNHa4vzczcAXieowGzwnANYCJTVBPSiWkgdrh
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
90A6LD3Z/qlBvm1sr6t9CGBn8F5RWVGempJ46OBeYPuB/XuOHjlw+tTx+XNn
Kq0tCNtJXJfLxOTuS8zN9UTAdmzCdom6eN40t4t15HamzK66MJMZvmgiEvDE
AoGELxTzBWA8UETMhxcCRCOewxJlbwHg2lBg3INn1J1J2l0Mu3c26NqpR5cO
3Tp/27XjN2BodO/SwaBbR0C6iWFXIDZkeAtzsdLG3MXJZoCr89DvXQHaY0f5
/Dx57JyZAUt+m7Nm5aKtm1bt27P1+JG9Z04eDr4QGBF6LjYqODk+Ii055kpa
/PXLSTevpdxGtZFLGbeuMkBGTM7KvE2M4cz4dk42bqTnqHCNljlZqttQYudm
5xDn5eTk5ebm5eQyd6jMKQCYF+SBiwrzkYsKAOylpcXA9vLyOzU1D2hup3p/
tRaD74+v1lL3LWvy+RbfjJ5dlf4v2r4ieNfKdtXlty+e1zysrrhbhssy9yrv
lpeVxMdFAdshvUNoP3Xy2ML5sx3trDHewXhgjMJUQm6WypjPnDNFiZ3gXaIC
tZBtwnY8VpAMF2Rvw1ybiS7PxENceChgG5gY9DDu0d2oe7ceXTp369gBjRjp
+FXnDl92+vaLzh2/gnaXTihjgyGNiwVGphK+hblEaaPo3dN+8IA+Hm4/jPD3
mjR+1C/TJi+cN3Plst+2bFzz+66th/bvDjx24MLZE2HBZ2MigxPjIlISoy+l
xF27nHTjasqt62m3blxKv3k5M/1qZvq1zIxrWRnXszJuZGfeyMm6mY18Kzc7
PS8nXbXMyczJycLOzc3GzlMbxWzGeSznq5Z56K7xufkFubDMI8b3ecdLMOZ5
MfC8qKCkuBC5pAgndgB7RUU55Hb4YPGFeFrr7UTtDQ+qT1ofEIb/hFr73j5D
tr94/gzYXl5WCokd0jv4XmV52Z3C6KgwCO0Q4ANPHJk355eeDnbO9rYOtlZA
eEjv+OQpvlOqTAQY5zHFEGbgCssiARrcIhax2S7C11eys7qAjy7zNzTojkeP
dO3SuXOnbzp3+rpjh686fPNFx2+/7NTx625dvjXo1sGoRyfgNiRtS3OJo9Ky
r4v9DwP7+HoMGeXvOWXi6Dkzpiz+dfbalYu3bFz1+67NRw/tOXvqaPCFU5Gh
5yFmJ8VHqmL2leSb19Ju37icfvMKxOzM29eygdXpN8E5GbfAuZm3c7Nuk2Ve
Vjo4PzsDuM1UQpBzwfghCtU5+ZCrmWV+Xm5eU3TnMUlbw/kcF+Tn4TSuYUxy
DZ6XlhSB70BWV8f1u3fLAOz37lXU1dXAZ6vjXCpRe8OD6t8hwkMddZsWman7
Z1vcJ/epBtZVV/q8GX3ep56/V/tSHUvP3A5JD93HvPxOZeXd+1X3qu7drawo
Ky0BvIcD3k8GHvll+s+9HJUujkonpQ1iu8IMcju6QSrEdREqjIh4RnyjHtg8
Q9XSuEc3w25dDLqDO/fo2ql7VzRcpGvnDl27dIQGPISnDHt0NTToxjPuIRaa
mMpEcjOJna2li7N9//4uP/44yM/Xbfy4EdOmTZo7d/qyJfM3rF26c/v6g/t3
BB7ff+70kdCgMzERwUlxkWmJMVdSE65dSrpxJQUR+9YVcFY6DtjXccBWORN8
IzfrVn5OBjgvOx03CnIz87Iz87OzCnKy83PQsiA3Gy2xc3MKwXm5BShaoyBd
kJ/PBGmcpQsL8wpRtMbtgoJC9J8mLuIacN3UxcXgfJWLVC4pBheUlhSUlBSU
lhaWlqp4XgZBHZAOWb2s9C4T1+Gzq4Ku+f69R49q8RhIcq0HZTvVh5IO6upm
ZhteSPeudL+ijjegZw+i/86bkz6IbttPNYd3Tr39ZW1tXQXQgbm5Ibqn4T10
UvVe5V1ACqT3w4f2/jxlQr9ezk521tZymYWpBPGcZyQw6m4M0O78bdcOX3f5
9qtOX3/R8cv/6fT1/3b+5j/dOnzRo/PXxt07Co27SQWGCqnA1kLm4mDdv7fj
kEGuXm4/jB7hE/DTuDkzpy75bd7aVUu3b1m7d/cWiNlnTh4OCz4TExkUFxua
lBSZlhZ39WrSjRupt25dunXrym1Uyr6elXkjKxMXQ25nZ2VgM/VqZsmcZ8Sn
GplcrTrnmNekMJKdx5hUSHARG+Vn5tQkXhYU5KmtarOzNNcoVxeiaF1cXNii
S0qKNFxaWkxcUqI2elgCyfxOWWkZuPxOGdMoZ/piyOrgSiauA9gx2x8/rlNd
uKC+LvVv9aWpWr/qVFT6S3u8bklte6G3zcT1NryTNvwK78/2DygdbGcTnntG
ta6urqqqqoIRumtt5T1SnLlTWhgbEz571lQXJxsLc7GphGcu5ctNhZbmYhsL
mdJG7uxg7drb8YdBfT2HfTfc133i2BEzpk5aMGfG8iUL1q9Ztnv7poP7dp48
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
t1bsIkx7f92oqKg+triEhzaJ7q9YN2ZqjvAa0Vr/wgh3S924/oO5c5CeANeT
w+8p3dVvfUjeZmLrWMNeT+swVFSfp3SwXSN5asBTK97fUzrit1aYfxwy6/hB
3dVvPQvjH0rc4y/Kdiqqz1ZctmNQYAQ1hzjdYb7N0hG/uTBvc2b+gPonEN0G
gGucLWV/ppTtVFSfp5pjOxfv7c7290R6mzP2R47flO1UVFQfUBqQf8MagMEW
4byOWnebqa5P2eRfxGGiVr0ZHfTWTXJuN93e3ykqKqr2F5ftWgGlNcZrqA1g
b5Hk7VgG+SekJ8B1iPvBEbXjt4iKiupTE5ftbJIQKHFhy2W7jkjfnPRP6W2m
6IdEc1vfQ5ulI6VTtlNRUemjd3pMF/lGPZCGLR1JXrf0qaX/E0UVPUs3Op56
f2i3mefc7dv7i0NFRfVJS0+2cwN8m0Wo/ilUy3X87h8e3zrVqqxO4zoVFZVu
6cl2og8C+XY53fmRWa0b163amJKcioqqDWqONm/1q1pzac9O4FyqtwrIrU3y
7cVqPaXnztv7G0FFRfXfoBax81a/JK+nWsX2jwNtPfX+bNdT7f2NoKKi+m+Q
BtvZkCEr9WG7jjVt1r8a0Vzp80G0uBkVFRWV/nqnJjmbRVww6sP2T4HkH5va
FMhUVFSfpLTySgfbddD+45Ocsp2KioqqRXHZroP2bYb8v4jb+qi9PzQqKioq
vfSumSI8VpvJ/JExrnvn7f1vTEVFRdUOahszPym261Z7/wNTUVFRtadaBcz3
J/MHZHt7/8tRUVFR/Zv0cTK21ldp71+dioqK6r9W/wTJ9VR7/+pUVFRUn5Eo
xqmoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKio
qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKio
qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKio
qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKio
qKioqKioqKioqKioqKioqKioqKioqKioqKg+cf1/5kaC0A==
    "], {{0, 281}, {500, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{500, 281},
  PlotRange->{{0, 500}, {0, 281}}]], "Input",
 CellChangeTimes->{{3.6997914616395655`*^9, 3.699791463893727*^9}, 
   3.6997915046957088`*^9, {3.6997915768003283`*^9, 3.6997915885636272`*^9}, {
   3.699792958712014*^9, 3.6997929680257807`*^9}, {3.6997937972098436`*^9, 
   3.699793806268525*^9}, {3.699803140526223*^9, 
   3.699803148876377*^9}},ExpressionUUID->"5ebda546-5133-4184-905f-\
5d6800e3f989"],

Cell[TextData[{
 "Connect the sensor to your computer, then evaluate the following input (",
 ButtonBox["need help on evaluating inputs?",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/language/fast-introduction-for-programmers/en/\
interactive-usage/"], None},
  ButtonNote->
   "http://www.wolfram.com/language/fast-introduction-for-programmers/en/\
interactive-usage/"],
 "):"
}], "Text",
 CellChangeTimes->{{3.6997125247443123`*^9, 3.699712579376305*^9}, {
  3.6997127004721985`*^9, 3.6997128136174693`*^9}, {3.6997129340482063`*^9, 
  3.6997129667085037`*^9}, {3.6997916542560883`*^9, 3.6997916545914288`*^9}, {
  3.699792990854224*^9, 
  3.6997929911425004`*^9}},ExpressionUUID->"43d42e3d-f93e-4351-821d-\
ee180e1c5fc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sensor", "=", 
  RowBox[{"DeviceOpen", "[", "\"\<Vernier\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6997124941990185`*^9, 
  3.6997125020005355`*^9}},ExpressionUUID->"2896181c-eac9-491f-9311-\
97d9b5e79604"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Sound Level Sensor)", 
                "Not Connected (Sound Level Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 2}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{209., {5., 9.}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Sound Level Sensor)", 
                "Not Connected (Sound Level Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Vernier", 1}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                   MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Vernier", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6997125044548335`*^9, 3.699712819986573*^9, 
  3.6997916793969173`*^9, 3.6997918349066415`*^9, 3.6997929944884315`*^9, 
  3.699793829546791*^9, 
  3.699803181858982*^9},ExpressionUUID->"f2f9372a-d3aa-4d07-ad08-\
5365e7f65fa9"]
}, Open  ]],

Cell["\<\
If the \[OpenCurlyDoubleQuote]Status\[CloseCurlyDoubleQuote] field in the \
output shows a green dot, you are successfully connected to the sensor. \
\>", "Text",
 CellChangeTimes->{{3.699712992687853*^9, 3.699713128029845*^9}, 
   3.6997139551135426`*^9, {3.6997917450319614`*^9, 
   3.6997917461280117`*^9}},ExpressionUUID->"d2eaabfe-a93a-41a1-86be-\
5340292f144a"],

Cell[TextData[{
 "If the \"Status\" shows a yellow dot or a red dot, then ",
 ButtonBox["click here to open the Troubleshooting Guide",
  BaseStyle->"Hyperlink",
  ButtonData->{"TroubleshootingGuide.nb", None}],
 "."
}], "Text",
 CellChangeTimes->{{3.699712992687853*^9, 
  3.699713128029845*^9}},ExpressionUUID->"a08c70e4-66bd-4132-b9d3-\
81924b434d29"],

Cell["You can now read from the sensor:", "Text",
 CellChangeTimes->{{3.699713897582999*^9, 3.699713944839697*^9}, {
  3.6997144347586184`*^9, 3.699714435439269*^9}, {3.699791708303795*^9, 
  3.6997917108549895`*^9}},ExpressionUUID->"9ab6ac8f-fa19-4f2c-b1f8-\
453d870dd8ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceRead", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997139262365284`*^9, 
  3.6997139315205917`*^9}},ExpressionUUID->"7a77bb6b-0833-40d0-8114-\
acae43bbbf65"],

Cell[BoxData[
 TemplateBox[{"54.88531891775685`",RowBox[{
     FrameBox[
      StyleBox["\"decibels\"", ShowStringCharacters -> False], FrameMargins -> 
      1, FrameStyle -> GrayLevel[0.85], BaselinePosition -> Baseline, 
      RoundingRadius -> 3, StripOnInput -> False]}],"decibels",
   RowBox[{"IndependentUnit", "[", "\"decibels\"", "]"}]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.699713931838897*^9, 3.699791683452804*^9, 
  3.6997929988067155`*^9, 3.6997938319406743`*^9, 
  3.6998031877559175`*^9},ExpressionUUID->"de85b55d-47e5-4f05-b0fd-\
b90ef0afb905"]
}, Open  ]],

Cell["\<\
You can also read the most recent values recorded in the sensor\
\[CloseCurlyQuote]s buffer:\
\>", "Text",
 CellChangeTimes->{{3.699714782022566*^9, 
  3.699714809703727*^9}},ExpressionUUID->"85c7b22c-8de3-49ea-9a3f-\
33264a53eb91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceReadBuffer", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997147560527315`*^9, 3.699714780031656*^9}, {
  3.6997148195917645`*^9, 
  3.699714820159308*^9}},ExpressionUUID->"e6aedd2d-96bb-4d3a-af87-\
a977a2624732"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["QuantityArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                   1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                   1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                   0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                   1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> 
               True, Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, 
               ImageSize -> {Automatic, 
                 
                 Dynamic[(3.5 CurrentValue["FontCapHeight"])/
                  AbsoluteCurrentValue[Magnification], 
                  ImageSizeCache -> {94., {1., 9.}}]}, 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "999", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"IndependentUnit", "[", "\"decibels\"", "]"}], 
                    Short[#, 2]& ], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                   1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                   1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                   0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                   1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> 
               True, Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, 
               ImageSize -> {Automatic, 
                 
                 Dynamic[(3.5 CurrentValue["FontCapHeight"])/
                  AbsoluteCurrentValue[Magnification], 
                  ImageSizeCache -> {94., {1., 9.}}]}, 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "999", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"IndependentUnit", "[", "\"decibels\"", "]"}], 
                    Short[#, 2]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TemplateBox[{"47.98279165967773`", 
                    RowBox[{
                    FrameBox[
                    StyleBox["\"decibels\"", ShowStringCharacters -> False], 
                    FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False]}], "decibels", 
                    RowBox[{"IndependentUnit", "[", "\"decibels\"", "]"}]}, 
                    "Quantity", SyntaxForm -> Mod], ",", 
                    TemplateBox[{"56.48873742634095`", 
                    RowBox[{
                    FrameBox[
                    StyleBox["\"decibels\"", ShowStringCharacters -> False], 
                    FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False]}], "decibels", 
                    RowBox[{"IndependentUnit", "[", "\"decibels\"", "]"}]}, 
                    "Quantity", SyntaxForm -> Mod]}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "StructuredArray[QuantityArray, {999}, <IndependentUnit[decibels]>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699714761109165*^9, 3.6997148112217426`*^9, 
  3.699791686014259*^9, 3.6997930009089327`*^9, 3.6997938346559763`*^9, 
  3.6998031957764354`*^9},ExpressionUUID->"6ee11d90-edac-42c9-9a8c-\
31ac646eaeda"]
}, Open  ]],

Cell["\<\
Or take measurements over a given time interval. In the input below we are \
measuring every 0.1 second for a total duration of 10 seconds. A progress bar \
is shown while the Wolfram Language is reading data:\
\>", "Text",
 CellChangeTimes->{{3.6997148495506096`*^9, 
  3.699714958894782*^9}},ExpressionUUID->"76250391-474a-424d-9747-\
79b8545985f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceReadTimeSeries", "[", 
  RowBox[{"sensor", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6997148340631*^9, 
  3.699714871168326*^9}},ExpressionUUID->"7c719e11-4dc6-4107-9c66-\
e2524ac02d4b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, {
             {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
              StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                "]],
               StripOnInput->False,
               FontFamily->"Arial"]}}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"14:06:40.478\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"14:06:50.472\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, {
             {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
              StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                "]],
               StripOnInput->False,
               FontFamily->"Arial"]}}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"14:06:40.478\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"14:06:50.472\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.09966897964477539`",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{{
      Quantity[57.214820880555976`, 
       IndependentUnit["decibels"]], 
      Quantity[53.14872872981305, 
       IndependentUnit["decibels"]], 
      Quantity[48.33121782605038, 
       IndependentUnit["decibels"]], 
      Quantity[48.21445981456754, 
       IndependentUnit["decibels"]], 
      Quantity[48.21445981456754, 
       IndependentUnit["decibels"]], 
      Quantity[48.21445981456754, 
       IndependentUnit["decibels"]], 
      Quantity[48.19463369328796, 
       IndependentUnit["decibels"]], 
      Quantity[48.097930467463804`, 
       IndependentUnit["decibels"]], 
      Quantity[48.33121782605038, 
       IndependentUnit["decibels"]], 
      Quantity[48.11772432419949, 
       IndependentUnit["decibels"]], 
      Quantity[47.9630428955576, 
       IndependentUnit["decibels"]], 
      Quantity[48.29149444600288, 
       IndependentUnit["decibels"]], 
      Quantity[47.9630428955576, 
       IndependentUnit["decibels"]], 
      Quantity[48.21445981456754, 
       IndependentUnit["decibels"]], 
      Quantity[48.19463369328796, 
       IndependentUnit["decibels"]], 
      Quantity[48.311352831826355`, 
       IndependentUnit["decibels"]], 
      Quantity[48.11772432419949, 
       IndependentUnit["decibels"]], 
      Quantity[49.56621180865361, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[48.48686028534475, 
       IndependentUnit["decibels"]], 
      Quantity[48.00138476853041, 
       IndependentUnit["decibels"]], 
      Quantity[48.021146360722206`, 
       IndependentUnit["decibels"]], 
      Quantity[48.175979851176194`, 
       IndependentUnit["decibels"]], 
      Quantity[48.252964679509766`, 
       IndependentUnit["decibels"]], 
      Quantity[48.11772432419949, 
       IndependentUnit["decibels"]], 
      Quantity[48.04091456131456, 
       IndependentUnit["decibels"]], 
      Quantity[49.15137242211418, 
       IndependentUnit["decibels"]], 
      Quantity[48.07930699198158, 
       IndependentUnit["decibels"]], 
      Quantity[48.29149444600288, 
       IndependentUnit["decibels"]], 
      Quantity[48.252964679509766`, 
       IndependentUnit["decibels"]], 
      Quantity[48.19463369328796, 
       IndependentUnit["decibels"]], 
      Quantity[48.11772432419949, 
       IndependentUnit["decibels"]], 
      Quantity[47.92472592413568, 
       IndependentUnit["decibels"]], 
      Quantity[48.097930467463804`, 
       IndependentUnit["decibels"]], 
      Quantity[48.156166557968284`, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[48.07930699198158, 
       IndependentUnit["decibels"]], 
      Quantity[48.11772432419949, 
       IndependentUnit["decibels"]], 
      Quantity[48.19463369328796, 
       IndependentUnit["decibels"]], 
      Quantity[48.311352831826355`, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[54.3516883603163, 
       IndependentUnit["decibels"]], 
      Quantity[48.8771463718955, 
       IndependentUnit["decibels"]], 
      Quantity[48.07930699198158, 
       IndependentUnit["decibels"]], 
      Quantity[48.175979851176194`, 
       IndependentUnit["decibels"]], 
      Quantity[47.90499659648777, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[48.097930467463804`, 
       IndependentUnit["decibels"]], 
      Quantity[47.98279165967773, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[48.021146360722206`, 
       IndependentUnit["decibels"]], 
      Quantity[48.272810237261574`, 
       IndependentUnit["decibels"]], 
      Quantity[48.021146360722206`, 
       IndependentUnit["decibels"]], 
      Quantity[48.19463369328796, 
       IndependentUnit["decibels"]], 
      Quantity[48.07930699198158, 
       IndependentUnit["decibels"]], 
      Quantity[48.04091456131456, 
       IndependentUnit["decibels"]], 
      Quantity[48.04091456131456, 
       IndependentUnit["decibels"]], 
      Quantity[48.13752478933574, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[48.21445981456754, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[48.097930467463804`, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[48.175979851176194`, 
       IndependentUnit["decibels"]], 
      Quantity[48.156166557968284`, 
       IndependentUnit["decibels"]], 
      Quantity[48.23429254424768, 
       IndependentUnit["decibels"]], 
      Quantity[48.40840337597592, 
       IndependentUnit["decibels"]], 
      Quantity[48.04091456131456, 
       IndependentUnit["decibels"]], 
      Quantity[48.11772432419949, 
       IndependentUnit["decibels"]], 
      Quantity[48.272810237261574`, 
       IndependentUnit["decibels"]], 
      Quantity[48.272810237261574`, 
       IndependentUnit["decibels"]], 
      Quantity[48.07930699198158, 
       IndependentUnit["decibels"]], 
      Quantity[48.04091456131456, 
       IndependentUnit["decibels"]], 
      Quantity[47.98279165967773, 
       IndependentUnit["decibels"]], 
      Quantity[48.11772432419949, 
       IndependentUnit["decibels"]], 
      Quantity[48.097930467463804`, 
       IndependentUnit["decibels"]], 
      Quantity[48.19463369328796, 
       IndependentUnit["decibels"]], 
      Quantity[48.04091456131456, 
       IndependentUnit["decibels"]], 
      Quantity[48.021146360722206`, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[48.04091456131456, 
       IndependentUnit["decibels"]], 
      Quantity[48.097930467463804`, 
       IndependentUnit["decibels"]], 
      Quantity[47.98279165967773, 
       IndependentUnit["decibels"]], 
      Quantity[48.00138476853041, 
       IndependentUnit["decibels"]], 
      Quantity[48.11772432419949, 
       IndependentUnit["decibels"]], 
      Quantity[48.21445981456754, 
       IndependentUnit["decibels"]], 
      Quantity[48.11772432419949, 
       IndependentUnit["decibels"]], 
      Quantity[48.021146360722206`, 
       IndependentUnit["decibels"]], 
      Quantity[48.05952596331756, 
       IndependentUnit["decibels"]], 
      Quantity[48.13752478933574, 
       IndependentUnit["decibels"]], 
      Quantity[48.175979851176194`, 
       IndependentUnit["decibels"]], 
      Quantity[48.38851272560856, 
       IndependentUnit["decibels"]], 
      Quantity[48.54430420547878, 
       IndependentUnit["decibels"]], 
      Quantity[50.14251768212824, 
       IndependentUnit["decibels"]], 
      Quantity[48.00138476853041, 
       IndependentUnit["decibels"]], 
      Quantity[47.98279165967773, 
       IndependentUnit["decibels"]], 
      Quantity[48.097930467463804`, 
       IndependentUnit["decibels"]], 
      Quantity[48.272810237261574`, 
       IndependentUnit["decibels"]], 
      Quantity[48.021146360722206`, 
       IndependentUnit["decibels"]], 
      Quantity[47.94446186018414, 
       IndependentUnit["decibels"]]}}, CompressedData["
1:eJwt0mtI01EcxvGttBqlY1KsUJqXlC5i8Eeb5mo5cRopmZIjKYy0hcgwGimU
DamQmiZWmBcMihRNKAWloOkUL/1zoCQERololkpK4BCXCN2+pxc/Pm/Oc55z
DifsQnHWxY0KhUL5fwr+zmy62i3XLCYtVgahSd6Bms27cF4fgn02Hf5sDkfv
x0hUafahPiMaL909iI+GJVxXHUK1KQGNDgPecRtF74ZkjE0248vK4zgtp4uc
XyZui89Gd2kODrjOYKjvLAbpz2O3LR+jn1uxaqEQPRE23J93GTMa7Dg6UoL5
/tfEesMNLLhajildt/CptwLPSU60Fd7DpbYaPDL1EO+r68S+5kbRd/Mx1g88
wU1rz0Q+thUdRe3Y3vQCtWOdIqfsxgfHXqPT/kaco6sXh7z9OCwNoVwso7XF
g3mTo/heO47XLR/Eu1VP4OeRT+I+qimsNcxgadlX0euaF/9g9TtaYn7gF+sy
LjStYP+kD29r11GX/QtTK5R9/8zy+OGc/xZcNm9FqSwQe1wa9K1ux2+Hd+Jp
RzDm9uzGiaUwjNgTibWWvdhRfQB1YzH4KkDC8lNxOF4Vj2/fJaLz91G0G00Y
dSUFB1vSsGH6BMaFnsQ/5qnXIA==
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6997149215158234`*^9, 3.699714970208624*^9, 
  3.699791699504302*^9, 3.6997930131217155`*^9, 3.699793846192891*^9, 
  3.6998032106200547`*^9},ExpressionUUID->"2e884d36-2658-43e9-b4e5-\
52f50cf04e7e"]
}, Open  ]],

Cell["\<\
When you are done, you can close the connection to the sensor:\
\>", "Text",
 CellChangeTimes->{{3.699715093126973*^9, 3.6997151147823043`*^9}, {
  3.6997917264876747`*^9, 
  3.6997917275351963`*^9}},ExpressionUUID->"d8e0ef9a-fead-41be-90b9-\
9e0b9c155d9e"],

Cell[BoxData[
 RowBox[{"DeviceClose", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997151157762537`*^9, 
  3.699715118959304*^9}},ExpressionUUID->"a2078417-e43f-412b-902e-\
1278fc801944"],

Cell["\<\
After you close the connection you can unplug the USB cable and connect \
another sensor.\
\>", "Text",
 CellChangeTimes->{{3.699715132446232*^9, 3.699715151894859*^9}, {
  3.6997917312557583`*^9, 
  3.6997917318233013`*^9}},ExpressionUUID->"137b965c-0035-4f01-aaa6-\
0219c54ba49b"]
},
WindowSize->{775, 872},
WindowMargins->{{275, Automatic}, {Automatic, 31}},
DockedCells->{
  Cell["", "DockedCell", Background -> 
   RGBColor[0., 0.35294117647058826`, 0.3686274509803922], CellMargins -> 0, 
   CellFrameMargins -> 0, CellFrame -> False], 
  Cell[
   BoxData[
    TemplateBox[{
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1: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
4//WLMsl
         "], {{0, 65}, {170, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic], Selectable -> False], DefaultBaseStyle -> 
       "ImageGraphics", ImageSizeRaw -> {170, 65}, 
       PlotRange -> {{0, 170}, {0, 65}}, ImageSize -> {170, 65}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {100, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[100], Selectable -> False], 
      StyleBox[
      "\"Sound Level Sensor\"", FontColor -> GrayLevel[1], FontSize -> 36, 
       FontWeight -> Bold, FontFamily -> "Helvetica", StripOnInput -> False]},
      "RowDefault"]], "DockedCell", Background -> 
   RGBColor[0., 0.45098039215686275`, 0.4666666666666667], CellMargins -> 0, 
   CellFrameMargins -> 15, CellFrame -> False]},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 525, 10, 68, "Text", "ExpressionUUID" -> \
"baaf8659-8a79-40dc-b974-a4e326deb9e3"],
Cell[1086, 32, 608, 11, 87, "Text", "ExpressionUUID" -> \
"ca784e85-e227-4421-bb13-3b249a627a9e"],
Cell[1697, 45, 76265, 1254, 296, "Input", "ExpressionUUID" -> \
"5ebda546-5133-4184-905f-5d6800e3f989"],
Cell[77965, 1301, 754, 17, 30, "Text", "ExpressionUUID" -> \
"43d42e3d-f93e-4351-821d-ee180e1c5fc5"],
Cell[CellGroupData[{
Cell[78744, 1322, 235, 5, 30, "Input", "ExpressionUUID" -> \
"2896181c-eac9-491f-9311-97d9b5e79604"],
Cell[78982, 1329, 16542, 348, 72, "Output", "ExpressionUUID" -> \
"f2f9372a-d3aa-4d07-ad08-5365e7f65fa9"]
}, Open  ]],
Cell[95539, 1680, 377, 7, 30, "Text", "ExpressionUUID" -> \
"d2eaabfe-a93a-41a1-86be-5340292f144a"],
Cell[95919, 1689, 354, 9, 30, "Text", "ExpressionUUID" -> \
"a08c70e4-66bd-4132-b9d3-81924b434d29"],
Cell[96276, 1700, 274, 4, 30, "Text", "ExpressionUUID" -> \
"9ab6ac8f-fa19-4f2c-b1f8-453d870dd8ba"],
Cell[CellGroupData[{
Cell[96575, 1708, 198, 4, 30, "Input", "ExpressionUUID" -> \
"7a77bb6b-0833-40d0-8114-acae43bbbf65"],
Cell[96776, 1714, 571, 11, 48, "Output", "ExpressionUUID" -> \
"de85b55d-47e5-4f05-b0fd-b90ef0afb905"]
}, Open  ]],
Cell[97362, 1728, 242, 6, 30, "Text", "ExpressionUUID" -> \
"85c7b22c-8de3-49ea-9a3f-33264a53eb91"],
Cell[CellGroupData[{
Cell[97629, 1738, 253, 5, 30, "Input", "ExpressionUUID" -> \
"e6aedd2d-96bb-4d3a-af87-a977a2624732"],
Cell[97885, 1745, 11906, 232, 72, "Output", "ExpressionUUID" -> \
"6ee11d90-edac-42c9-9a8c-31ac646eaeda"]
}, Open  ]],
Cell[109806, 1980, 361, 7, 68, "Text", "ExpressionUUID" -> \
"76250391-474a-424d-9747-79b8545985f0"],
Cell[CellGroupData[{
Cell[110192, 1991, 277, 7, 30, "Input", "ExpressionUUID" -> \
"7c719e11-4dc6-4107-9c66-e2524ac02d4b"],
Cell[110472, 2000, 17992, 456, 72, "Output", "ExpressionUUID" -> \
"2e884d36-2658-43e9-b4e5-52f50cf04e7e"]
}, Open  ]],
Cell[128479, 2459, 267, 6, 30, "Text", "ExpressionUUID" -> \
"d8e0ef9a-fead-41be-90b9-9e0b9c155d9e"],
Cell[128749, 2467, 197, 4, 30, "Input", "ExpressionUUID" -> \
"a2078417-e43f-412b-902e-1278fc801944"],
Cell[128949, 2473, 292, 7, 30, "Text", "ExpressionUUID" -> \
"137b965c-0035-4f01-aaa6-0219c54ba49b"]
}
]
*)

