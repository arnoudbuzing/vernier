(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    153665,       2859]
NotebookOptionsPosition[    146203,       2708]
NotebookOutlinePosition[    151714,       2816]
CellTagsIndexPosition[    151671,       2813]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
The Light Sensor approximates the human eye in spectral response. Use it for \
inverse square law experiments or for studying polarizers, reflectivity, or \
solar energy.\
\>", "Text",
 CellChangeTimes->{3.699715254464568*^9, 
  3.6997916443859177`*^9},ExpressionUUID->"1e8e5e73-bc6f-4d60-a3f9-\
b9a79adda570"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQdcVEm6Nn7/X7j/e+/uZGecMSeQ2E3nTOcmBxEkowgoKBkkqqCYdRwj
Rsw5YhZzHNMYx4iBnOmcA/DVOQewCTqzuzO7s7v1/B6PderUSd30U2+9VfXW
yMkpAVP+13/8x39k/BfYBERn89PTo3PHfw52gpIzEqYmx8V6JGfGTY1Lp0/+
3yDz2//vP/5DA/4h6Q4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
CAgICAgICAgICAgICAgICAgICAgIiN8C7Sj+0U8BAQEBAfFbAmo7BAQExL8e
fittb/8rAM76228MAQEBAdEHvbW9/YMq3dYTFktb218j6OiluraAFkD0eih7
XBLV/m5CQEBAQPwlsFLQTsFte6+l3eLfXQP8Li6cnnVK1y4Q/raOjm5ChYeA
gIDoH92Ws6ULiAmOms7W0voXXxaY3Waz2WQ0Gg0Gg16v1+l0WkCtVqPRqAEB
wBbkgKNmkwnc7lc8J/JUZjNyYbPFBP4HT9sOewcgICD+7YE6TwAQdTSZTIiS
t/2CPFo62nVGg1KpaGpsrK6ufP361fPnTx89enD/pzu3bt28ce3alcsXz58/
d/bM6RMnSo8eOXzo4IED+/ft3bN7187tO7Zt2Q64tWTblpKtJZu3lmzcvHnj
po0bNm1cv3H9+k0b1pds2rC1ZNP2rVt27di+b8+uw4cOnDhWevb0yYsXzt+8
cf3BgwevXr2sqamRyaQGo/FDb4S9CwBI9KiSICAgIP61YO0Vf2+Qo+i3PNBF
jVYrlcrq6uorKirKX736+cmTu7fvXLt29dy5suPHSg/t37t7x7ZtJRs3rl+7
bs2q1SuWr1y+ePmyJd8vWbR00fyF8+cuKCqcWzCzMD93Vl72zNys/NwZ+TmZ
s7JnzMrJmp2LbJF0duasnBn52TPyszLzZ2QAzsxCmT1jZhZSuCAnqyA3uzAv
e86svPlzCpYsmPfDsiVrV63YvGHd7l07jpWWAs2/ffvWs2dPq6sqZVKp0Wjq
++adVRfQ+X8Dq/5f/PUgICB66jlmvvZbDBzS6XQKuby5uRmYxC9fvbz/4P6N
mzcuXLhw4sSJAwcO7Nq5c9vmLRvWrP1h8dLF8xbMm104Kycnd0ZGdnpqVlpK
ZmoS4AzAtKTsjDSQnzsjPSczLSsjdQY4mpKUnpKYljQ9PXlaRkrijJSkrNTk
TqYkZackZqcmYemslESUSSAnJzUlJy05Jy0lB1w2eXpm0rSMxISMaQlp8VOS
4+OSp8YkxcYkTY1JS5w6IzVxZk7m4vmFxauXg7rm1KlTt27dLi9/XV9fL5fL
DUZDvx9Lt4PpX0kKu3ufe33vvxfa27r6XtrRNMruQ21t7zOtD/1ToR2O1YL4
w8BawPt1RLSjdqzJZNLr9XKZrKaq+ufHj69cvHD44IEtJSUrfli+aMG8ojmz
C2bnA84pmF00p2DhvKKl8xcunjd/fuHcotmFhXkz87KyMjKSUxITpk2NnTJ5
4uSJEZMiwyZFhE4MD4kKC44ICQoNCgj09/H38fTxdPNyF3tIRG5ivkTIlwh4
Ej5XwkMo5rmKXNlCDkuIbVGCHAnP1UPI93YT+Xm6Bfh4Bvn7hAcFRIeFTI2M
TJwcnZYwFYh/fnpaQVZGYU767Ky03LTE9GmxSXGTEmImTYmLSUqcnpuTtWzp
kp07tgGr/uXLl9LWVvCywG7v/jTAf+jvFu0U/tf47f5ztkfafy3be/LXlEHY
1t9Z3f3uH/rIrA61wz56iH8w0D9eC+pqNqN+ZsyCsy5iNBibm5pfvnj54/Ub
J44e21GydfXyHxbPmzt39syC/NyCvJzC/NzCmXkF+TmzcrLyc2bk5WTmZKSl
Jk2fFj8lNiY6KjIiNDg4wM/fx8vL010sEXEFPBaXw+AwaWwmlcOkutLJrjQy
B5BO5tKpPCaNy6SwaUQWhcCiEphkPIviwiITWCQ8i4RjgV0ynknEMQBBgoxn
kNA0CYeUJIPyREAWhcgGWyqRTadw6BQuiybgMN2EXG93UaCfT8SECXETJyZP
nZqZnJSfmTk7Jxvx8MxIz0yZnjQtLiF2UnxMdFpyEqihNq5be/bUyec/P5FL
W99/ZphzHnxaJrQTFtP5f8Ixlf/yjqZ/ILBBuP/op4D4N0J3oxvrN0TEvI/n
3GwwNtTV//zk8bXLV0qPHNlaUrJqxcolixYvLCqaVzhn3uzColmFhbNm5mTP
SE9NTkyIj4uZHBkRFjxhQuD4wIBxAeP8x/n5+Hl7eft4ePi6iX1EQjceV8Bi
cGlUDoUEZJnm4kjDO1DxDhSwxdnT8Y4sF2c2Cc+jk9w4dC+Bq5+A6cOjenMp
vlyqH582TswMdOMEu7sGe3BDPHihnvwwb0GEryjCTxzmKwzzEYR684M9ucEe
vPES/jghz4/v6sVhuDOoIiqJQ3ahE51pREdwUzLegUZwZADxpzNdOVyJSOLj
7TM+YHx4cEhsVGRibGzatPgZyYk5qak5aakzUlPTkhKT4qcmT4vPzkhfNH/e
tq1bz5WVvXz+XKfVWH+e6CgegwX5JP+ZjHmLBfne9Xrd/fv3d+7cAbBr185d
O3fu2bN77969+/bt279//4EDBw8eOHQI8ODhw4eOHAE8fPTokdKjR46WHikt
PXqs9BgCJHWs9MTxYwhPHEeJ4uSJk6dOngI4iWxPnwE8fQZhN8528jRKNH32
7DmUZdhu2dlzZWhOWRng+XMoy1CeP3/h/IWLgBcuAlxCeOnypUtXMF65fOPK
5ZtXrty4euXmtas/orxx7dq16wivd/5/7eb1a+ghZHsL8Pq1Wzeu3wa8eePO
jzfv3foR4e1bd+7cvnPnzl3Au3fv3b13785PP93CeO/ej3fv/njnTmeR23fu
3btXX19nNhth5Qnxd0C7dc9gHzE3GAwtLS1v3ry+99O9i+fPH91/YOv69auW
LVs0Z25Bbm5uZkZWRnpmampmSkpGUnL6tOmpiE8lLioyckJQkK+Pj0Qs4XI4
bDqNSSbRCQQawYXmgmcQ8RwSQUgmSWhUDxbTj8+d4CaJ8PGeHDguISo0fUp0
fvK0gsyUOdnp8/Ozl8yd+cOiuWuXL968dsWOTcX7StbtLyk+sG3dwe0bju4u
Ob5/++lDu88d3Xv+2P6Lxw9cOnnoyqkj186WXj9beuX0EZAGOeBQ2dG9pw7u
Pb5v95GdW/eVbNhevGrjD8tWLixaVJhbkJWSMT1ualRIxHhvf3ehxJXNoZJp
Ls5knAPZ2YGOx7lSKBIOb5y7Z0Rg0NSJ0eAds9PTc2dk5oIXT0lKnp4wfUpc
YtyUjOmJc2bOXL+u+Pjx0gcP7zc0NbS1v/8wLW0Wk9kIPmb0E/6j/6pBowNs
Gxrq161bGxQYACrmCUHjxwf4B44fFzQ+AHBCYEBwYFDo+KCwgKDQACSBbcOC
JkQEBUcEhURM6GRYSFBoSFBYyITw0AlhnQwOCwkOB9vQ4IiwECwRHgbSoe8Z
GhKGMDQsJAQlmggNCQ8LBwT5oSEhoWh+OGBoWGR4eERoeGRoBNiCY8ghcC6K
cHAoIjwSYUQ3oyKjACdOnIQwChBNTerMiJ40CRAk0TywEx0N8iaCzOjJ0ZOx
49GTJqMEOdGxMTGxsXGAU+JQTImLjYuLAYxFERMbMxlkxMXEgHOj9u/bo5DL
OpD2HTTdIX4XWHeN9crXaLTNzc2VFRWPHt6/eL7swL4964pXL5pfNCsnKzs1
BemjTE4GBHZsRlJiCrDOYydHR4aHBozzFYtFHDaTRCTjnIiODgRHB5BgEF2E
NKInm+zHZ4Z4iaLHe8eHBSRPjsqePq0wM2NZQcGG75ft3rihdPeustIj1y+U
3f/x+ouH998+f1pR/qLm3eu6mormxlpZS6NSJtWoFHqt2qTTmo16i9nYjvw6
fmHIes93bgNnGfVacB25tKW5oba28vXrZ08e3v3xxqVzp48d2r99U8mqxcvn
5s1KjU+ODokO9Ap0F7hzWK5kMhOPp+GcmQQXIYPu7SYKmxCYNDUuf0b6nJm5
c/JzZmakp02dEhsVMTE8NG7ypJyszLVrV505c+rVy+etLS3AeLf6eN93Tv5W
X+VvDlDLg+27d28XL5zn7+0e4O3m5+nmKRF6SgSAHmI+2Hq7if3cJOAb9xGJ
vIQCTwHfk8/3Egq9hUKw9RIIvPh8Dz7fXciTCLhiAU8i5In5rmI+R8zrpIjL
FvE5Ij5byGUJXZkCV5aAy0K2gBwmn83ksVk8FpPHYnRu2Qw+h8XnsEE+l8VE
yGRwQaOPDQ4xkQST4cpisJk0FoPKpFNZDBpCYFcwaGyUII0QHGUQWUwii0Vm
sUhMBoFBd2HSyeAQg04FZDPo4EQmg8RgEJBiTFCGyGC4AILCdKoLlYpDSMFR
yGBLpFJJVAqJRiHTsC2RQMfhqCjpeDzDxYXqgqOSCQS885jRI4rmFjTU13cg
jSPzP/p7hvgXRC9dQUx3s1mn1wMT/dnTp6C1u3nTpmUL58/Jzc7NSM1OSwbb
gtysQsRtPiMrIwWY5lFhweN8PMFvk0Wj0Eh4KtEZ2LrgT5rp4sIl44GYu7Np
fmLXMD+P+MiQrOmx8/PS1ywu2r1pzamDe66XnXjw4/XXz5411lSrpK1GnRa0
HH7VY/cXQwbpEUBjB5it2BlNoPcIhV8alt5uNOvlypaa6tdPH96+eu7Eod1b
1gHzPj81MT4qLNTPy1fEk3AYrnQKm0riMqgSLtvPXTwxODA5fkpeZlphHjK0
MiclJSF6YuSE8eAjAob9utUrrl+52FhfazQYravRP66yA21Hv463b8qXLiwK
C/QLH+8dMs57vI/HeB/3QF+P8b7uAT5uAd7uIGect/s4L3d/Tzc/DwngOE9k
F1QEfu4S8Mn4ArqJfCRCZOsu8hILvEQCbzHfW8L3AgQJNwFCJM3zFPO8JDwv
7JCE7y0W+IiF3iJwCh+jp5CPni5EKcAILuIp4iGHQELI9RDyPERIheIu4qF1
EN9TLPAQIUTrJqGHGKmbPESuHmJXd0ARIMddyEFO6aKHkO8OLiLigkNuIo5E
yBILmQgFDLGA5SZgSfhMMUqJkO0mRCosEY8t5rIFXGQL6M5BCNqA7lyOO5LD
cOOzeUw6Ee+0ZPGCxsaGjq4KFALir0dXLx42kMNkMZssPXwvBr3+7ds3Vy5d
2L61ZPGCBfm5OVlZmdnZWYV5eUX5Mwtyc3LTU5KnxMaGhwb5+0qA+eXKZDMp
DBqRQSEwqS4sCoFDJXAoBAGd7OnKCfZyT5gYMjszae3SeYd3lVw/d+bl4wf1
1RUqhdSg15mMBjMymwl9gD4Kiw42QPuZ2tvN2OT/nqPgsGgAVqZv24fYYcX3
5bFrYImu0DJoVj+fGjbp1QTMfI2ioert0/t3L54+tn3T2vmz85JjJ4X4errz
2Hw6hUcj8egkEZflLRFO8PeOjQhNj5+an542KyszKzU5IXpSVFBgdMiE3LTk
bZs23LtzV6VQdN0A7dqwmC1tlm5f/B9E8E2o7Lx4/nTOrNwgP89gX/dxnmKg
wL5uAowefJaASeHSkXfnMkg8BolLJwIKmGRe164rjehKJ/JoBC7FhUclcKku
HBKOQ8K7knFcCiDelYLrJBmldZoMirlgBKdgJ7KJODbRmUMCxLGRHIRMgiOL
6ASKccHfIQnHIuJYIJPoDLYcigugK7g1ncAkObLJzhwKjkVxZlGQMgyCM0a6
ixOTiEO74EEb04lJcmaRcSyyM7gInYCjAeKdqHhHKg4hSCO7OCeqM5JGeuqJ
jnQXR5qLAxVvT3EaS3KwoYMnZFHBb4RJJzFpZAYNbF24DDKDhHe2swHt38YG
qO0QvwXaO4AJi3TqmYGMvJd0pVz2+OGD46VHN6wrBn9vc/KzCnNnFCAzgDJz
MtOSp0+PjY6JCAsLDPD3dXfz4PPEbBaHDtqbOLKzPQVnxyDY86k4bx4j3M8z
JSZyXu6MTSuWndi388dLZc+ePKytrpS2NGnVSvMHZnp2PVqnKY4KeKeIv7e3
rYYx9xxk3QMfHL/WZzhbT3TKu7VZ39Y9sq2fZ203GfRKhbyxrvblk/tXy07s
3ly8sCA3MSYy0FMkYlE4ZDxSwbHo3hJR8PiA2OiJqdMTslJTslOTU6bExIYH
TgoJnBYXu2DOnEP79z979tTUNU4e3Bqb8YoEQvstv/i/Hpjd/uzpk5k5WQHe
HoFeHt5ikYTP9UJsaYEHjxPi7zUrM2XVornLCvOWz80HXDYnb1lhLpIuyls5
f9aKeTOXz8lbXpS/fE7OssJssF0+FxzN/aEo/4ei3BXz8lYtmLlyQf6KeZ1c
OW/mqgWzQeaqBbNWzZ+5av6sVQtnI2lkdxaWv3L+THDiivn5SKIo74e5ecvn
5H5fmAUujhaYvRIrj5YE6TWLZq9eVLBmUcHaJQWrFuSvXjhzzeJZKGevXQzy
Z69Fj65eOKt4cWHxkrnFi+cArls6d/2yog1L54KcNYvnrEEzQXrdkqJ1S4uK
AZcgh9YumrN2USE4tH7Z3A3LQE7h2iVIeklBlr87jwh+IFRg+RBpZAKVTKBR
iBw6hU50xtmOAi276qrKDqjtEH8DsE5SYBhah+FSyOQvnj47X3Z266aNi4uK
8rKyZqQhE4Ky0pKzU5NSE6bGT4qKmhA4zh20R13ZVAoV70x0GEu0s6E52vHJ
eD8ea6K/V3rsxAU5GeuXLTy4bfOl08cf3b39rvyltKnBpFP3tT07hwWi3bUW
jJ0zWHvEYPwj2KydPh+sisHCJnTOte2j9xaTStZa9e71g3u3Th45tGk1ELDU
2PAgbyGXQyYwiHguneotFkaFBKYkTMlOS5qROm167OSokOCQgPFRYWGZGWkb
1hdfvXKltra2+5Jt6Lga7H5/3/fuDTM6TubJ40e5MzLHeXmM83T3FAslAq63
mwi8lJBFn5Ob8ejOrZb62saK8qbqd03Vbxur3zRWge3bppp3LbUVLTXvmmqQ
dFNVeWP1q6aa8qaaN821b1vq3jXXgsSb1rq3rfXvWuregBzA1lqU9e+kDRVg
21qPHJWCMrVvwbaTtchuC8gEp9S+aal53Vxd3lz9Cmxba163oteU1b0DBCWl
Na8R1oKcClltpbS2UlZXKauvkgPWVcvrASsV9VUKJFGlaKhWNlQpGyqVDRVg
q2qsUjZVKZqq5E2VgCCtbK5WIUQSyuYqFZJZqWisVIDCzdXq5mpF/TtFQ4VK
Wt9QWV6UP0PsSuezaUwykU4i0MCWSuYwqKBRQLAfkxwf9/Pjxx2Ivx32pUL8
ZejuJLXO1Go19XW1927fPrBrz7L5C4CYJyJD+BJmAMMyPS0tKSkuOm7CuEAx
l89wIZLs7UljbemOdlwC3oPFmOAhjpkQkDl18pKZWdtWLz9zcO/961crX7yQ
NzcDi7PX3YEMWrCJTEajyYi5X1Dnyh9Auv9qgOdHhd7UaWAD+bV+nXZQY7a8
fvHkUtmpbRvWzM1KnxoW7C/i82lENgnHY1C9PSQTI8NTpk/LSEpMnDIlImSC
t4ebl4dk0sTIJYsWnT1z+s2b1xq1uvt6WM3S9uFpv7/zy7YbTSawffTwwYz0
FD8Psa+b2EMscBPxfN3FXhKBkEXdsGKJQtqMFLYYUF+apcfcnR4tKTN61NJV
ps1q19LjaLsZYUcX24ygAu1o66LF1G4xdrSZUZrQwiDfgBDkm0HC2A5owWho
N+nbTDokAU4EFrLFDLbtwM7ppskM2GZC0ujW2G42tJv1bWY9eha4GvgQULYh
t24zGwCRBJruLIPtWowWoxa5XUe7TqPavW1TfHSEj4eQjHemEV2oZGC9E1lU
Mp3gDNq8USETbly9hn3Lf/8vF+KfF5iqd2tCGzr3v6LizamTpd8vWZCeOD0x
JiZz+rS8GRl5WZlpSQlRYcFeEhGHTqPgiYBMEplPobmzmQESYXSgf8bUyUsL
8vdsXn+17PTrp4/lrQ0Ws77v7brHw6MhE//6WdV/8NEjGDqrTrRBhDZDesST
MRl19RVvrped3bRyeU5KfOR4P3cBl02nMmk0PoftKxFFBY2Pnzxp+pSY6Miw
cb6ebkK+n7dnekrS3l3bXz1/qtdp27rMub+ztr/3VaG9ACDn4YMHKYnTvCUC
b5HQXSiQCPm+HhIfN5GEw1i9ZH5TXaWlzdjSXC+XNSvkLRjl0lZ5q1QuRdkq
VUilClmrvIsKObKrlEsBFR+gTAou0oKcJW1B0lanS1ubQY6sFSHYlaEFZCAT
y5e2gALWlCFngZItMnmTXNYok1pRhlLaKAWUIVuZFLsI+pwyKcpWRWe682Gw
55F1pQEVXYnWliZwO41KUV35bv/OraClFuDrQXB2oBLxiFuGRGRSyAwijopz
CA8KuHLx4t//+4X4p0YbFvO2y4+nVChu37mzacP6/Mz05IS4jKSEmVkZs4Ck
JyZEhQR5uwkFbAaHTmVTiBwKgUcjunEYQR7ihIlhi2bnHti66ccr5ytfP1fJ
WoEFjghOd32B2FhtFsxCt5Lyv33y5T+FtvdFdy9tdw74uHRqVeWbl+dOHVu2
YG5MeIingMunU3k0ioBB8+Bz/b3dQ4PGTQwPjgwOnODj5YWMAOHHRISuWLLo
2uXLMpms+8rdrqy/wyfT9fl33ujuvbsJU+M8xQIfidADaDufh2m7iEVf9/1i
aXMd+ENQyJo1aplWrdBqFFq1XKNUqpUKjUoJiCXA56ADu0galFEiW7XSiqr3
aQ1Iq9QqhVop1yJUIGepkRMRgoRS3kWFVqXsLKCSo0TSaoUc8H0xcC+EMo26
VaNu0ao6qQFUo+xOg61SqkEviFy5i523Rh8JI5ZWKaSA4Bbazl2ZQt6qVskN
ek19TfX+nVsyk+J9PSVEZwcayQXxyVDI4IfGJDgTHWxjIsLu3rrVAbX9b8Ov
GPT2zw3MSQ3eDvz6jab3Q+waGurPnjmzeMni1PTUtMTpeamps2dk5qQlT4uN
DgkKQH6ebDqHgqe7ODJJzhIuIzLQb1b6tK2rl106dfTF458a62rAH7nFbOp5
L1TVkeErbWjsdXM7xveN8b9V3f9pvqm+nbRIRdeGfDRtyGTy7ncw6HXNjfVP
frpzYOeWgqy0MH8fPp3EIDi50ohiLsNHIgjy9Qod5zfBz8ff3c1TCFRUFBY8
ITc3d/fuPU8ePzF29USDigNIPPiKwRf9e01xRRdJ6UBnq92+devUqZPrioun
TJ7kLRF6ifnuAr6bgO/rLgY6L2TRNq5YKm+t7+gwauTNerXMoJEjVMv1KrlO
JderFYBYwqBRGjUK7KgByQclFSCBUNMPwVk6pUyvkmFlQPlOgqupZF1ELmXo
vH4n9eiJ2Lndp6A3VRpUCLGnQnbVKr1K0YsGVddTdVHfeXfkajqVDGNnWilF
iD4MuitTy5rB1qxXN9VWHdhZkj49ztddRMI50kkudAqJRiWz6RTwvTvZjMhJ
T3n7urwDjm+H+CiAsYj1UWK7QHAr3r07c+rk8mVLMlKTgdGVkjw9JzMzJwPY
EfHhQYFuAi6DRKA62bPwDp48xuTggILslK0bVl46e/zVz4+kjXWo+/Q92pHm
ORobBQ2P0tZDe7uDJPUdlPKvjg+/LiLCbW0m1GFjXU8BA+/1y6cXzpSuWFqU
EB3qzWOy8XZMZzsujSThufp5uAf5+wX4ArvYnc9l811Zvt7eyYnTNq5bd/3q
larKCqDq3ZdqQ7szwDfymzls0cfEliAB9ced6zdnJCdNCguZPiU2JioMaLuH
iCcR8Ny6fDJA20vW/qCSNnZYDGppE1A5VEIR7e1SV3k3geoatai8Y9reqbeY
fsr70vrcXnpulZZhSq7vcZaV8veoPoCwqwB1KlBxgAcAabUeSH1vdtYj/T4J
uJdWIdUqWtEXlOq6JL0rX6qStSDarlM11VYe3LktI3Eq+KAwbWegM5uYQNtJ
zg5jhhfkZ9VWV3Ugk3/7xI6GgOhC96x2k8lUW1N79lzZsiWLkuLj4qKj0pKm
zc7LmpmdGR8X4+fjxWbQyC7ODCLOjc0M8/PKSIhd+/2isuNHyp891qparS7Y
GX/AhA3YsMBm418PrCcC7YbottDamxurb145X7L6h+xpU0K83PkMMhXnQME5
smhkEZ/n7eEZ4Ovp4yHis5kMKlHI4UQGB88tLDh8+ODTn5+gU1x7GHtd3Stt
fcO4/QVAzzNZEKlpqKlfVjTfV8D3cGVPDpsQHR7iAYx2MRJsE9jtPqi2izmM
7RtWa2TNbUaDStqsRTS201AHacBu0x0hkFatCggsZsN3Gs8gsyv9IerQJkA3
++ZY30hn1V7ovn43e17wF273oaMahUyDvh123+6rIflA2+VSrUpu0qkba6sO
7toOtN3bTUgE2k4mYNoOfoAMsoujzYj87IzKincdUNshfglAgaWtrVevXJ4/
f/6kSVEx0ZG5manzCmbmZKZNDAsGhjoSMpGM5zLI3mJuTFjQvLwZB3dte/bo
oVajwq6A6gOwBI2YYxeK+W8L6+7mbpE3G43lz54f2LE9Pz0p1N9DxKYyyXga
wZlGACLvgsSlFHCBwEt4XA6VxqAA2edGR0UuX7Lk0vlzNdVVOp2u5wi69r9R
27EpBmD74N79vLSMiAD/YD+v2MiwSWHB7kKuu4iLRFEGVY+b2EsskHCYuzat
1cqbLUZgw/6CtvdVy18j7P1K7ke0vdeNPn6LfgX8F7W9+6Y9tb2TQN51qLY3
1FQe2rM9Mwlou4CER7SdTiXRaGQOk84A+2NGzMrN6hrfDrUd4oNQq9XXrlxe
OG9ufNzk+KmxuTMyCvOy06fHRwQFeAp5PAaVS6PxGVRvEWdaTMSG1ctuX7/U
2lRrMunfD6TpwOZ+WsWWhtL++wCdF4x82J290u3tJqOxrvrdhdOlC+fkRwT5
C9lUFsmJSXZmkHF0AtLIYlNIfAaNz0aCHjOpFFcmzdtDnBA3ecXypefLzgDz
r93KZ4uNnMSiMXcv/PcrnwyrKTRq9c0r176fNz8pZvKk4PGTw4PDgwLchFyx
gCN0ZQNtB3a7p5AvZNB2b16nU7aaDVpFa5NWIbW2nPvKY79G9a9Rdet031rD
ehe7YPeNrHf7fZ5+b2d9i35PBEeBhndrO0io5a1YMQ36IZj1mobqitL9uzKT
4j1FfAoBh9rtZDoNCW5Dc3FyshleOCuvpqa6A85dgvgoVi5dnJE4bVpMdP6M
9IK87Mzk6ZPCJvi5iYRMGouI51CJE3w8Zs1IObB7y9PH92XSVuvuUcxQ61zp
5h/4Dv9OQJd2QMZPWscANBr0jfW1d3+8VrJuVXJ8tLeQxXCxpzjZ0vAOTIKL
K5nEoVGYNBJiAZJd6GQ8k0IAhv14f5+khKkrli4+fvTwk0cPFFYx5DFgQxlN
XTC/nzLWe4Zvm6XNaEQGtNfV1padOLVt7fq5OTkJkyKjw4JDA/3dhK4SoauI
74r42z3dvIR8Pp0MtF2vkvWy23+lEd6fdPejw/1Z6T0MZsw9rlX2FvNfU1P0
pdbK39It9b2eqjuzuzBmrmN2O3gGTNtPHNqTmZIA6kSyizMN6Usl0xB5p1Dw
Do5jhhXOyoXaDvGLSIybPCMpsTAna3Z25vSYSQFe7jwaiYF34NNIEQG+C2bn
njqy/+XTx2qVovsUE+ocQFb5tAo2+4eYFPrvgK7PG1tj1twzCoSstfnxw7sH
d22Zk5cRGeQroJPIDmOJY23ITvY0ohODjGdRiSwqiU7Ck/FORJwDycWJy6QF
+HomxscuXTRv3759169ff/HiRVNjk16n6//+PRe37VZ7LGB7XW3dmZMnd2zY
vHDWrISJkdGhE8KCxgFtdxNwJQKuuwjxt3sJeQImZd+WDSatwmzSK3pquw7p
x+xhllsf7eXQ+Li2d4swdlZf6xq7yy9qe1+b/yOq3qtd0G2lW9cOfU/BtF2v
UWI+mROH96YnTRXz2BQXZyo6BpJKJjJoZKqLo9OY4VDbIX4N5hUUFM2elTot
3t/TnU0lsUh4D1d6dJBvUd6M4wf3VLx+0dFlklvQ4LYms8nSmdM3DAvE748+
oW+AsBqRGbyGbku+zWysePPq7ImjyxfMSZgU5idydSXjKI5j8GNH4GxHERzG
UvBOTAqRBYx5KpFCwrk42+NAJhEnFLiGBgdmpKd8v3Tpnp27LpRdePTwSUVF
ZWNjo1wu7+Oi7wdVVdUHDx5aUDQvITpygo9nZGBARFCAOxB2nquEj2m7GGi7
iEU/uGOTWa9EtL216Re13doS/kVt73V6T21XgpLo0HdQUont9jXI+1YN1hL9
IW3/uAemW9vBs/VsOyjea7tagWn7sQN7UxJiRVwmlYBpOwFoO5NGpRGcnW1G
zJ2dXwe1HeKXkJGYFOTvA/6IOHSyiMcIGe9VmJ1y5vDexppKrIC5rR1risMe
0j84OoP/WAWT0amVj+/f3l2yLj9tWpivp5hFZRGdacBcdxyLt7PB2Y4hOowl
4R1oJDydTKQDASHiSDgHIPVEvDOLRvOUSEJDQhOnJ84pnLOuuPjQgUNXL199
9OjR27dvGxoampubW1E0NDa8q6x88uTnRw8fHj1ydOasgsCgQDoSCxE/wc8n
IjDAg891Q9ei9RAJ/DzdvEV8oO2HdpZY9CqLSa+SNuustL1fR3ovLf24qwTT
9l7K2VVMpVUCokMZ1Sqg7V06349K9/Hn9N/r2rfGsfa69LLYrd0yvV4N8clg
/vaaytL9e1KmxgpdQQ0MtB1HI7tQKUQmHdF2R5sR8wpn1tchQYSgtkN8BL4S
oZjNEDDIAV6imTMSTx870FRfjTjVUSUHio6OSf9HPyXEr0d7BzIFytLZu93e
ZgFGfUtT452bN7ZuXJ+RNG28pxuPSqTj7OlOY2k4e4ozkHoHFwcHnAPYOrrY
27s42BGd7Eg4e5KLA8nFmYgnkAmI0Sjgcr3cPYPGj58YFZkQH5+ampKZmZGZ
mZmSkjJl6pSJUVHhYaEB4/z5PL6zs8PQgV+62NsE+Xp1aTtPzON5iIX+nm6e
Ai74kyvdt6vNoAZmKmav/hpt7/dovyZxvxKNFlDr1WpgsaNG+1+g7X3d5h+p
gD6i7R9x77y322urThzclzwllseiUwhONKITlYynIHY7heri5DBm+Py5sxsa
6joQbYexwiA+CBGD7Cfh56ZOP3F4b9XbF3qdFss3oxKBhTyH7pZ/LljaO0zo
BCjrWhnsKRWKyndvf7x2efvG4rzUxHAfNz4ZT7SzwduOwdvbEZxxZGc82cmZ
6Gjv4miDtx/lbD/SeexoR1sbhGPHONuNdQGHnB1JLjgqFpyQQkJIRVYLolOI
VJILIJmIt7cZNXjAZwRU28PHj/PguQJtl/D5nmIhOrfK1c2VderogXaj1qhR
/vqO1A8pf6+jfc3s7qNA21ECVQcij4Qy0GPTkazcLx9yvHy87dD3aN9i/T5b
d2G1vFWP2u2NddWnjxxMiY/jMqhkFycq0ZlCwpHJBAaNQnNxcrQduaCosLEB
WXfJDOelQnwYOUnxOzevf/7kkV7XGUUQCdVuQQbAQXP9j4/u2Fzv+zeRXk2L
GRtJ09YZebKXn1ylkJc/e3q17Mym1SvzM1InhQR68DhMogvBztZ5zCiHUcMd
Rg93thmBGzsa2N4Eh7EkRzuSkz0g2dmBDOx5Zzuis52L41i8gw3O3gYkiDgH
iosT0dmeSnBm08kgPWrw11S8Y7CfT1iAP9B2CRfY7Yi2e7uJJFy2J9/13Mmj
HWa9Hljaf5u295pY1Jn4wLld2q5GDXhU2/u41ntpu9ZqUM2H1Psjst/XyP9Q
vdCt7c31NWXHj6YmxLnSKWQXZyoRh2g7hcCgU2h4JyfbkQvnFTY0Qm2H+AXc
v/2jRqXsQLvlDCYTElLmvQ60dRGq/B8I3Xr+0eA57ei41M5gQUDjTUaDwaA3
Gowmk7n7HNBMe/em/OqFsh2bixfMykqKiQzx9/LgsV3JBKqTA85mlOOoofbD
B40d+t3Y4YPshg92GDnUacwwJ5vhzrYjcXajnMeOAlLjOAbUBUPtRg4e8d1X
I74bQHIa60onghwOlQiEHdF2Ac/NlSvm8TwlIm83odiV5SPiXy472dFm0Krl
v4m2v9dVLNGfeKKFf0HbdT21/SPDY/5qbf+QJd89vr2lvubssSPJU2PZQNsJ
PbSdgndytBkBtR3i18OCxHyxIH4YVAo615KD2v7HQ7+R66yt9w8LPrbCSbvZ
bDGazAYj2FjPIG7XKJtfv3h0qezUjs3rFxXOTImbHOLn6cVn8akudNxYssNo
PJD00UMdRw6xHznEYQTYDrUbMWTssO9shnw9etCXIwd+Nvjz/wYk2Y+QcMjA
7BcwqZFB44C2ewp47jxXNz7PSyL2lgglriw/ifD6xbMd7UaNUtrHJ6Psvdvp
G1chRr5WCXTbmp1qj0brQnPkWoQKXU/x7Br0qMIuhSaQKxuQE5FTNBpkq8dC
2XSd+/Ghjx9x1/Q9pVdd0PfZwBbpS9Wpm+uqTx4+MC1uEtICQrQd8clQyQQm
jUx2cXSwGfHeJ2P6gLbDwWsQEP8ksB5Vbi3der2+uampsqLixfPnD+4/uH/v
p2dPn/7885Py1+WNTY2trS0KpcJk6r0oYTu6/LfFApppQOMN6NR17JrIrChQ
Xq9VNzVUPX547/K5k/t3bl65pCg/I3FqVEiwn4c3ny2iEzlEJwZuLNVhNNl+
JNl+BM1plCvRXkTHR4xzT4kJD/ISjB78DYtEjAgKCPb3Rn0ybGRBPTeRl0Qo
cmWP93S7ffVCR7tJo2jt6X9WYuZ0J7FdhVqv1CAecqDtGoUOiLBGpkXCAstA
Wo8SqKJRhSg2WqCT+s7h672GTfayrpUatUKlUah0SrVGqVX18JPrPjw23npu
aXeib6Y1+0Yb6MxRdgYuA1WdRa8B2l56YPfU6HAOnUQl4ikEPJVIoBEJTDKR
THB0GDty3tzZtbU14O/BoNVbOucQm9G1AJB1bNot7UiPSxvU9n93wBDQf3xg
a2p3f01areb16/Jr16+Vlpbu2L59/driH5Z9P7+oaGZuXmZ6RmZ6etL0acnJ
SdnZWfn5uYWFs5ctW7p125Yzp0/fvXPn8ePHNTXVer2u9x3QWgPx15gt1n8N
FrNJq1HLWlvqa2velL948vD+3ZsXr547cvrYntIDW4/s3Xx476Yj+7eeKt1/
7cLp2zcuvnv96uFPd5LjJ48a+i2HTpkYGhTo5+UmcBXz2GK+q5dE5CUWiDis
YF+vn25eAYZnH7u9p7ZjFjsSd1GB0aiSG7vmk3bGWuzcIqF3gTYa1QqTSmlC
DPKe00LRoL4ahRTUJj26MtUqjUqlVagMSlCDIKHgEYO/P7u6O/17abtCakTm
pWqb62tOHN6XMDkKWVyY5EIlInOXaCQig0Ik4hxsxwxdsrBILpf2/6eCLm2M
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
FOXNyE6OT5gUHh7o4+fOF7KpNBcHZ9uR9qOH2o8a6jhmJG7sGBcHJLaMk80I
uxFDRg/5ZvigAYO/+WLItwNsbUZTyGRPD/e01NSNGzacKzv77u1bg17//h07
2tGl+RCfDTY9Cov03LWKU/ulCxcTYmPcuGwviVDI4/K5rl7uYjchz5VFmxod
9e7lY3ANpbSlexmj/qMNaJRatVrTitQv5XUN09cWz960taKuqq29Td2i/OnZ
yxUHd5VXvquUyffeub7/6oXL955WSxXF585GLV2+/dyF0pu3XjY3VDc1bjxx
InzNqs0Xym4+f1TXVGvUKs0ahVqjilu/gZSTn3f4yIar17K375i2adPV5881
Ou35J48O/nT30tuXdbKWprqW6/dfHnlw++C9qy8ra7Va0/O6qvOPH5y6+9O1
+4+qaquBlX/5+bMtF65uvHDp2ovncqnq+bva8w9elN68d+fFS/AOeq1crwQ2
P7LSt7WXXmc1qF6LuqdMqN1+7MDemMhQGhEH9ByQTiXQqIhDhoh3QBTecezg
rz7/5P/+nwGffDrgk88Gfv7FkAFfj/xu0Jihw8eOHuVoZ4vMHSbgmTSamM/z
c5cE+XhPCAiICAtPSU5ZuWr1uQsXm5pbsC/Rgk58ADL/t/ytQkD8++Bv13Zs
JumLly9yc7LCggOjQgInBgeF+flMCZuwqCBn17aNF84c/+nHK88f3it//rTy
7ev6msqWxjppS5O8tRmoUUtzQ2N9bU1lxZtXz588vH/n5rVLZScO7N5evPL7
OfnZ06dET/D3ErGoJIexjqOG2aHzkhxHD8PbjsCPHe1sM9pu5Ijhg7795svP
vv7y82FDh+BwTh7uYtDMX75s6cED++/du1tbW2vquaBbO7o8B7LcttGIvfvZ
02enTJroKeD6ukuEfAGf5+rlJnYTINo+LXZSZflTTNutZyEZu9bOe9/dqVGq
gbjLUG2vakhas2n5vlKpHAk1b9Lprz55VLhne+mdn9aePZe8pXjt6SPJqzfu
Pn9t+cmzIavXppaUJK9fP//44QO3bs7evoeUlTdr397TD+5UNtcZdVqjSqVR
a+bsP+SzaHHunt0/nDiWW7K1YOe+ssfPjvx0N2zl8ukl2+I2bdx66dKhK7en
LF9XtGtv7NrlS4+fPPfzy8XHDk9auSJm5Ya5u4+cePDg/OvyuOINM3fuT92y
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
prri8f1bJ0v3rvl+Ycb0uCBfiSvFyWnUd6MHfT7yu69GDx8ErMfRwwYNHzRw
8DdfDvj8008//eSLL78YOPDrocOGuLjgQ0JDFy9eNjMvP2S8v7vA1V3IE/IA
gd0uEfPYbDo5LzO1vuYteFRlS1N/2g6MWCU6ewiLJ6NV6qRGQKmirrH5TV3V
m6q3r6vfVDRUtrY0yGStVZV1W4+fTd24LmtHSeL3a07evNEgb2yVNSqlzXKp
rK65UdPabFTKgKT//O5tfUuTQatCJreqpDqNUi5vfldT+fPr109fvy1/+665
qdGsVRqU8urauudvKiqqa5SyZlVrS2NjvUbRJG+tbWxubJFKW5oaKt69e/W2
shIp0GRQy2rr6n9+/vbBm9fV0lqdpqVRWtssb1KoZRqNXKNDPUvgpZQKvfKD
djum7Wa9FtH2PUDbA0k4RwrRmQxIwtGJODbJheRkbzNiyMKi2a3NiJOqrR1V
Y2Tokqm9rX9N1mm1Lc1N5S+fl506Om9WphuPPPCrP33yp/8eM3IYk0Lw9RAH
+IDqlyERi4rXFstkSKvQaDTCILAQEL8HsBWUQKK6qmrlsu9Tp8anxMYE+Hi4
0imZ06e9ePK4AwnS3gZMQst7ef8Y+48s0t6BDVY3o4GAkXmLvX/RbQppy5tX
z3+8fvnA7i1L5uYmTAr04NMIjmNGD/1m+LdfDvtmwIhvvxk5dNDw4UMGDxn0
zTdfffH5nz/583998fkn9ra2/j4+oYEBnmK+hO8qcGXzXdnd2j47J7OxvhI8
gcJa29+vr9E5a8mAjodEwgJo5MDMNqtUHYjDpzt+nbnDpANbpbT1/s+Py25f
v3z/9t3Hj5pbGjvajB1GPTjXpNV0mM0dWm0bOBdVwg6LuU2jMirQiJFqBXIF
bPBkG7rKuEWv1yraNSrkLKMZuZ1e02HQdJiMoLxFq+4wGNp0ug5AZBaVocOM
FLCo5EhJtLHVYdHodS1mi9JsVul1CiQEmU6p6wpoZkAU/uM+GW1TXfXh/btQ
bXegEp2paChIOhFPJ7kQnR3sRg9PSYg7d/rk3du3bt243lRf14YOdtHrtIDg
s9IhQXVUBp0OZPZao765qe7K5bJ5hVl8Ou6bT/7vwM//B9wiyN8nOMCfTadx
WIwfli+vrwcNww4kWCiUdwiI3wGYtms0mpNHj6XETYkJCw308wYNcwmbtXhu
wZvycqyYuR8v+l8LtELBdL5T6tt6XBYYqE8f3jl2cM/SBXPjJ0d6i7kUZ3vb
YYOHDPzymwGffP3lnwcN/BK097/98pNP/+v/fPXpn91EgvDgQE+xQMzl8NlM
HocFtF3EZbNopHmzc5uaanppe5fKdYca6KYCneavwOaHKlqblNIWlUyqlks1
CmSKqFmv7rAYOgxai1bV0WZoM+lUaplCLkXqCKVSrZBrVEqtWqWSS1XyFpWi
FYn3qOkMxggyFbJWhRywWS5rVspagS2vUcpAMY0K2arkrSoFOBGosVqtUIIE
uLVC2qqUIxNOkaMo5a3NCuT0ZjW4gkKulkm1Chka4kaFRLnps35rL2Hv5W8/
vG93RPB4RNuBsLs40QiIT4ZCxBNxjjh7Wzc+N25SxLTYySnTpm3fvLm5vt7q
W2pDqrx2Y4dZbzHqjDq1VqvUgJfVKoH8YyV0GumpI7uiw3xtRwz86tP/Hjtm
RICPZ0xkON+VxaBSln+/HLPe4fwmCIjfA+i0IOSXVV1RWTR7dtj4AH9Pd1c6
lexg58bjzCuY9eLZU0z/O0P3dvzGv0Ss7QA03oCEGUAcON1XbzOba6oqLp47
s3blsqRpkz3duESczejBXw7+8n8Gf/Xnkd98bjNoAN5hdJCfd1hgoLuAj2g7
hwmkw8fDTejKZtPIi4tmtzTXIu2C1l+n7T010MqHI0dnmCJ9lBo09iOi5Oh0
VDQIJBJnDDFluy7VK657V7gwlP1FX+/KVFiHL9MqFUC9EddKz5Bf2j6mOBaU
pt+1ufvTdlmXtlcf3LMjfEIA4m93cQJbZDAkwZni4gzsdhdHOyoBB2x4KgHP
YTBCAsefLD2KVD3g7ZSIu95s0LaZ9O0mfZtRZ9KpjVpADRKfATyGWm5USttM
hg5k1fKXs3PTnGxHDPjsv53tRo/zco+bHMXjMNksRnHxWix2qPXau/+eaLfC
P/pZIP51YEGnL5kt5nPnzk6NjfYQ8oUcJm7sGJKjHZ/DSE1MuHD2rNGA/E7B
D9CIzCEyor/E3/KPEPy2zW2dazihQ3DeO+gRn7/B0NJS/+jBndLDe5bMywvx
k4x3d52ZHFu8uHBhYVZibNR4L2+JUCjku7py6FxXpo+nm8CVBbR9+aJ5slak
U7hb2zGVw5ZGwvQTXbEaiz/wkbUtlN1Tn97Ltap7F4sqqUAXRcXmvfazcEZf
SbfOt9Z2rIJ4r+1WIxh1fSJDfuhq/YYLw7Z6bE292qp9u7aFBvpjdnuXwjth
wg4I0sB6HzN8iN2YkUwqOWV6fFHBrIL8vOVLFm7ZuO7owX1XL557+uh+XdU7
lazZpNW2GQwWrdYEPgdZs7alUdVcr1NJOzqMWlXz+pVLyDibb7/8H4qLY0ig
/+TIMAaFJBbyjxw+1IZ2qnbPVoCAgPit0N7W3oYOhtRoNDt3bp0Q4MulkRlE
vMOYEfajRxKdHMZ7e65ctvTnx0+6T0HW3TAazVg8L6ufZFdcry50hoXpigyD
muXY2rhYJ257R/8/6A8ZMEaDXtba9PrV88d3r766f6Wu/O6Tny7MyU31EYuA
tvN5bDaH5sphdGo7nbL6+yVyZDqSCelL1fwabe+x1EVfkTegxAL5GkEak000
Og12Ka0Ss7o/tgRS1y36WYOj63nem+79ant3uk/t8Jdp+56dW4PH+wJtpxFx
qLY7oka7I95hLNB2Es7R3mbksEFITwfOwZbLors4240aNsjF2Z5JJYl4HF8v
94iQoKSEKfMKZ5Vs2nTm1NlH9x/WV1frFHKLTgM+H2Vrk0LaYFRLlfK6XSUr
GUS77778hEF2iZ0YHjJ+HAnnFBjg//DRoza0BscW6oICDwHxGwKLzQUSjU0N
JRvXg4YzBe/oPHaUw+gRNsMGjx78LRXnlDB1yo7t2x4+uK9UyHudi3nPOxdu
sBZxTMjb3o+HbLNaual7hDxIajVqJdAxrUar1eq0SG+dXq8z6LUIDXqDXgdU
3YSNjUZhVDWX/3Tx2e2Td64cLchJAla7WCDguSLazgXa7uEm4LBcGdR1q5Yr
FM0d7T20HY0DqUTW10At7c7YMqoedjuqgXK9qqcgq5Sd8o64HZBIvwZMoq20
vUeYmv4l3dpK7x2MHTXUe3hmPiTaH7D85VaXkvaSd5Cjs1pTr7Gues/2kuAA
H6DtdBK+W9uBpANtByQ42Y8dPXzIdwNGDP3W0X40jYy3HT3sq8//9M1Xn375
6Z+++uzPAwd8MWzQQGDVU0kEgVAQMH58/NSpc+fO2b615ML5M89+ftRYW6OU
NiGzfdu1OlntlrVLyU42Q77+TOTKjI+d5CUR4h3tCwsKsFBC4ItGQ39a4FIf
EBC/FZChG2hMJ5AGP7TtW0pCA32pLva2aJQAu+GDRgz8ChhsVBI+InTCimVL
rl46X1nxViGX/xWj3/tCp9PU11ZUvHlR+e5V1dvyqjdg+7L67Yuayhe1la9q
K8vrKl/VVZZXV75+++71u9cva9+9Kn9w8/bZfdeObzm5b0NWcpyXWCgS8Pmu
HC6Hzndl+nq4CdlMPoNasnalStkCtN26L9Wg6bGwNWardwUQU2Hi3EP2O8O8
Y5L7PiJNl38by1R2XUHxq7W9txGOaXuvFUP6le5fbAL01XZ0uZD32m4xaDu1
fZwP0dkeCSmDutwBgbYDox1ou/NYm5GDvxv41WdI2J9RwxhUAodBoRCciTh7
Z3tbe5tRwKgH2j9iyHegAhg5fMioUUPH2o4mEXAiASc8NDA7K33D+rXny049
ffxTxcuf27QKo7K5ZM33RIdRI74b4OflNikihMuk8dnMU8eOosaByWzUdpiN
HW0mZKxR7wU3rVfehEs9QUD8BWhDJ6R0IBaU4ezJo3GTwlgUvLPNCNshA0d9
N2AMMs78628HfDZi8EAuk5oybcq2LZvv3bvd3NxgRKHX69UatUKhaJW21jfU
1dZWV1W+ffOmvLz85cuXz58/fwYIEq/Ly6sqq+pr65qbm1UqZEJ+fV3Vzw9+
vHau9PzxAxeOHzh/dH/Z4T1lh3aWHUF4cv/WU/u3nthXcmx3yaGtm/dvXntw
y/rLx/ddL9tzfN/qg1tXpU+d7Cnmi4V8Ppcj4DCEriw/TzcRmyGgU7etL1ar
Wjvajd3abr0WRneiS3Lfd62i/pD3rm8rvX2v7dY9rb/ogemr7X3Gn4O0rJfR
3q+2/2r3Tq9ao3PlKezFgbY31VXv3bElyN/bxXEs2oXaqe2Yvx1ou91ooMFf
fP6n//rmi0+HDxrobGfDoVMEHCZQY293sYjHoRBwwGgf+t0333z52eCBX44a
PsjBdhTRyQ40BAjOdnicPZVG9PaSZKYmb9u88frli9LGWnVzzeI5efajhjja
jgoPDpzg7/3/2HsPsKa2dd/73nvq2nstG71DSAjpvSeEDopioSMidixgAykq
vViwYQULomDB3rCBBVEUFbEXEOkdAklISGh3jBlAXMu9zz7nnu/57t2b4f+Z
z5gzc85MSfIb73jHO95Bw2PDVi+vrPg0BFP3wGDRQbVysK93qF8FBTnfNzjY
PwgjSzXb8ZSS42W8/OcLklx3CFnk7uP7t7vTtk53diBZWeIszVAmBsB+MzfW
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
vbWtsb61vqal+lsjoDq02D/XfPlU8/lj3ZfPDZUVDVUVjV8rWqrgBENJa6MC
2LFyWZ9CrpJLATBrq6vKXzy/ffPG8WNHUhLjV60I9vScY29vy6TTcNZWGAwK
j8dSSXiYaoaMJ1hZmOtr6038RW/Sn7AWhi62/HUrlh7P2Pu6tPjdy9JNkeFT
nexhSjEHsa2Q62gjmurk5Ggn5jGIK+f59bS0wIfu79NEO8PI/NG++SAS/KY5
MoBMWlerh/rAOQND/UgOBvDD10xmhwdh4sGhQaTS3ws11ANzDw4OIJcrh18F
WyT0bmiwFwnDgzdXw9gYYEmqhj0A/b0qpUyl6IG37e/th1wCr4L79A97D8BR
hVzZI+1XI6EyPV0DfQqVUq7o7uzvkferVH1yeZ9CNtgnH+qXDqmlAyqFtEcu
Bb0PuVzeI4O3Rf7PQ4MKhUymVCChI3096t4etbIL/KcGevvAGwwNATo27N+5
zVkshGthM8jQJ0PBM+gkKkz0Atm+ftXyY/v2HNq9fe/25P07txzctTUzPe3Y
/t3ZmXtzAOePHTqdlZF3IvNC7tErp09czQPGfM6NC6fyL565CXT57N1rFx7e
vvH0QeHLxw9fPi66deXC1sRYrznufDYdrtmEMiVao8l4a0tzM62JvxnoTGGQ
CSIum8+ir1m++Pr5059fvwSmQkdDLWC7xi3zO7argene092PeN2H7XYN23s1
oe8I25Ggd4TtiP7I9oFhn8w428fL318ZDYPMO31qvq/PPM85yRujdiQlRK0O
CfCYs2ze3J3JSdcvXnj96mUD6CC3t8glHUhIdjsgtqKrU4FMmQH1HkmHQtLR
2ylRSbpUXRJVV6dK0tnT0dbR0tRQU/Xx3ZvHRQ+vXDyfeXB/XMzm4KVLPOfM
BvY1g07FYa0wKJQVCiYHA1wBhKGQrK3RFuYGesY6ky0MtOnWlu4OwjVLgw7u
3vrg5vXqT+8lzQ2DSnlbfU1izEbAdkdbkbOG7SLRDIepdnYiDgsf7O/77sOn
L80t72rrKhpbKhtbKuoaPzc1VTQ0fa1t+NrUXNnWWtnUWFnfUAkONjVV1jV+
amwG+lrfUtXU9qWhCZxc2dRWVdf6ta7+a2P91+aWby0t1eAEoLavFc3NlY2d
lU3NX1rqPzfWfWlurmhuqGisBfesaG2qam6sqquvbGys7GivaekEl3ysb/jU
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
0Xr6U/7027/+9htg+8QpUyZra2vp6urAAio62jo6U/R0tQz0dA319Qz0dY31
9cwMDSxMTDDm5jgMhmhtTcbhyHgclYCnk4g0Ip6Cx5FxWCIOjceicBgLK5Qp
2sLYytIMdOs4dLItn+XuYhcc6LslZkPO0f2P792q/vS2ra4KsL27pVEG2N42
hu1InIxyZCx1OMR9hO3fUxB8Z7sScbzD7WD/d7bDsCVkOHWc7ePl770gK+uB
r36fShM8A4qiR/bxffn1S+fSt6eEr16xMMDby911mqPYXsgWsig8GoFDxnFI
1hwKjk8nilgUWy7dWcSdbiea7WzvPcM10Hvm8iCfDasWJUav3bs9IefY/ltX
8l6UFNd+/SzrakeWMB4uA319akVPr0yq6pGpFYp+Ve9gn2oQbFWKfmVPvwKy
XaWAy+HJu7qUMlm/SvWu/M3yxQud7EQujnYwvl3AtbMR2DvZOvAYdkyywMuT
kbRlQvhmXvLO1Bv3oi/m0zfHxFwrWHP6qk1MUszZi0cfPF2cmeW7a+/u6wWH
7j/xSj+4LPvUgoNHFh/Ojrv9gLsxbumho9kPS9fkXDJaG2mxMXZfYXHO/Wdu
O/ZOTT9wueTDkuO5M/cdWJNzgZ2y+9fQiKXnbsw9ft4iLGHu/pNHbj3MefLK
a/9RXvyWxKt3DxYUzdq1b2Fm9sGC4tBTeS5pu7blF4bkXJqwZoNlQnzy5fyy
d19znj1n7NnzT6HhzrsyV5y9Jkze7rFr3+Hi5+KkrV67DmQ8ehF57Q47MXXj
+WtHH5YuO5bjsXN/+s0HucVlM7bvWX3i9JkXZcuys33T0nfdfuydmc2Jj8+6
V3T8boltfGpw1ql7H75tzLs0JTRy4ZkLK07nTVwV/a9rE0TJqcsj1s1wFOOs
LVkjdjvCdmsqAUu0Qhvpa02e+MvkCX+aPOHXSRN/A9Y72NeeMllPR8tAV8dQ
D8pIX8cYgN0Ast1ID7rTDeCr2kZ6OiaG+mZGhlDGhqZGBmZABvqmQMhaq5rg
dmDPc2lkWx7LzUEc5D1z05rlh9KS8i+cfvfi2fBUiMY6yPa2ZqDRfL/Dkklg
fssx05cGx2aY6dXEt8sH+3qQOaqaMEiYN0wzKXV8Xup4+ccscNVUdV+/GmbA
hl/1PqW0taHibdnDO9fzTh7L2LsjLTkuJSYiIXpdTMTquMg1SZvCtyduSt+W
dHjvztPHMq6dzb13/cqzh/fevXpWW/Fe0lTTK20b6u8Zm08VZhfuV/erlGqF
vA+Y5UrlIIww74MR2mrVkLpXk+4JsH2gV9GHZK8FNnyvHC4/hCwzp3xR8nRh
gD+ci+po5yDii3lssYBrb2/nwGbbMOh8n7mcxJ1m8TtNN6dSknaR4tKMYpPJ
W9Op2/ZiY7eSY7dSU3fgk7bhErfQU3awknfi4rYSE3cQo7fSN6Vx0w5Zbd6C
i01iJ6YRYndO3Jj0W2wcZ3u6KGW3bnScdlySTeohcDftTXHWMWk6Ucm/RCWg
4nabx+yYEpVkuTmNnLANm7pDL2H7lNitpknbsCmpZgnJVrHbaPG7rBK36W2O
Y207QN+S+aeNSf8SvYmQtGP69sOCbfu0EpJ+jUy0iE5DJ+yZtCnBKCGFu++I
Rcp28w0J3G0HaXszdDbHk5L3gGtRSduNE1KpSem8LYcMNicRUtJs0jNME1IM
o+PF6dmEtENaMQnstHTetoMTIuJME7Y57csibdn9bxGJFilp6JS0fw6L/yU8
wTYpJThircYnw2KQNWOpdAqeSsRScBjQF7O2NEWbGVoYQRob6WoZ6kzR156s
pzUJCFQMkSNQutCjbqKva2KoB840Q7YamUDmA/jrGOkB2msZ6+lYGBpZmcGl
VUjWllSCFZtCELOZ7o72i/y9I0KX7YyPPp+VUfqgoPrTh5aab+31NX+F7ZoJ
qmOnpg78ju0qhO3gW9evYTuS0R1Zeu872xGSj7N9vPwDlUH4lQekHVAp+5SQ
q33y7n5Zt6qrU97eKm1t6mioaa2taqmtaK6pbK2r6mis7mqtk3e29HZ39MHM
4T1wWRw4Z2TEOtLEEoPusFo1oFb2AWtcpRyAiymMpvuAr0Kw96kB5AdVykFV
z0BvT78STtUBXW9Vj1QJwN7d2dXWppDKpJ1dt6/f8PGYjazHIRbzOTY8tg2f
62Rrb8fi8qhU3kwP200p9LgthIgEcngSYV0CPirVen0Cem2sVVgcPiwWuz4G
Ex6LjYjHh8fD3ahk68hkYkQKPiwRtTYWFR6PDo/Br91EXJOAjkg135SCWh+N
XbPRKjIJtSEBtXqT+foYVFgcKizeJCrJKCrZKCzOKDweVEwi4g3DN+uvjzXe
kGoSudUgIkF/U4Le5iTjyCTj9Qk6kfFTQKMQGa8THm8QBWicohOZMDEsRis8
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
IdLYCHDasTKPKOmRxKNRTIUFOEw5lvEo4snFMDFGIf68hGpZP0X0Dlx3qUEj
NWrlZm6HVQXMXa21puqO0FfHBRdc/gPFCNxu6EGxpqe6ch9PJSUI78Vybt+g
X7nIuOBDC/Ag+7pM+zoRfZxnPBynXO1Hne2GXG36nE532hx5b3282cutPS52
uq5WymVhfpjRYNRpdDpY5A/bIwUbdmPcblAptDK5UiwB9C7icCC9E4kzY6PT
QwOjvT2D7Z+6Wpo/1NU2vqquff7s1ZOyioL8spzs4uzMokcZgOrzUlOy798D
hP8oOSkjKeFhfBygfcj8cTH3Y24n37mF4d7tqHvAECAk3YoCSIiOBMfE6MiE
qAh4vGVGVGQ8MBa3Iu9GR8Qj3I0KhwAKBqTHf3X17yAuKjw24kZc5I24KAxh
sZFhMRHXAeIiw+BpVNidSHAaGgtGEO5Ghn0GeE6JjrwbdRPcAdwt8XZk4u2I
pNvhyTERKbBNUkzGvbislPi8tHsl2Q8rCrJelORWlxW8elJUU1FcU1HyprIU
q8TeVFPZUlfdWv+qrbGmo7W260N976em/s73sKoAtvl0dJA8QaBOjdGmJrAY
O6oYA5tuiFg0VDHGlO6owvYoSQWWwuyW9VNLgN1oyYrRqczErjPqTK3xzGV7
8QgMLv/biKmWruF/53+x5idjDfoWEuI060mpKu+x8nGa6GEiLy6aF3mdExZM
vxxIvuRDDvQk+brPeDoT3R2n3R0m3OzHHOyGray6T59qPXeywdP2Y2ToVPlT
0cSoYVaD3d6g0etUKq1KbdSiCjZa2BlKp1CopTKlWCwXChG905mkGUAypFHC
5EAfobtroP1j9/uWj431rXVvGqpfvq169qriSfXTssqSgmf5eU8hcstzH5dm
ZxU9yizITC94lJ6fkZaX8RAiPTUnNeXxg/vgiAHo2SnJWffvPUIWAUNGciJA
ZnKSGYkZX8Iykn4vAR6T4uHg/aS0pHgAMIjBpCd9RmpC3MPEuNSE2Afx8IiU
GITYh4l3HyZBpMIJcWkJdwHSMSTGpSfexd7U8haPUpKyHiQCPE5NyklLzstI
KXz0sCQ77UluJuqpUfQa8nlZ/YunDa8rGl5VNL6ubH7zvLX25Yd64KvXtrfU
d32AJQVQrZiPI72dY/09KCtmkDxOsATY0eIpVgqMJmbTxBy6qX6v0FS/F7rr
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
qZ9bb1k637FuhbtxQ3DPttC+Rt+eRv+exuD+nYH9272N610bVzpWLrYumWOa
N8M4u3poetlQdfFgZcFAaY4WyntOb1ludzmI/J6Kgu6Kou6K8q7qGs3cWV0b
Vg2ePuF7/pI0W6U0k5HL3+UDT/DSQ4KjXKWx8fv+GrJdR6elEAjEv3U+ETE4
DUSR+DSFk6kEmYzTRJKBXeKZjMDCTDxLMxQO7kyTSdg9nqWUE6SYpqOjqrJt
0m81ed92TPlWM2Vid96EnryJPfmTe4qy+8rydTUlQ7OrTEtmAg13rlvu2LTW
vW2Lf+/O4MFdwX2NgT3b/Y2b3JvX2Nd8Z2mYr19QPzSzZmh6xWB1ia68QFea
21+S0wsUvihHvijI6y0v7ikv1VQWq6pKWupru5Yt1e7dZ370OO50AFUX5c8B
3bso/CDGpGt+KOBI0hEIxM+DH1MzubwGnvYXOB6O36aIJJnEKDkhI8rTt2Ez
yRGFJ7EIL7eU9z993FNR1pE3UVOa2zE1uzN7UufUb7qyYXTmTOycOhGY+e7i
LG11/tDMSsOCmeaGhbbVy11b1nl2bPLt2hrY2wgUHjh5747Nrk2rbasbLA0L
jQtnGWZP18+o0teWDlYUDJRM7S/OAV+Bme8qytGUTO0pz+0qz2srL3hVlH+n
qOD2wvkdN68R8QhcbIC2c0DMubEBR4d/Mubv9/41EAgE4ueGPAgPHlPl0wRD
JoG8U0kMSLrA0sDAy+eeGCoRY4Hoh3ymM8d6Sgs1pdkdNSWdxYU9BVM78iap
cyZoQGRPUGd9o578tTrraw1w8qVTtdXFuhmVhrnTzcvm2VYvda5f6dm63rtj
i3/XNhC+HVt82zZ6N691rVthXb7EtGSuacFMQ32NrrZ0oLoIHnQqndpZlN1R
NKWraIqqKPtF/pRrE7++Ulxwa+mCpwf2uAZ65RFRosjQGZ6Vg5GDzQgcTNKM
xHCV6O+QegQCgfjZAkvHhYzAiBwNhDxNpig8TiSiRDyalm083FqVJCLo1R3Y
3V1epK7KV02r6Cwr7y0p7CieqirIas+d3J7zrWrKN1DeJ33dPvnrdqD2eZO7
i7O1lbm6aeX62dMti+Y4li+1r13p3LTGvW2jp3GLd/sWb+Nm/47N3m3rHRtW
2lctsy6db1xQb5hTNzS9or+qQFua152Xpc6e+Cb722tffX7q66+/nz+7efeW
lwf3GN6/YWANPC+kCVnS4ZtUAg6fhXvHo/ERSN4RCMR4YvhcKyyK5zmOYdJ4
isKiBBYBNp5OJcDPmKDPcGCvelp1e215+4wadVVVV3lVR0Vxe1m+ujhPUzRV
kz8F6HBH1gTg3tuzoIHvzP6mN39Sf/HU/tJCXUXZ0PQ647w5toYlzrWrnJvW
uTZvcG5e79m23r9jo69xk3fbBsfGVebVS43L5ujn1gzWlw1UF/cW56pyJj36
5vOjv/mHK9NrVft2qPbvfrF7l+71K4ZIZDIcT+NQ2HlaYCmRo8ANOC5KkMc8
jYkx2p4ZdfLDx77G3DXcnwyZfAQC8XMENmHkOYEmGTxBxmOJcJDlGNrpMB08
oKqf2Tl9evecGW0zqttqqzuqyjTlxZqyos6ygu7i3M6CbM3UyR3ZE9VTYH6m
fdIXmqyvurMn9k6d3JOX3VtSMFBdrp9ZZ1ww29ywyLpymX3NCmDjfds3BnZt
8+3c5ty+0bltvXPLavuqReZF9brp5dqq4rfZEy//5peXC3Jeblr7csuGC9Nq
Ly5cZGhu5tO4KKQ5IikxpMCSIktKLCVxQNspQWDF36XtcqIG1kDCAX/D3Xjg
xiyMYW2HWSq5YdlP/e+AQCAQ/6LIdYKwKpJneZqkEnGWJCiPy3b7hmblmu55
83vmz1bNqW2tr+ysqeiqKNNUlHRUFGnKCjUleZrCqR352ercSeqcb9uyvlZN
/ko96UvNpK802d905k3uLprSW5rXV1k4MKNcP6fOtHiubVWDa8Maz9ZN7sat
jm2bXTs3B/ZsC+zY5Fi9zDRvendl0f1vfnv6t/94r772xvw5O7K+Xfn3f3+q
fpZTpeLpFEvjbALjyRRw72KakNKULO+UwLMCz0mjIfCjKRpJ/gpnPwnCB20f
LZ5E2o5AIH7WyBkK+YAq0EOWzTAsR+FRu8Fy9+7gnr29a1Z3LZ3fPb++e+a0
jmnV7TUV6upydWVpe1mhurSwA0RJnrooR52XpZ46WT3la9W3v2379gvV5C/V
U77S5EzozJvYVTyptyJPW1c2OHu6afF864oGx4Y19o1rbZvWurZvCOzY7Fy/
yrZkbnP+lLNf/Prs1EnHCvO++9Uvp/3lX6z91a+ebNoc6u+jUlEyEWGwKJtK
cGSSp1IiBeSdkBhKZNMSx2RGg2fHFNIoTp6Tx9FKP2i2Jo1JyHzKT/1vgkAg
EP9CjBaJCyIvcmmR4iPhVF+f9fbNgd27Bteu6lq6oHVefcvMurbpNaq6yraq
srbK0raKElV5kbqsQFOcp8nP6Zg6qT17girrq9ZJX7RO+rzt289Vkz5X53zV
VTCppzinr6Kgv7ZkqL7GvGiedflSy8plljXfOdausK1Y2je96taX/3j8q9+c
Kin47pe/qP8vfz37v/51Y/akt0cOh036GBZIhPzpcJjGYkwS41IJAYchkikh
TYpQ4WFILC1xdIZPDxfSCKwSErTu4miADyg3jP9IxpU60dHbP90/AwKBQPwL
Meb0z+g+K5A/eEqVIEPGQf39O/0HD/RuW9e5tqF92ULV3JmqGTWqmipVTWVb
dbmqsqS9olhTWtxRlNdROFVJ1LTnTGifApPw0MNP+hLc7sieoAEevmBSb3H2
IEzFTzfMn6lfNMuwcPbg3Bmvside+u0/nJ46aWdOVsVf/mXVf/pP8/7Hf9tV
mt966VzAZvAFXGGPg/D5UgE/EQkz8SiXiMEUDVB4GufTBAiBIWR5B/GhimZY
22G6RoDCzsP8uxyjOXnxB3Yd+XYEAvEzYcw47lGNh/kZjhPoNJBTh0bTd+t2
5+ED6h1b1Rs3aFYs71w4v2vWzA5g4GvLVVVlqsqy9orytvJSdSnMw3cU5WoK
sjX5UzpyJrVnTWzPmqCaDLPxqqwvO6Z82Z0zoa8ot6e8sLe6eKC2rL+6pKN0
6rVf/d2lrG+PVpTU/u3f5Hz2WclffDbnf/y3Q/W1nd/f8pn6vTaD32qMuewx
tz3u9+IhPxUNUVg0ncR4IsmTKY5MClRKpAkpTcru/SNtH66Kh6MJOfBVEuS0
vLzHCgVf3nXNjDHwP+E/BQKBQPzxkODIOwHKIEkwwRBmstraO/ru3VOdOdN6
4ED79u0d69Z2LG/QLJrbMWd6e30t8PDtVZWqyop2WCeZpyrJVZfmtpfkqYqm
tudNUedmqWFJ/IS2yV+1T/6yc8qErtxJ7fmT2gsndxfmdE6d+PSrX5z7h7+7
UFK0oSD38z//37L/w38o+49/sfiXv7i0avlA0xOnVu3u73YPDXithoDdEPHY
Yl5nIuhNRkN4PEoDA5+Kc3icx1MikZIoXIAenpIYKsPSGW4kPzMaI1kaUXHy
srYPp+IRCATiZ444PI+bTQuJBOMPpuwO75B26H1z573bredOvzu4/+3O7W2b
1qlXL29ftkg1Z2bXtJru6oqOqtK2qpLWyuLWisKW8sKWsoK24lx1wVR1fk57
bpYKKHzOxPYpEzqyvm7J+qIl+0t19jdvvvnHS3/715cmfnm8tGDWr/7+N//u
f8n/7LMZ//mvNk6adH/3Dt3bF0Ptb80drdbeLttgn9Og9dn0YZc14nXGAr54
OEBEQ3Q8CpPweAJ4eIFM8RTOp0klDy99Ku9I2xEIxDgGVs5IvMQxIkHwWDwd
Dsa9npDN6unXWt6/73vwoPXC+TcH9r3Zsa1l80bNmpXdSxd2zanvnFarrq5p
r6lSVZapysvaSovbSgrbi0EUqApz2/Kz2/KzVMC0Z33zbtJv3076zbuJv370
+d+d/uV/v1g4dfvUyUX/+f+Y8O//XdFnny38m//nYF3N85PHe1496XnzXPfu
lUHdYuztMPd3Ooz9PqvB77AEPc6o35MC8h4JUlgEyDs08ESSo3COJniaGJV3
JUvzsYHnYMpdlvc/oDc8AoFA/FtC3k6FRe+iwIgMKRIpPhGnImEiGMQ93rjF
FtT2W9+3aB8/ar188c2RQ293bG8FHn7N6q5lDZo589vr69tqa2GKpqysvay0
DUZxa2lha3E+sPEwUZOb837KN+8nfd781a/u/PoXp7749dmy4uVf/FPWn/+v
uX/+Z5X/8S+W/OrvzzYsfnPtcsvD26qn93tfPOl//2qg452+R23RdTsNOo/Z
6LVbg14XFvQBeSdjYeDe04kYiydYMsUCeQfufUTeYXBpiWfGKDzSdgQCMe5Q
tB2WlQisyNFimhBInE0mmDhGRyIkUHivJ2a1enQDRpWq7+mTjqtX3h890rRz
97uNm1SrVrY1LFEtmKeqnwEMfHtlhaqqsrWirLWipLWsqA1EaWF7UVFrQbZq
6sQ3E7649dt/Op016WhxycJ/+OWUP/v3JZ/97zP+6v9clzXh2raNr29deXbr
0tt7NzSP7ne9ftzd8nJA02Lo7bAN9rmMQx6r2ee2R33ueMCLR4JA3oF7B9Y9
DfsVpxgiycIKSSjvwrC2p39E20Wk7QgEYrwwou0CrAznWZGlgUjyFMETKTaV
oOMxKhrBgwHM44nY7QG93tnRMfDsWeuVa2+PHX+3d9fbbRtbVq9UL12qmTe3
Ayj8tBpYKgnLaUrbKkpbKkpUpcWqkvz2opzX2ZOuf/vN+fzc/QW58/72/y7+
7M+m/5e/WvCLv90/q/be4T1PL599evVc860rrd/fVj97oHnzvFf1RtepMvd3
O/Q6j8Xsc1gjbgcmZ2YUbQfWPQ3kHU8o2q5Yd0G27h9nZlilVAZ2gJfkkk9U
HoNAIMYBsMhbmXYkchLPCCwl0KRIESJJCDjOJ5NcLJ6ORYhQIOlxYzZbSG9w
dvUMvm7quH3z3akTb3fvbtu0Sb1qrXrZsrb5s9pmTQMKr66uaqsqa6kqAe69
vSS/rSTvad6UK1MmXizM3ZszcdHf/F+z/uovG379y9XZE0+va7h/4sCD00df
XDnbdOvK2+9vqZ4+6Gx63tPaPNDRatJ22YcGPCaj32YJy9qeDPkV607LlTN0
Kq5oOyfvq4ppUgJvPi1vrcraDj7R2CZjcNdYQnP3EAjEOAFquwTLwmGmGggj
zL3TpESSIiErfCrBxGN0JEQG/ITbnbI7AiajTds79P5t9707b08efbFn5+tt
m1vWr2lftVy9eKF61kx1XY0KePhymIF/X1LwOH/K1alZZ/On7pn8zcYv/3HN
P/1q9TdfNNaVn9+65sah3beO7nt0/sTLG5fe3L/ZCnx78/PeliZdR6uxr8s2
OOA2GnxWc8hlj/ncCTnrDmtmZGEf1XZF3uF7RtqOQCAQI0DvLnLy8R9G1nZ5
XxKIJAU8PNxjFVIJPhXnEhgbCaeDgaTPF3W5gmaTs6db/+6N5uG9txfPNR/c
/3LLlua1q1UrlmuWLO6YM1tVN72lqqapvPRBYd7lgtwTudkHsyc3TvhqzW9/
syZ74tGGBRcaN1zet+3G0b0Pzh1/ceNi8/2bLc8edDQ962ttGtS0mfq67FDb
jYq2R30uLACtOynXQyryPpqW4WhF2ymJocWRxu8w0SRru6zqcmSQtiMQiPHC
WG2Hm6oj8i7J8p6hCImAJ4YEPMUlMQaL0uEIFQgRPn/c4YhazF6d1qRq6Xn0
8P2F868P7W/avuXt+rWtK1e0LW1onbfg1bRp9ytKL5UUHM2bum/K5PVf/NOK
CV9sn155asPKCzs3Xd63/dbxA48unHh589Kbh7danj9UN7/Qtr3Vd7Vb+3ud
ep3HbPI7rFGPE/j2eNALU+6KtsMu9HBHdYy2E5k0PMokazuNtB2BQIxzxmq7
IKShvCvaDuWdzKQJiSZECheAhBIJFk9wiTgXw5hYjAoGcK874XbEHGYfUPj2
lp5nD1sunWs6dLB51863mza+W7WqafGip7NnXK+qOJybu2XCl6smfL65qvDI
miUntq65uHvrjUN77p068uTq2df3rr1/eq/t1RPNu9cD6hZTr8Yx2O826X02
S8gFk+1YwJuECZkwGQunP87JcPCYKvl7tP1DTgZpOwKBGBcoTXDl1u4iJwlA
DJWsOwzZwNMZhsowJGzhQhMChcPm6kSSxxNKHp6KhfFQIOFzY25r0G70GnS2
TnX/yxft16+3HD3yZmfj2y0bm9asvDtv7pGiwo3Z326rKjqyfP6JrSvP7Npw
7dCu+ycPP7546tXtK+8e31W9etL57pW2/Z2xW20b6HMZBr0WY8BuC7udQNjj
IV8yIms7FkknFW1PMHKhOw+WHphEkrdTh/vMjGo7L8k93pVA+XYEAjEekFVd
GA0RmFuOzbBshuNASCwrMUwmnYZ+GARNZSgqQ5ASQUgkIRG4kErxyQQLqyXD
ZDiQCHgxjyvmsAeNRkdvr7H5TdftW+/OnXl56MD9zRvOLZp7aNHsY+sazu9Y
f3H3phuHdt4/ffDp5VOvb195//Bu+0sg7K/7OlqHejW2fq3LMCQLuyXqcsZ9
HizkS8QCKSyEY2EiHqFTWBofUySjaDtDwTJIFuaUlDJIieeGDy6N9nVHPQcQ
CMQ44Me0Hao6bKXID8t7hmUyQC2BgU/TGZqG8q4ElHdCxIG8J9lEnMFgPTwZ
CZHBAOHzYS5nwGRy9PXpVa3dr569u3v9+cVTj84c+/7U4XsnD94/Dez6iRfX
zr25d7X16f2Opmc9Lc39HW2Gvi7bUL/LqPdazUG5rD3uc4MlIxEJAFUnE1EQ
VDImC3uCo1Kj51KVngPi2OaQSNsRCMQ4RT69lFHkXRlCymcEOfhheZeAjecY
mOKQxTMDFZ4aY+NJicJhMTyJCzhQeAwE3GwFCh8Kpnz+uNsXdTi8JoO5v2ew
s72/pUnz4mHLwzutj+6qntxXP3/Q2fSsV65mN/R0mvv74GEls9FrM4fc9ojX
FfN74kGYZofCDvMwmOLYR7QdHzXtirCPOvbhlr/yoL2xAzugziMQCMTPnA/a
LsrCLiobjsKwwkPfy7ESxwx34vqBtsu3JVpOxYNvKQLIOwg+lUgnY0wixkaw
dChKBsNJvz/mdgdsNo9pyK7rNfZoDF3ths52Y1e7safD3N9tH9S6DXpYEmO3
Bp32kNsZDcA8zHCOHQtTcoI9TSSApLNkEoRi2uFJq5HjqD/UdkHRdhFpOwKB
GGf8uLaPFpaIAifwrKicaQKaCQLKu1w/o5zul+skRTlgqSQJPDwsp2HJBEsk
+FSSTyTYRDyNxchIOBUMYAFv2OsOuOw+u8VvNfstJq8VuHRjwG4OOx1Rjxvz
+eIBPxb2x6PBFBYGgSeAY48Cuy5vmw6rOk9Duz7q2Id7/H4Y1TGq7dywnqOc
DAKBGEeMarsoioISo8L+QdsFRhLgGU8om9DDMyJDD1vl0ea6MEVDwiwN9PAk
D4IhuDQOAugwRyaBMjPJOJmMJbFIMhpORkKpUCAVCCSCgXjInwj5YeIlEiIj
UTIaJRJRMhWj8TgMIp4mFbue4ikYQhpIOimABYWh5XqYjxrIwLlLH2LEt4+Z
jo1AIBA/e6RPGHvYR5F3CW6t8iAkmJ9hM+ArrJAEVlkxzBQMJV3DpEf3NOFU
U6VykpGLJ4EyA8uNp1g8yaSgzjMJjInHqThGJmIUiCQIjJaDSgFJTzBgRSCT
afAVpl+gVxfgtikBh6VysB5GYNMCDwNeWYDVB9ZwCh+HOIrcNgcpOwKBGBd8
qu1jWq8Me/jhgpmx9TNwMimwyjQMTg54Q3b1w7XlQOGHEzjwp9DYw7NFAkWI
NKkUyXPwJFQqjSeUvgEfgkwxFM7CIJTgaGW+EkytC7Kwg+cXeFoRdoFnRJHN
SCysYP8kuz4WpO0IBGKc8Km0j823D2u7wGUUx86P1XbmR+ODtsMEOCMvAXKv
XW7kMBTsJEwq2XKOlgtdqOHk+XDI3XrHhjh8IZBWQn4JBkq6wMDO8/BCg4OL
EdJ2BAKBGMOnvv1jbR8uiZQ+ClaJ0eS2/C0zNuQlQAn5MXJFJVBmaL/lUaf8
yDi80a+jMUbSlZJ1RmRhKEsMfK0xzQTkEDLihz3TH9V2JO8IBGJc8QPfPho/
0PYPtZECJ47EmI1XVjbSH2KMz+fGlM2Pmnllczb9USjmX5H00QfAdDrc1QUx
nC8Sf6RwXZRHLCnx4X5lvULajkAgxh8fa7uoFM9kYAOxkU4sguzVhzcoeRhj
DLMcvCiyP4jhR459PCxKZDIiCBbeEH6Q0lEKF2X/Dxw+vC1LPVg15F1duUpT
gAsKfMKxwv7hZO1oYYwSP/iAP+3fGYFAIP41+Vjb5e5hmY/srjgsmKJcLCkr
vDiinqISgvhJCAI/GiN38iMhCPINWfNlwy8yI4uCci0gwIcIww/+KLEiyE8l
jVrxMbNQfxAIBAIxjvmRahkllaFkr5XycGmkZeSY/MZH+j9capgZDUGRZzk+
/Hw44BPKzw9UmhUkRgDaLrFycIrDHvN4+A6Ud6J4bymjLCpyYSMScQQCgfgx
fpe2/64H/6i2f/orv+tpP36YkMkAMedkSQfBShL/6a9/+i7+xT48AoFAjBt+
VFeHPfPH2v77F4J/3kvJyRmY50fJFAQCgfgj8vu1fez9f7C2Z5SOB3/IMyAQ
CATin8O/mraPJHb+oNUBgUAgEP8c/pW1/Q90/n88/jTfFQKBQCD+fzC63KDj
TggEAvEzA2k7AoFA/CxBwo5AIBAIBAKBQCD+GEgIBAKB+Nnx/wJGb2CY
    "], {{0, 280}, {500, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{500, 280},
  PlotRange->{{0, 500}, {0, 280}}]], "Input",
 CellChangeTimes->{{3.6997914616395655`*^9, 3.699791463893727*^9}, 
   3.6997915046957088`*^9, {3.6997915768003283`*^9, 
   3.6997915885636272`*^9}},ExpressionUUID->"8b070ef0-d2d6-4d97-b142-\
84ab93c8757c"],

Cell[TextData[{
 "Connect the sensor to your computer, then evaluate the following input (",
 ButtonBox["need help on evaluating inputs?",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/language/fast-introduction-for-programmers/en/\
interactive-usage/"], None},
  ButtonNote->
   "http://www.wolfram.com/language/fast-introduction-for-programmers/en/\
interactive-usage/"],
 "):"
}], "Text",
 CellChangeTimes->{{3.6997125247443123`*^9, 3.699712579376305*^9}, {
  3.6997127004721985`*^9, 3.6997128136174693`*^9}, {3.6997129340482063`*^9, 
  3.6997129667085037`*^9}, {3.6997916542560883`*^9, 3.6997916545914288`*^9}, {
  3.699792988358832*^9, 
  3.699792989078521*^9}},ExpressionUUID->"b9e9fd37-a6da-44fe-b5b9-\
cd03ca88e2d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sensor", "=", 
  RowBox[{"DeviceOpen", "[", "\"\<Vernier\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6997124941990185`*^9, 
  3.6997125020005355`*^9}},ExpressionUUID->"3c54919b-54fe-46b3-ac6e-\
09a63916accd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Light 6000 Sensor)", 
                "Not Connected (Light 6000 Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 2}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{199., {5., 9.}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[RasterBox[CompressedData["
1:eJzFmGdoFVsQx6OJWFBBsPJsT0FQBBUbSFRQiYoKIhbsmugHW4IV/WDvYo1d
Y42JBWuKvcSCvTwTjS2xEmvssUSj+35v/9zDevfmPrHEgbvMmT07Z/rMuX+H
RnQIDQwICPiLXwi//3DLA58/f966deuqVavAv3z58tWGyMjIffv2QQG3fMFX
D+RGd77ys9O99El3E31KhfwfP36cN29eYmLiihUrzM5Pnz4tWbIkPj5+6dKl
6Ms2tzA+dXTvdFO+H9x28GkZAzk5OTx379595MgRkJUrVxpR0SIqKgoE3504
ccKnYLIG4HXQmzdvnj17lpmZ+erVK1Hg9uHDh+zsbKcwnM63EI2oLNkGHSI4
X+kVfDJtgLNhyAbM7qWdhCTYXr9+DSupoD28Wr9+Pc+7d+9u3LjRqG+Ef/v2
bcOGDStXrlyxYsVJkyZpQ1ZWVp8+fYoXLx5gQ1BQUM2aNS9evHjhwoUKFSq0
bdtWnyMPzwMHDkBs37692CIADKGkp6d36dIFBDu/ePEiJCSkcOHCYliwYMFG
jRo9evRo3bp1bAgPD9e5TnsiM8HG8927d14aRUdHgyC58st8ItVmzZoV4IEi
RYogBhvYybJx48aHDh06evTouHHjqlSpMnv27DNnzkCvVauWwlKsdu7cCbFu
3bqiYI1SpUpBuXHjRnBwMMixY8emT58O0q1bt6SkpMOHD/fr1w8bkiDLly+H
juKyj9NNhMfq1asVKm6N5ESiEQM6HUQAlC5dGp6dO3euXr06SFhYGG9HjhwZ
GBhYp06dXr16de/eHSLC4OtTp07lz58f84qJQoIkhdikSRNjKKSFcvPmzWbN
moGgBZ/DkD0w7NGjBwy7du2KaniBDaGhofoWsyv4gZSUlG3btukUt0ZSPyYm
5t69e3olB40aNQotihYtylfz589XPGRkZEyePJmD8EWYDfXq1eMV5xJ4RGCl
SpWePHny8OFDHNeyZcsdO3ZAJHiuX7/OcbimZMmS7L9161aLFi14hZfRAgSX
iWHVqlXZsHDhQqwkOqGFucqXL9+zZ09pRDAr8X36SBpROk6fPq185C2ZVaxY
MTjjEZmCVGLZv39/Ih+kXLlygwYNIsjlPmKeQxWfZEShQoVA2rRpk5CQYOK2
RIkS+fLlA8FNuK9GjRrghC71FoRkhNvAgQMVlmQlxRkE62FVnKjTpdHmzZtJ
ATnOrZE8goXj4uIsu6TzJJjhAPOnT58qLHVugQIFzp49SyqRy/Xr12/QoAGl
gKPZc+3atd69e2PbBQsW4B3w27dvp6amgpApy5Yta9WqVevWrbHD1atXYThn
zhxUuHLlCidOnDixefPmMKRudOzYUdm9Z88e4nDDhg1jx47lQ5TF9ZIcLVQS
Sczc8ujx48d4WRY4f/68jDllyhR5jT1YtVq1ahCbNm1q/TQgAFoQRfgitw25
fYsF1INy08j0JtVDlji3TJkytWvXfvnypaqE/EiulS1bllf79++HAuccGxS3
qkg5DhA3L6KW7KeGkCaUDnBSPudbkHjabJ4SFePLiX400pJ6SGuw7GbHToWf
l9GyPPDD3jFAh8XvPzBsEMlKEMuuDM6ZwXRYsaUeKsKNCl7H+YmEvATKI71P
OM5VskhUnps2bTJLmt3Bgwe92plzgDQK/hLV/A9vfgDLP3jwQDhpOHPmTGd8
Tps2jYokzjSLLVu2WLaCaWlp1C7zoQEqPHTLMb2bCcEPKAy8lt8Jbo2otGZ6
pLTSrJ1vaSKafyw7JumkpBJFsoMNffv2ff78+f379+/cuUP/pa/hU1qPW9O8
BKYjEzDcGvbu3Uu3JcCIRhB6OhXM8rQhYpIWMGTIECaTTp06MQkwZDKzxcbG
MsrS5UnDGTNmcKWiwdH302wASbfBLNM84NxmAKumeoDMFYLrL1++/M+3wM6v
nsuUUyMzNzIJaLxM8gBy0sIsz6gAQvUbMWIESg0ePJgQvXTpkmE1YcKEdu3a
DRgwYPTo0TRHNvBk59ChQ2l/ERERw4YNY8mTV8OHDw+3AYSuajazZDMUnrDS
EjrzD8IwoCY4gDGYDuL2kZ8KiY5EkfERDGnlZBOVHH3xyNy5cxlZlXcELSMQ
gUrnwssMk/I18wCGAj958iRLIoFXbIMDRDbTv2TA48ePsyROQNjJE3vicT4k
pN3iEeT4jhmMhsKT9Hn//r1TI/VKVQaWiEcIaYbUqM8AAx2zIIk+oRRwI7Ds
sVmVn4KJ/M5zvYRh6QwS6qezeKKsGfIBlGI2E44YpsMiPM/FixdzL+OJYJGR
kdzLxowZgxhO/qY0UfcWLVpkzoIIEyim1AOUBfySnJyswggrr3vK7wPJzIl4
nCs2AUk64GuERDUzrhjheSI8HrTsDHK+YqylVjCcgFAGmSTNKSwZ7HWbznbA
L1wa0AV/7dq1GqGd2USaEHgIQ2oQY9u3b7fsHGdgxg7jx48nCzDF1KlTqXsk
I3bgE4i7du0irQgh6AQeT1KYLIBVVF4BAz/FEPG4cykmjQd1T6efIiH5gmq4
gFcMwKjAK9pNig3JNnC14SLJ7VUUPAVCn8qDePtfcNZzjak4gmRZs2YN1YPu
ydL91blz5ygOzpD7I+BnUjIaUXlU0Oh9TAiJNlieS5DzTw+BIXrR/zioGpBK
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Light 6000 Sensor)", 
                "Not Connected (Light 6000 Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Vernier", 1}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                   MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Vernier", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6997125044548335`*^9, 3.699712819986573*^9, 
  3.6997916793969173`*^9, 
  3.6997918349066415`*^9},ExpressionUUID->"ef69ced4-f2e7-45cc-90d2-\
0d50e5232a5f"]
}, Open  ]],

Cell["\<\
If the \[OpenCurlyDoubleQuote]Status\[CloseCurlyDoubleQuote] field in the \
output shows a green dot, you are successfully connected to the sensor. \
\>", "Text",
 CellChangeTimes->{{3.699712992687853*^9, 3.699713128029845*^9}, 
   3.6997139551135426`*^9, {3.6997917450319614`*^9, 
   3.6997917461280117`*^9}},ExpressionUUID->"c030cf97-85eb-4292-a763-\
f1b6a7838fec"],

Cell[TextData[{
 "If the \"Status\" shows a yellow dot or a red dot, then ",
 ButtonBox["click here to open the Troubleshooting Guide",
  BaseStyle->"Hyperlink",
  ButtonData->{"TroubleshootingGuide.nb", None}],
 "."
}], "Text",
 CellChangeTimes->{{3.699712992687853*^9, 
  3.699713128029845*^9}},ExpressionUUID->"9ac6b53e-d56f-4fcc-9e5e-\
7f37313e682d"],

Cell["You can now read from the sensor:", "Text",
 CellChangeTimes->{{3.699713897582999*^9, 3.699713944839697*^9}, {
  3.6997144347586184`*^9, 3.699714435439269*^9}, {3.699791708303795*^9, 
  3.6997917108549895`*^9}},ExpressionUUID->"ab2181ce-4f43-4933-90bb-\
0ab2cb912dc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceRead", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997139262365284`*^9, 
  3.6997139315205917`*^9}},ExpressionUUID->"8d49de48-9f1d-4035-901e-\
d85dbcd5a994"],

Cell[BoxData[
 TemplateBox[{"441.485595703125`","\"lx\"","lux","\"Lux\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.699713931838897*^9, 
  3.699791683452804*^9},ExpressionUUID->"80cf91f9-20b2-43f0-8012-\
140e17f9a616"]
}, Open  ]],

Cell["\<\
You can also read the most recent values recorded in the sensor\
\[CloseCurlyQuote]s buffer:\
\>", "Text",
 CellChangeTimes->{{3.699714782022566*^9, 
  3.699714809703727*^9}},ExpressionUUID->"42688dc5-8ba1-4f7a-a47a-\
08601d0998cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceReadBuffer", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997147560527315`*^9, 3.699714780031656*^9}, {
  3.6997148195917645`*^9, 
  3.699714820159308*^9}},ExpressionUUID->"ed62c751-c6d1-47c3-838a-\
57e7c41f889f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["QuantityArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                   1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                   1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                   0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                   1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> 
               True, Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, 
               ImageSize -> {Automatic, 
                 
                 Dynamic[(3.5 CurrentValue["FontCapHeight"])/
                  AbsoluteCurrentValue[Magnification], 
                  ImageSizeCache -> {94., {1., 9.}}]}, 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "507", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"Lux\"", Short[#, 2]& ], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                   1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                   1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                   0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                   1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> 
               True, Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, 
               ImageSize -> {Automatic, 
                 
                 Dynamic[(3.5 CurrentValue["FontCapHeight"])/
                  AbsoluteCurrentValue[Magnification], 
                  ImageSizeCache -> {94., {1., 9.}}]}, 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "507", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"Lux\"", Short[#, 2]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{
                    "383.52447509765625`", "\"lx\"", "lux", "\"Lux\""}, 
                    "Quantity", SyntaxForm -> Mod], ",", 
                    
                    TemplateBox[{
                    "441.485595703125`", "\"lx\"", "lux", "\"Lux\""}, 
                    "Quantity", SyntaxForm -> Mod]}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("StructuredArray[QuantityArray, {507}, <Lux>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699714761109165*^9, 3.6997148112217426`*^9, 
  3.699791686014259*^9},ExpressionUUID->"7585b654-29e2-425c-afad-\
c0caaa19ba1a"]
}, Open  ]],

Cell["\<\
Or take measurements over a given time interval. In the input below we are \
measuring every 0.1 second for a total duration of 10 seconds. A progress bar \
is shown while the Wolfram Language is reading data:\
\>", "Text",
 CellChangeTimes->{{3.6997148495506096`*^9, 
  3.699714958894782*^9}},ExpressionUUID->"331b50c5-a685-450b-83d7-\
e9948fd61248"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceReadTimeSeries", "[", 
  RowBox[{"sensor", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6997148340631*^9, 
  3.699714871168326*^9}},ExpressionUUID->"aa771cbd-ce69-4c10-a74d-\
e16734044be0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, {
             {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
              StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                "]],
               StripOnInput->False,
               FontFamily->"Arial"]}}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"10:54:49.426\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"10:54:59.353\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, {
             {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
              StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                "]],
               StripOnInput->False,
               FontFamily->"Arial"]}}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"10:54:49.426\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"10:54:59.353\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.10008955001831055`",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{{
      Quantity[435.0311279296875, "Lux"], 
      Quantity[437.0965576171875, "Lux"], 
      Quantity[443.551025390625, "Lux"], 
      Quantity[443.551025390625, "Lux"], 
      Quantity[447.81097412109375`, "Lux"], 
      Quantity[447.81097412109375`, "Lux"], 
      Quantity[450.0054931640625, "Lux"], 
      Quantity[452.20001220703125`, "Lux"], 
      Quantity[447.81097412109375`, "Lux"], 
      Quantity[450.0054931640625, "Lux"], 
      Quantity[454.26544189453125`, "Lux"], 
      Quantity[454.26544189453125`, "Lux"], 
      Quantity[456.4599609375, "Lux"], 
      Quantity[458.525390625, "Lux"], 
      Quantity[462.9144287109375, "Lux"], 
      Quantity[467.17437744140625`, "Lux"], 
      Quantity[467.17437744140625`, "Lux"], 
      Quantity[469.23980712890625`, "Lux"], 
      Quantity[469.23980712890625`, "Lux"], 
      Quantity[473.62884521484375`, "Lux"], 
      Quantity[473.62884521484375`, "Lux"], 
      Quantity[473.62884521484375`, "Lux"], 
      Quantity[475.69427490234375`, "Lux"], 
      Quantity[479.9542236328125, "Lux"], 
      Quantity[477.8887939453125, "Lux"], 
      Quantity[477.8887939453125, "Lux"], 
      Quantity[479.9542236328125, "Lux"], 
      Quantity[479.9542236328125, "Lux"], 
      Quantity[479.9542236328125, "Lux"], 
      Quantity[479.9542236328125, "Lux"], 
      Quantity[484.34326171875, "Lux"], 
      Quantity[484.34326171875, "Lux"], 
      Quantity[484.34326171875, "Lux"], 
      Quantity[486.40869140625, "Lux"], 
      Quantity[486.40869140625, "Lux"], 
      Quantity[488.60321044921875`, "Lux"], 
      Quantity[490.66864013671875`, "Lux"], 
      Quantity[492.8631591796875, "Lux"], 
      Quantity[495.05767822265625`, "Lux"], 
      Quantity[497.12310791015625`, "Lux"], 
      Quantity[492.8631591796875, "Lux"], 
      Quantity[492.8631591796875, "Lux"], 
      Quantity[497.12310791015625`, "Lux"], 
      Quantity[499.317626953125, "Lux"], 
      Quantity[499.317626953125, "Lux"], 
      Quantity[503.57757568359375`, "Lux"], 
      Quantity[505.7720947265625, "Lux"], 
      Quantity[507.8375244140625, "Lux"], 
      Quantity[512.2265625, "Lux"], 
      Quantity[514.2919921875, "Lux"], 
      Quantity[516.4865112304688, "Lux"], 
      Quantity[516.4865112304688, "Lux"], 
      Quantity[520.7464599609375, "Lux"], 
      Quantity[525.0064086914062, "Lux"], 
      Quantity[525.0064086914062, "Lux"], 
      Quantity[527.200927734375, "Lux"], 
      Quantity[527.200927734375, "Lux"], 
      Quantity[529.266357421875, "Lux"], 
      Quantity[531.4608764648438, "Lux"], 
      Quantity[533.6553955078125, "Lux"], 
      Quantity[533.6553955078125, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[539.9807739257812, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[533.6553955078125, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[535.7208251953125, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[537.9153442382812, "Lux"], 
      Quantity[542.17529296875, "Lux"], 
      Quantity[539.9807739257812, "Lux"], 
      Quantity[539.9807739257812, "Lux"], 
      Quantity[542.17529296875, "Lux"], 
      Quantity[544.3698120117188, "Lux"], 
      Quantity[544.3698120117188, "Lux"], 
      Quantity[548.6297607421875, "Lux"], 
      Quantity[546.4352416992188, "Lux"], 
      Quantity[548.6297607421875, "Lux"], 
      Quantity[548.6297607421875, "Lux"], 
      Quantity[550.6951904296875, "Lux"], 
      Quantity[552.8897094726562, "Lux"], 
      Quantity[555.084228515625, "Lux"], 
      Quantity[557.149658203125, "Lux"]}}, CompressedData["
1:eJwt0WtIkwEUh/HZpKAPpmW86MLNLGaoYTR4I/FWktUwKwdJaUxZbLQigkAo
RLyAEgQLBotMogjsgshQWGUFxchRoSWhJF4aU2ZO1FRSSyx9Th8Ov4+HP09y
5ZXTF7QajSbq/9nWbmtrhv6dK5J/JJSJhxQT5ppVzKo5iAc6ssVwHpp0BZhR
XIh76o/jbl8R7oycxCS9BXUlZ1BpPIvxXeUYO2MVU2x4yW5HZ/NFsfcyOrRX
0apewzJnFb5uv46vQtX4QqnFTnMDemsasa3jJj4J3xJ1t/FhsRvv13tE3130
RFrQrX+ArpJH+MvTivMfn2LkbxtO7PfimL0Tg80+sfclftO+wX71rej048bH
3bhh6AMub+nBucNfcLbqK04/G8DJ0UEMbxvBUGEQv98Yw6H2sPRbmJR+qdOo
lv2Ubq4F6eZfFJd+Y2r6KhqtUYZ1U9zRaAhswsSVzViXF4PBhjgcfh6Pg1OK
aNBhnyUJe5qScdW/C5eXjPgnPQ3nrXtx1r0PpwIm/LGi4nhmlmjLwZE7+fLn
UwH2a47igMksOk7g+3unMPDZgsbtpZh27Jzsqz4v+7wVuGPchkqCAxOKnPgP
fdSeQA==
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6997149215158234`*^9, 3.699714970208624*^9, 
  3.699791699504302*^9},ExpressionUUID->"21a842bc-43f1-480d-a8dc-\
e85d8e105e6d"]
}, Open  ]],

Cell["\<\
When you are done, you can close the connection to the sensor:\
\>", "Text",
 CellChangeTimes->{{3.699715093126973*^9, 3.6997151147823043`*^9}, {
  3.6997917264876747`*^9, 
  3.6997917275351963`*^9}},ExpressionUUID->"f1b118aa-995c-4d8f-9188-\
241c06834569"],

Cell[BoxData[
 RowBox[{"DeviceClose", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997151157762537`*^9, 
  3.699715118959304*^9}},ExpressionUUID->"4582710d-58e7-4e67-9018-\
e6caf54ee4b4"],

Cell["\<\
After you close the connection you can unplug the USB cable and connect \
another sensor.\
\>", "Text",
 CellChangeTimes->{{3.699715132446232*^9, 3.699715151894859*^9}, {
  3.6997917312557583`*^9, 
  3.6997917318233013`*^9}},ExpressionUUID->"172a013d-0a98-4046-9c7a-\
ab07d27eb85b"]
},
WindowSize->{775, 872},
WindowMargins->{{225, Automatic}, {-15, Automatic}},
DockedCells->{
  Cell["", "DockedCell", Background -> 
   RGBColor[0., 0.35294117647058826`, 0.3686274509803922], CellMargins -> 0, 
   CellFrameMargins -> 0, CellFrame -> False], 
  Cell[
   BoxData[
    TemplateBox[{
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1: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
4//WLMsl
         "], {{0, 65}, {170, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic], Selectable -> False], DefaultBaseStyle -> 
       "ImageGraphics", ImageSizeRaw -> {170, 65}, 
       PlotRange -> {{0, 170}, {0, 65}}, ImageSize -> {170, 65}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {100, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[100], Selectable -> False], 
      StyleBox[
      "\"Light Sensor\"", FontColor -> GrayLevel[1], FontSize -> 36, 
       FontWeight -> Bold, FontFamily -> "Helvetica", StripOnInput -> False]},
      "RowDefault"]], "DockedCell", Background -> 
   RGBColor[0., 0.45098039215686275`, 0.4666666666666667], CellMargins -> 0, 
   CellFrameMargins -> 15, CellFrame -> False]},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 320, 7, 49, "Text", "ExpressionUUID" -> \
"1e8e5e73-bc6f-4d60-a3f9-b9a79adda570"],
Cell[881, 29, 98571, 1620, 295, "Input", "ExpressionUUID" -> \
"8b070ef0-d2d6-4d97-b142-84ab93c8757c"],
Cell[99455, 1651, 752, 17, 30, "Text", "ExpressionUUID" -> \
"b9e9fd37-a6da-44fe-b5b9-cd03ca88e2d8"],
Cell[CellGroupData[{
Cell[100232, 1672, 235, 5, 30, "Input", "ExpressionUUID" -> \
"3c54919b-54fe-46b3-ac6e-09a63916accd"],
Cell[100470, 1679, 16467, 347, 72, "Output", "ExpressionUUID" -> \
"ef69ced4-f2e7-45cc-90d2-0d50e5232a5f"]
}, Open  ]],
Cell[116952, 2029, 377, 7, 30, "Text", "ExpressionUUID" -> \
"c030cf97-85eb-4292-a763-f1b6a7838fec"],
Cell[117332, 2038, 354, 9, 30, "Text", "ExpressionUUID" -> \
"9ac6b53e-d56f-4fcc-9e5e-7f37313e682d"],
Cell[117689, 2049, 274, 4, 30, "Text", "ExpressionUUID" -> \
"ab2181ce-4f43-4933-90bb-0ab2cb912dc5"],
Cell[CellGroupData[{
Cell[117988, 2057, 198, 4, 30, "Input", "ExpressionUUID" -> \
"8d49de48-9f1d-4035-901e-d85dbcd5a994"],
Cell[118189, 2063, 224, 5, 39, "Output", "ExpressionUUID" -> \
"80cf91f9-20b2-43f0-8012-140e17f9a616"]
}, Open  ]],
Cell[118428, 2071, 242, 6, 30, "Text", "ExpressionUUID" -> \
"42688dc5-8ba1-4f7a-a47a-08601d0998cf"],
Cell[CellGroupData[{
Cell[118695, 2081, 253, 5, 30, "Input", "ExpressionUUID" -> \
"ed62c751-c6d1-47c3-838a-57e7c41f889f"],
Cell[118951, 2088, 10942, 216, 72, "Output", "ExpressionUUID" -> \
"7585b654-29e2-425c-afad-c0caaa19ba1a"]
}, Open  ]],
Cell[129908, 2307, 361, 7, 49, "Text", "ExpressionUUID" -> \
"331b50c5-a685-450b-83d7-e9948fd61248"],
Cell[CellGroupData[{
Cell[130294, 2318, 277, 7, 30, "Input", "ExpressionUUID" -> \
"aa771cbd-ce69-4c10-a74d-e16734044be0"],
Cell[130574, 2327, 14848, 355, 72, "Output", "ExpressionUUID" -> \
"21a842bc-43f1-480d-a8dc-e85d8e105e6d"]
}, Open  ]],
Cell[145437, 2685, 267, 6, 30, "Text", "ExpressionUUID" -> \
"f1b118aa-995c-4d8f-9188-241c06834569"],
Cell[145707, 2693, 197, 4, 30, "Input", "ExpressionUUID" -> \
"4582710d-58e7-4e67-9018-e6caf54ee4b4"],
Cell[145907, 2699, 292, 7, 30, "Text", "ExpressionUUID" -> \
"172a013d-0a98-4046-9c7a-ab07d27eb85b"]
}
]
*)

