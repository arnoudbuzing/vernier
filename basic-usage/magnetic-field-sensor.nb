(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    101633,       1987]
NotebookOptionsPosition[     94181,       1836]
NotebookOutlinePosition[     99699,       1944]
CellTagsIndexPosition[     99656,       1941]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This sensor uses a Hall effect transducer, and measures a vector component of \
the magnetic field near the sensor tip. It has two ranges, allowing for \
measurement of relatively strong magnetic fields around permanent magnets and \
electromagnets, as well as measurement of weak fields such as the Earth\
\[CloseCurlyQuote]s magnetic field. The articulated sensor tip allows you to \
measure both transverse and longitudinal magnetic fields.\
\>", "Text",
 CellChangeTimes->{3.699715254464568*^9, 3.6997916443859177`*^9, 
  3.6997929818087907`*^9},ExpressionUUID->"2e15acf5-1f59-47f8-9e20-\
6d643c1150a2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQdcFNf6/39vErt0WGDpZQvL7rKN3ll67713QRFQsWCNvcZuYmKsMcao
sfeSWGKJFQVpKiqiUhSxIgL/Z+bAhpvkfr+///cmN9fc5/06mQyzu8Mg+j6f
eebMGZP0keHZH/ztb38bNRAW4Wlj3YuL08ZHqMIXUQWjhuUUZGX6FYzOyskq
tkv/EDbq/v1vf3sB/1Hr3QiCIAiCIAiCIAiCIMifR1cvv97SdyOCIAjyHoFu
RxAE+euBbkcQBEEQBEEQBEEQBEEQBEGQ/zNYUUcQBPnrgW5HEAT564FuRxAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRDkPaKrl9/9zf+G9yMIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgvyO4PztCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIL8Bej6JX/2ASEIgiD/bxBlE3d3dna+
e0e1zs5/+v7OXvoaH72PIAjyH0KvzCk6Ojpg2fdV2PL8+bPm5sePHzc0Nj5s
bm58+fJ5R8dbxRvIBxV7+J/6AwRBEOSPgkRrYvTf8PC7zjcNDffOnjv1zdav
Fi9eUFo6trCoIDc3Oy0tNTU1JT09rbBw5IwZM9atW3f27NmWlpZfZ3Us3CAI
gvwbAd92dnVBtO6AFbIJ4nZT0+Oqqps//XT+8OGDa9eumTR5fEpqQnCIv4+v
3NPLzd3D2cnZ0dnZ2dPTMzw8PDExMbuXzMyMoqKi6dOnL1iwYPXq1Tt37rx6
9WpbW1vvnjvR8AiCIH8sVEzv6Oh4DcGc/vrd7dvVe/Z8t2TpounTp4wZU5Se
nhwcEiCXu3rIXaC5uTvJrEWWfI5UJnJ394iIiIyLi4+NjYuIiIIWGBjk7+/v
4+Mjl8s9PDxg6e3tHRAQEBUVVVBQAJG+traWfFtSq/kTf24EQZC/GKTs8ovw
/Kyt5cT3h+fOm1lQmJc/PDs7Jy0mNsLXzxPyuasb5HN7qVRiYmpiYKAvEPAh
q4eFhYWHR/r5BXh4eLq4uDk7uzo6Ojs4ODo42NvR2APwtROV7V1cXJycnFxd
3aKjoz///IvW1mfwzbECjyAI8i9Cl7rfvet82931s1Hpa6RvHz1q2Lbtm1Gj
C9PSkocNy8rOyQgLD/b0dHNxdXRyAknLuFxzLS11DXVNCy7Py9M7JCTU19cP
hO3o4GgPIre1l4hlIpFEIBAJ+EJLHgWXy2Wz2SY05mYsmUwWExM9e+bM3bt3
lt+49vLl0+6u9ncd7VicQRAE+T9A3Elr/W1X91t6veNu3Z2jRw5t2rj+yzWf
z583JzcnKyUpMT8P/p8ZGhLk7ubiRKVvW6lEZG5qoq6moqI8lM0y9/KQBwUE
ujq72Frb2Nva2chkYpFQyOdZWljweXwh38qCwzfUN9LWYmhpaDJ1dIV8QURY
eOn4CV9/9XVFefmd2pqmxw9ev2h9eK+m6sapKxeO1ddR9RnqBII6TJQ8giDI
/w9IYoeV169fnDp9YvasGfl5wwpG5ENLTIxPTIgbnj9sWG52eFgIWN3F2dHR
wU4osDQy1FdRGTpoYH9YcXZy8PaSQ0YXW4mgSURiyugcrlhkZWcrs7WxFljy
zUzMzExYNjKb+Ni4mdNnfLdjR8WN8qbGphdtz5+3tT6ovzt7xtRVyxdt37r+
+6O7L587eOnc0drKsrftr3sGz2CARxAE+X+ms5OyeldX55kzpydMGAsyh3Q+
qrgwPS0lIT4WsjqIPToqwsPdFcQOVudbWugxdSCo9+/3oYa6KkR3N1dnG2up
FaRwS76Ax2eZmZsYGfO4FtZSmUwqFouF8MHUlKQF8+YfP3rs/t17z562gs+f
NLfcq7tbcaOi8ia06+fOnpo3e+rST2YeO7zj+6M7r54/fPHHQzeu/tjW2vjm
zauubhwbiSAI8r+guCGUXKysr7+3YMG85OSk3Nyc0aNGZWWmx8ZEZWdljCwY
DqEdAjmJ6wI+D6yupqo8oP9HgwcNMDczgbgOVrfgsrkclikI3dBQn6lnZ2uX
EBefnZk1qmjUimXLThw/equ2+sXzZ61PWyrKr504fuRG2fXr18qglV+/UVlx
s6qy8vatqprq8s9WLZ4ycdSenV99f+S7sgtHrpw7VH7ldPm189eu/NSNN64i
CIL8P0Cum8LKufOni4oLhg3LKSkZnZ2dHRUVnZGeVjhyRFpqsq+PF1gdmlRi
ZWSor66moqw0ZMjggZoaamKR0N7OBmzPMjc1NNBTVVGCl9jmrMWLPtn+7bZP
Fi5aOH/B7dpbrU+e3r9Xd+tWzaqVSxPio93dHAIDfC6cO191s7LiRjmIHVp1
ZWVtdXVVZcWhfXvGlxTu2Lpx/84tF08duHb+8JVzR6orLu7Zub35cVM36h1B
EOQf+YUVOzvfgdohth89enj8hDElJcW5udmRkdTtRSNHFmVnZgYF+oPSXV2c
bWxkZqbGIHOwNyR2FeWhJsaGtjbURVLI7UT4Awf002Zosllmzo5O8bFxIUHB
UolUYMnfuH7jzfKKK5cv1VTfnDJ5PN+SLZMKbGSSvbv31FbXkNBOt8qaqtrq
yuqTx49NnjBu84Yvj+7fdfbY7ss/HvjpzL7qivMH9u746ez5X/8UCIIg/430
ipBK6O86Oju7oMEKNPq1jmPHD06aPDYnNzsiIiI6OnoYTWhoqIeHh7u7u52d
HZfLZTAY6urqWpoaYG+mrrZQYGktk0BWh3UNddWhQwaB9iViK76lhQWXLZFI
Bgzor6WlxeHwTE3ZkyZOq62uvV52tbbm5pavN1AXVa1trARWK5Ytv3Prdh+3
Q3SvglZ2+dK0SaXLFs3fv2vH2eMHrp478tOPe8uv/XDy+P5dW7d1o9sRBEF+
phM03rNG3eZJ6bGp6dGWb77Kzk6PiAiNjIzIzs4Gq0dFRYHV3dzcnJycLC0t
9fT0wOo6OjqwoqvNMDYyEFkJBHwerOjr6Roa6FnyuOBzHW0tED58OWhgf1NT
Uy0thqqqGpdraWbKiYtNulFWfu3qlZsVZSd/OCb3cJVJZEK+VdHIQsjtFTfK
IdUTt1fdrIQtVeU31n2xevqU0n07tx/e/e3FM4cunzt09eLxG1fObV6/of1N
+5/6x4ggyH8hXWTGFXrSFepe+X/S/hcU1zd/Ne35/3EMYM/tSO9eNzTcf/Xq
FWxpeHh367ebh4/IDQ4OioyMzMrKzs3NjY2N9fT0dHV1BauLRCJjY2PI3rq6
usZGRkwmU1NT08zUhIRzNssMlk6O9gb6TBNjQ9A7BHiGlgbYfuCAfgYGBtAR
DB48lMXicjl8N1f5ye9PQz6/XnblxvUrCfHR0DmIhKKIsPDLFy+BzxVuh3a7
traqvHzH1m+mT5kIbj+yd+fZ7w+e/eHA2dOHK8ouHj9yqPVpazdGdwRBfm8U
04y/+0fouW07OjvfQqP1/sfKp1f/Pfz6YACyHY4L1uEjNbUVE0pLFi1cuG79
usysVD9/r4iI8CyKnJiYeE9PLxcXF0dHJ7FYbGJiAlaHrA4J3MjICHI7g8EA
21sJBaYmRi7OjjwLjrqaChheQ111QP+PQO8sc1OI7qD6wYMGMBhasIfBg4cY
GhoL+GJomzZuqamqvXb1cm1NRemEEgHfQiaRONjZHzpwsLqyiridSB6+vF1d
deLIofyczDWrlh/dt7v86k+3q8pqK8vqblfV1lS2tqLbEQT5nekbp//5uzrf
tL9oefL4zp2aa2WXfvzx5JGjB3bv2bFt+5avt2z8avP6rzZv3Lx507fffrNz
5469e3efOHHs7Nkfr127VlVVdevWrTt37ty9e/d+L/X1Dx4+fPjo0aOmpsan
T1tevGh7/fplB3UP/jvFTIz/K2/fttfX35s6bYKfv2diYnxyclJ0dFRaWlp6
enp4eLinp9zNzc3BwQGsDlldkwaCOlhdX1/f0NDQwsKCxWLJZNZCoUBVRQnC
uZGhPjgcsrqhgR4V1PWZZqbGekwd2K6mqgyw2WxVVTUdHaZQIGGZW3w8ZWZt
9e2ya1du1d5cv+5zqURgZ2MtElqtWrHyzq3biqEykO3B7VXlNypvlB09uO/U
8SO1FeUXzpz6/uihY0cOll27dKu28uWrF7/LrxJBEKT7V0Gxvb29ra2tubm5
tra2rOz61atXr1y5cvLk9yDwRZ/MGz2mEIJxdEx4YJCvp5ebi6uDvYO1tY1Y
JBYIhBaWlhY8HheWQiFfLLaSySR2dnbOzs5yudzX1zckJCQuLjYjIz0vL6+w
sLCkZMzYsWNLSkqKi4tGjMjPy8vNzc3Ozx9WXDxy/PixM2fOXLx48erVq9ev
X79t27b9+/f/8MMPly9fhg4C8i0cYWVl5Z49e2bNmpGYFGPOMrDks0NCAoOC
gpOT0oODwlzd3B0obKVSqgKjpqamoqICEd3YxAR8LhQKzc3NuVyuvb29hoaG
qqoqh8OGoA72hpSuojwUojsofcjggVqa6mxzUxA7qF5XhzFkyBD4oI6Orqam
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
a1i8fPny+fMXz589a2ttfdH27M3rV53v3nbCxzrePn/+rKGhvrz8+okTx7Zs
2bx06ZLS0tKcnJzIyEg4GFdXN3t7O5lMLLSyZLHN9A10wf+6TCqQQzIHq0NE
h7ju7OQQEhyYnZUxberkz1d/emD/3qtXLt2/V9f4+GFT40NYPn3S/Lyt9dUr
yuq9fRCCIMi/A3L7zM3KshEFuSGhAYGBftTlVG8vDw93Bwd7a2uZBZcLMock
q0SNKRwy6GeoETJDh1IXHBWjIhVQ6ZehBX4Ht5uaUDkXlmIrUXBQYMGI/EkT
J8DSx9tLT1fnw7//7YO/f6CmqgpnCtChwHkBNSieekAf30ogAsnnDxteU1Xb
c7Rv37W/bn/7pqP9zds3r9+8piTe6/DnL9vaXrS1tT2jgWz/9OnTJ0+ePm1p
fdL8tLmppfFR06OGRw/uN9y/d7e+/l59/f2GB/UPHzY8etTQ0EA9vLW+vv72
7duVlZVXrlw5ffrk/gO7Nn21bumyRXPnzZgzd8b8BbOXLF60+rNPN2xYt337
t0ePHP7pwrmqypv19+8+bKhvgr03Pm5qegwrT1qaQOlwUO3UuUM7fULRQ1cv
f84vG0GQ/xpAM530XLWXLp8vHpXv5+/m6urg4mQPXrexlsikIr4ldUGTqaPD
gBCv3jOZADWNgBJYfTCZkkWZGkCiTKZMB0X3TC9DRXoDPT1dLS0NWPXwcAsN
DfLy9OTzLJWHKv39b3/78O8fkCcZmZmYss2pW59YZub0JDNcsVACbre1tlux
bOWLtpfdnd0vX7wkvKBpowGBP3nypKWlhSybm5uamhqBx48fPyLKfvCAPHr7
3r17d+/erauruwPcvnOn9vatmtra6pqaqurqyqraGoqbN2+WlZX99NNPJ0+e
PHbs2NGjR44fP37mzBnYcu3aNXi1upp6qDfsBPZGP867HvYP3wW+Y3NzM3Ql
z6GDefnyzZs3cB6BRXUEQf5EwO203qls2dhU//WWtcOHZwcG+Dg62MikQpEV
Tyi04FmwuBwzer4vYxNjAyNDPQN9XZC2trYWpXv6jn5YIWVq6AHIZVbI8/QQ
+P79+n1IuoAPPvgb8NEHH0GfoKGmTi6tkoK8iRF1gRX0DtleYMk3MTINDgz5
/vgPnR2d4PZnT58/a31G5/Anzb0GJwIHIHITjQP1NAqZ/yb3796DVn/vfkP9
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
HpYgeRA+bIeVJPgyITE1KTktBcI/5Pyc7Mxhudn5ebkFBcN7qjrjSsaD8KeC
8KfNmDNr7tzZ8+bPXbBowSeLFy1ZunjZyuUrv/xizdYt3+zfu++HE99fv1ZW
V1fX1NQE/d0/S/iKoj05A0K9/+dDrrCcOX0+P68wOTktNjYmKjosKMjP09PL
1tbJ0tLK2MRYT1/H0EDXxEjf2EifwzaViAU21mInR+s5c6bRAZ5KQ93vUO/I
e0Nvhn/X0fG2vf1l+9tXz1+03rt/5+Kl88dPHF6//rOQEB9fHzkYnn4cKrjd
wx3+83CXe4Dh5T4+3sHBAcFBfiHB/uGhwX6+vo72DpnpabmZ6SkJsSEBvoG+
XsH+PkF+3gF+/oH+AdCCA4PCQkKhhYeGRYRRwie2j42mPK9o8bFx0GAFtpMG
boctZKl4A9mSEJeYEJeUGJ+cGJ+SlEC15MTU5KQUOJkgRf7szJxhOXkFw0eS
S7cTxpVOKp0Cwp/x8fTZM2fNmTV73hwI+fMWL/pkJV3G37Rp044dOw4cOHDy
5MmrV6/euXMHhP/s2TPoCn9T5ooLtf/+3yDyv0KfqXZtWL85Iz0nISEpOjoq
PDw4IMDH3d1DJrXjsHlMJlNbR0NfT9vIkAnNzNTQkscGtzs62NjZSqZMGfvq
1TOqYg89OV6HR94rFHUaOsW/oirxEONB8y8ez5gxwdfHPSjQL8DXz9/H39fH
28fb09tL7unp7uHuCuvwUmCAT4C/d1Cgv6uLs7urG+R2EHtMRKivp7u3h6uP
3A2W8AlvTy8fL29fb9iLH6g+KCAQGqieLEODQ4jwifMV2idpnzTIWyTzk+3k
PfRLsD0mJgo6ArB9Aq16qpF1WCbGJ5GCfx/b5+ZmDxuel18wfETRyMJRRcVj
x5RMGDd+YmnpFJqPP/545syZs2fPnj9//pIlS1avXk1dt92+/dChQ2fPni0r
K7t169ajR4/a2tp+kfBJSkTP/4dAfhEtza0zZ8xJS82Ii4uPjIwMDg709pE7
OjpZCaVsloUuNX2GBuR2PSaDqatlYqwv4HNlUisnRwd3NycPD7vt29fDTjo7
3mFuR94v6PpM59u37S9evGhtfQoZlXqwxYP7DQ13blZcXfzJvMKR+empyZER
EHf8IIr7+3gGUEuvIH+fyPCQkJAA0HtgoJ+HmxuYOS83JzYiLDjAx8PF0c3J
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
JcJpMxOf2vP8ykfWeI7yhjSe9Fzw9/MLGOXj5+vp6xMYMsY/ZMyEKdMmTo6f
PmtO0oJFMpXb4mUrtm7fOSY86ujxE/tefOnga0eOnTzz9runz3z4yZPPPPv2
idPHT55YunRx+Lgx42OjJ0+dGjU+hvTQj4ycMGECabAQG8s8+cAUC6D206ZN
mz59ekJCAtu3hfSeCf6SJUvYji2o/YYNG5544gm6UWu23LM2mHALB6v+b/+1
ufG/t+Wwti86neHhlY8kJc2HVWnKlMnjyY8WBkuzUqkkBRl7B3s7W1B1Fk6O
thJXoZenW4C/79jQkEmTYlatTrpy9evbmLQjyEBIagZZ/I0bfZDI917rhjS+
t6erBzJ5i8i3t7W0tTa1NDeyfL6hvhZ0vrbGXLcxlfXn87r8nLzczOystIz0
5JTkS5cv/fTLz999/903F7798uuvPqdSf/78uTOsSv/O20ePvnkEAhL71197
9eDLB/Y+u3vL5o2LFy2YNGliUHAgKC0ovFDIF4mEVOqVkD0r6b/oQxWXyVsr
PGemB22HL7mp1SDFTNv5PCd2dyCXSVhwxXYFXUdUKjmrsXt4WOSd7ucSkac6
T0s6pGIPz0n+lEImV0ogj3eVKIKCx8LqIldKJ0yekZC4YNbcJA9fWBVU7p7u
7p4e7l4aT28Pj1Ge7j4aDz9PtZdaw+4/3N28fYiXz8fXJywqYtrs2ctXr5m3
aPnz+18/cOidXc+/fOjosS3bd61c9ciD8+cFBY5Kmj/3o88+mzF75pp1azdu
2hQaGjJnzpzY2NjQ0NBx48i0FLhGRETExMSA4AMT48ihWqb8kydPJql+fLxF
8Ocwf86CBQtB8FlJB9L7xx57bNu2bXv27Hn11VfPnDnz1VdfsQNWrOnxzbsN
M/qf5fPsOz/5+It58+YnJs6FlQjeJLxz+FngdyeTyZydne2I+7Ff2/k8B5VS
Sgek+kEyMGNG3M6n1lVV68mz4ZQlBBnILatiPPFMXqcVeVKusbSHJ6egqIHS
PAOEtJpsbGgg511ra2uqq6sqKyvKTeb6POTzhYU6vS5Pq83JzcnMykyjKT05
FfXTjyD1F7795qsvv/jss08//ujD960K9W8cffPwW0dB6l8DpT+w/4VdT21/
5JGViYkz4dZ7lK+XQiERuUAq5wxXiasLKeCo1Ro1KK0bSauJA8fDy9PTy9PL
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
VKLm8wUjRw6///577713yL2UP/3pT3/843/cM+QPw4bfB9oOizJdfJ1ZsZ1M
vo4am5gYf/DQnq6uOtL7EYvt/xV37TuKIHfUTC29qiyF+WtsqB/Ajr12drZz
nvnWFvMmbJOVzlPLDUvpQepNkNKXlRqKiwqMBl1hAdH5vLwsWqhPTU+7mppy
mcvqraWeFnBOnzl9AuL0qXdPnTx26uTxd95+ExL7fc/t3rjh0YUL5sWOj4L7
d0j2IDMHSR8+7L4Rw+8TCpxmzUx479z57y5ezM7Kqq2pIYe3GuvqaisNhvzL
l396/70zL/5577q1q2YmTB0XNtrbyw2SeblMrJC7qpQyN1KxUXmSmowarpxV
ktN2zmnDztVyku5l2ZY1l2g81e4eRN5ZAg8B9wsqlQzkC14IAl4RbitkUldY
pyRE0kXkCgpPdV4kggVLKBTyBQJnoZAHdx/Ozg48Z0e4JeHxHJ34QieBWKbw
GB0aFRQyTuXulThvocLNe81jm7fv2rN917NJDy5ZvmKVxFWWkDDn/Q8+efm1
I+sff3LTkzvWbtiwaeu2eQsWj4+dGDImxHeUtzu8UTd4z95+cJ8QHDI6ZAzr
mT9u3Dim9iD1rA0ySD3o/OzZs2fOnAlqzzZq51MWLlwIGf7q1as2bdrw9NNP
Hzx48NSpM2fOnJuZkCiVED+Mo5Pd8BGQrQ+FpP2PFMjhQdvvufcPQ4fdB787
Pt+RHEd1VwX4+4wdExwXF/7Q8qTPPj9z+3bv7Vs3sCDzV4A7aki8/gU6yyH/
b3CZPBN5KvPdzC3f22v2zDOzTXtbCzXbNIPOQzSTUa31jfW1DfU1VOorq6tM
VZVllRWl5SbQeWNpSSEn9XpdrpZIfYZF6s1ZPUi9lQPnw08/eR/U/tzZkxCQ
3p87e4IZL1995aVn9+x6dN3qxDkJkyfFzp83e/czO08ef/fUiZNnT5/96IMP
v7/4fV5OntFQWFpcVFVR3lBf19bSTJz+rY3VVWX52qzvv/v6nbePPL3ryWVL
H4yLiwoM8HJzk8qkQokrXy5zUSikKpVSrQZhZ4V3S4nGYp68w0tJdgLoNoAH
fIOKBcveITRuJNzND+RuatKTh/NbymUSqvOuMglk7aDrLhAuAiGk7yDsEC5w
5TtBCPhOPL4jyD7PmW9nZ+/gYMcXONk72MH3iUQSldpj+oy5q1dvGhcWM3K4
7dKlKzdufmLi1Flrt+zYuW//y4ffeOnVN9c8uu3ZfS9Fx4yXyWVbHt/2+NYn
lixdFjw61N3Dy9tnFD0l5h/AjVcMDQ0PD4+isPkm48eP55w5IPiQ4U+bNpU6
c2bOnTs7KWkuy/GXLFn20PKHYXGQyaV29iMeeOC+e+4ZYmNjo3Fzg9uRIUP+
NOTePz4w9J6hQ4eMHP6AkE+mo3p6qAMDfMeFhUyJj1y7bklu7hWatKO2/zUg
9YL/MzFvR/46A0xug/J5cy7f29vDZnT39pjVnkp9Z2dHe0d7Gy3dkK6ULc1N
ZDI3tdCb3ZV11bR6U1FVZaqsKCsvJ8NESoohqy80GvSFBfk6XV6+Nic3l9hv
MqnaJ1+9dPkSqP2PP/5w8buL33zz9Zd/+fLTTz/58IP3z713/sx750+DztPr
ydOnjp85fZx6ct489s7bJ0+8e/rUyfNnz1z49httbp4+X1eg0xfqCwwFhiJD
UWlJcWV5aUN9dVtrU1dna1cHSH5debkxI/Pq559/8Mqrf96wcdWcOfHhEaFe
Xm4ymYvYlS+RCOVykVolg8Tey9PN28vdy1Pj7aUhu6vm7VQNu1rvvWo0lsxf
DZKudNdAqOAKj+mHZPeWOz+rVhEbD+mkIJNKXV1pwQYUnu/C5wt5PEs4C/iO
fJ4jiDyfBwH5PCTz9pAbOziA1DsOHzZy6AM2tjb2jg5OMqmcJxDdP9wmYvzE
WUkLnnjq2WeePbB8xfqjb59JSEicNm3mK6+9OXZc9Asvvrxi5WqJRO7p6cO6
PnDtmkeNGsXaIwcHB48ZMyYkJASukNhbijmRcGUZfmxsTFxc7KRJEzn7/bRp
02fNSpg+Ywr8Z3T3UMNyNW3G7G3bd/v4+kPqft/9Q+69/5577//Tfff/0cZm
mEIu8fEmk68jI0JnzRy/d++2luYqi7ajuP8XYNKO/G/gdN6SzF/nivM9FFa6
Yd1sqN+mo73fWNnS3EyqI6RA0kgGRrGJr8x7U1XFJkeVMftNUZHRSEdH0fEi
WnZ+KjvLbMK5euXypV9//vmnH374/uLFC19/8/XnX37xMeT2n336wUcfnvvw
g7MfvM/iDFw/+vD8xx+dv/TLL/l5WngmeD6m8FTkC42FhmJjUUlRcVlJaWV5
RV1dLbzNzs7Wnt6Ozm54tzXFxfmXfv3u3Lnj+57b9fDKxVOnThgbEuALqb3C
VSUXa1RSd7XMy0PtTSv2oPOexEVDe+lAns8FpP1qdlpWRc/JqrneC8yQww7P
ch14uLO0LKu3pPSkjQNJ6OkpLaGAx3N24jk7smaYTk4Ojo4Q9hDOzg7Ozo7w
GUjpbW1HwhU+tLUdAcIvEEo17r5eXv4zEuaufHjdQyvX7trz4uq1m5974eXw
8BiRi5TYiFQqdjSYO1nAOnZyg7FY/wfrsSmQ4YPmh4aGjB0bOm7c2MhIyPMj
osmsq8jxsRETJ8ZMIT3wo+ckzjzy9skduw96ePjDzYrEFX4YAU/oxBPai1yF
UqkUnj1kdGBMTNiD8yafPX3k1s1e2uzxJnb0RZC/K9anV6y3Xy1FG6Lz3D6s
tchbdmOJ1FO1Jx3M2IYs25NlUs/Zb6qqKioqy1kzBBPIbkkRM+GQaSOkWbGW
WS5zc7Kys9IzM5LTUi8nX/2VFXN+/uk7Zsj59psvL3z7l4sXvvru4lfff3fx
8q+XUpNTsjOzcrNzQOQhjdfrdPBknM4XGYxFRSUlxcWlJSWlpSUVFWW1tVXN
TXWdHS093R29PZ1dnW01NRX6/Jzvv/3q2FtHntn55NKF8yfFRgUF+Go0cqVC
LJeJlApXNQi+Rk5M8sQnTxJ1N7VcrTafkGVtENwsam8t5py8M8F3tzony8UA
qRe5CEDnBXxnHs8JBJxpO1N1CHt7W7jCZ+gDWwdHSOqdbGzsbWzthw0fOWyE
jb2Ds8hVFhAUMsovEBYKHo/vQnGFWwaKTCaTy+X0QJlywGHhAZ1/6MFhMocx
IMAvKCggODgwJCQI1H7M2DHjwsLCw8MhvZ8+ferKhx+ZnbhofFRsbFRETGRY
dGRYZGRYRNSYyOhw0kfCy2vsmNGT4qIeXjn36uULbNqYRd5R2xHk/wPr6o31
YRYm9Zzac36bbgtM7bu6yIZse3sr570BtWeCzzkt6y07s8yEwzZnQfA5Kw7t
jWAwGvSGwvwCvZYcp8rLzs3JzMlOZ9X7tNQroPlU9n/59ZefINv/5WdyvXzp
l+Srl9PTUuBeQJubA/cFhfp8QyFgNMACYoQ7B9B4CKLzptJSU2kZrDPVlZUN
9fVtLU3dXe1917p6ezpaWxory0sz0q9+8cUHrxz686aNaxITp4eHB3t7qRRy
sVQihJBJXUDw3dRSdhjKXaOi8s5E/o4H1vLO+e2ZvHNfsm6ARk7O0kK9lBps
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
AlxWXFxMGpcZjZCU6/R6Le2Hk5ebC6KelZWVSWs4qen02GxmRhrbnNXm5eRr
83X5OsjsSXKvI0EFX08bHZP83kAP0XLTqUqLS0yltKBTUV5TU93U2NDa2tLV
BT9IN6xWjY118DZSUy9/8ul7+/c/99SObQvnJ3lq1G5KmVopcXeTe7qrvD3U
Pp5u/r6eocH+0RFhEydERMcE+/lrIiIDn3tua2trza2bqO0IgvyDMrgZGj1d
ZZ5FaGmY0N3b19lzrYNEb0d3b3t3T4d58qx5Q9ZqfElbi3Wtns0lHOC3rKws
t/RAg6wb1N5Iu58VkO5nOqL2bDphTnYm65CQnpaSlpqckZ6SRdUevqTLJ/uz
Ogv5+fnsX9y0WcuMqiJubgm70mIOseTU19e1tDZ3drV19bT19XSWFxcdeH7f
lAnj/X08VHKxVOykkPAUUr5GJfL2kPt6KrzcpQGBmoWLpp87f7S9vY62f8QW
YQiC/KNj3SdnUN/Lvhs3e6/f6L1+vacPoq+791r3X2+YwI0vsW6MY+2rt+6H
U1nJ/JalEKV0agnpdWno35m1lnrmwwGph/Q+IyMDUn1I+HNycnJzc/O1eTqt
lov8PFgjtLp8c25fwLJ76sGktXsS8HJlpiJTWWlDbW17S3OJsfDSzz+cOvHO
tsfXrX9s6VM71x8/dujsmTcO7H/qraMHL13+obGpmjRsv0WKWrdwFxVBkH9O
uKSebs7e4LrZD7BcDhhfcled55okWFsuf2sKrfVEQjqgiki9oVDPzRzX5uVk
Z2dmZqang86npaSmJqeac/tUqzJOLumcY0W+mTyLS0dPjDrkRG0Ra4ZZUW6q
q61uJlvGZOO4vb2pu6vtWm9n37WuWzev3SC9jkkvz2vX4Me/xTlkcDsVQZB/
Rqxt9ZYAne+zFvm/pUmCtc5zJpwBiX0DrdVzM6q4+bMDpL7IWEjK9QXafF2u
Nj8nLy8rOzeDNMOhswhTU67ANT3takZGCiT2OTlZeXk5Wm0eqfYQYc/N1+Wx
vvf5+Vpa26Hu+4JCWsonzkw6p7CsrBTEnmzP0kZojQ1NDW3tHV3d8BOSSS2g
7r/3bwZBEOT/llt0SCjJ5O/01V+zSukH90ADtWdS3zGgH45F7Zm1vrGVNkng
5s82WE0b50aNl5cXl5mMxaWFxSUFxiK9wZhfUKC1HkSYk5WWmUlGU7HcHgLy
/OzsjJzc9Ny8TK2WqT1xX+bnF5BSfb6OZvVaktUX6AzGwuLiotLSEpOpjLWv
b2yubwVx74RFq7e3r6fvRjfcxaC/HUGQfyE4y81Nqwc3rRL7m1Y1nOt0ImH/
cCouaIeEbsu2LBtL1U7D0ugSEntu1Dh14HBqX1dXXVtbWV1TUVVVXllpMpWD
CJeYyopLSgz0IBUZRKjXE6GG/Bzydsjes2j7+vSMFIi09JT09DR6chbWAi3x
4bD0ncwX1xuN+uLiwtJSg6m8uLKqrLa2or6huqkJtL2VDFbpAnXv6rveAz/Y
DdxRRRDk34zBXXHuOohw8GgqLqW3TuwH7MyC1FscOMyEUwPZNS3XV3JzqZgJ
h00h5FqfQWbOXJeg9tnZmSD42VmQ5GfkZEO2n0VNOKQfTpGxsKy0GG4Q4GYB
VhMy2bylqb2tpbOzDRYjuA2BWxKat9/EejuCIP9m3LKu1lMZvDmg45nFVN/f
6pKK/V062A8YWTKgXM+2ZZngD+h7xlkumdoTK05JkWXsLG1QTHdp2ZW0OKOP
yTzZYiOT97raanLL0NQAL0oaNfR0UWHvYxMVf+//yAiCIL8ng+cPDh5NNXhq
yQAHjvWx2cGjqdqou/6OZjj96X2/4Fvb7CuoJ4dFuamUe1xVWQ5RXVVRU11Z
X1fTQIZb1cNzwmoCrwXvge413MKkHUEQ5K5wXnpO7K2dlgM6nv3WXCrrMo61
Feeubhzrdpf1dKPWErXMpcOiCcS8qaGlubEN9LytBZ6QjkEhLwHvhG4xIAiC
IHfH+tiU5RN39Dqz7oFjbbkc3AnHWuoHjZ1lswhbLJrfTDWfJPm0HxqLJirj
RMk7QMnbWztBzDvaukhTHfJU7MYBXgveBmo7giDI34KVyA903XDnpwYfpGIm
HCr47CAVF9ZuHJbns+jvb0z1v4NJNw2yInSbo7MHlLzbbNTv7YHloween9o7
+yw92RAEQZD/S+7aCedvGFBldub8BnRV4D6g9LHGOmTb1wzunyIIgvy9udvG
bH8B/2+R/cFwGm61C2D2+eD+KYIgyD8gd18GBsm49YfcHxzwPL/H20cQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEGQ35n/BLItWuw=
    "], {{0, 281}, {500, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{500, 281},
  PlotRange->{{0, 500}, {0, 281}}]], "Input",
 CellChangeTimes->{{3.6997914616395655`*^9, 3.699791463893727*^9}, 
   3.6997915046957088`*^9, {3.6997915768003283`*^9, 3.6997915885636272`*^9}, {
   3.699792958712014*^9, 
   3.6997929680257807`*^9}},ExpressionUUID->"7fb35886-78cb-4c0f-85b6-\
ddad45b41ea3"],

Cell[TextData[{
 "Connect the sensor to your computer, then evaluate the following input (",
 ButtonBox["need help on evaluating inputs?",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/language/fast-introduction-for-programmers/en/\
interactive-usage/"], None},
  ButtonNote->
   "http://www.wolfram.com/language/fast-introduction-for-programmers/en/\
interactive-usage/"],
 "):"
}], "Text",
 CellChangeTimes->{{3.6997125247443123`*^9, 3.699712579376305*^9}, {
  3.6997127004721985`*^9, 3.6997128136174693`*^9}, {3.6997129340482063`*^9, 
  3.6997129667085037`*^9}, {3.6997916542560883`*^9, 3.6997916545914288`*^9}, {
  3.699792990854224*^9, 
  3.6997929911425004`*^9}},ExpressionUUID->"4df89810-29dc-4ca4-9ab8-\
3cc097bb6dd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sensor", "=", 
  RowBox[{"DeviceOpen", "[", "\"\<Vernier\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6997124941990185`*^9, 
  3.6997125020005355`*^9}},ExpressionUUID->"dc70b1e1-e72e-40a2-8eb9-\
a6351bc657cd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Hi Magnet Fld Sensor)", 
                "Not Connected (Hi Magnet Fld Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{220., {5., 9.}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Hi Magnet Fld Sensor)", 
                "Not Connected (Hi Magnet Fld Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Vernier", 1}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                   MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Vernier", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6997125044548335`*^9, 3.699712819986573*^9, 
  3.6997916793969173`*^9, 3.6997918349066415`*^9, 
  3.6997929944884315`*^9},ExpressionUUID->"e6fcacbe-d5fb-4c57-9253-\
f1774535c1e1"]
}, Open  ]],

Cell["\<\
If the \[OpenCurlyDoubleQuote]Status\[CloseCurlyDoubleQuote] field in the \
output shows a green dot, you are successfully connected to the sensor. \
\>", "Text",
 CellChangeTimes->{{3.699712992687853*^9, 3.699713128029845*^9}, 
   3.6997139551135426`*^9, {3.6997917450319614`*^9, 
   3.6997917461280117`*^9}},ExpressionUUID->"598faa9f-b294-4a17-81da-\
76687bee2f27"],

Cell[TextData[{
 "If the \"Status\" shows a yellow dot or a red dot, then ",
 ButtonBox["click here to open the Troubleshooting Guide",
  BaseStyle->"Hyperlink",
  ButtonData->{"TroubleshootingGuide.nb", None}],
 "."
}], "Text",
 CellChangeTimes->{{3.699712992687853*^9, 
  3.699713128029845*^9}},ExpressionUUID->"24623a05-f0bd-4131-90d7-\
cdf970a589d4"],

Cell["You can now read from the sensor:", "Text",
 CellChangeTimes->{{3.699713897582999*^9, 3.699713944839697*^9}, {
  3.6997144347586184`*^9, 3.699714435439269*^9}, {3.699791708303795*^9, 
  3.6997917108549895`*^9}},ExpressionUUID->"a067bab9-3b7a-4146-a1be-\
2f33a586643f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceRead", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997139262365284`*^9, 
  3.6997139315205917`*^9}},ExpressionUUID->"5c569eb2-aff1-44d1-8bac-\
fa0fbd66e120"],

Cell[BoxData[
 TemplateBox[{"0.02133787116554231`","\"mT\"","milliteslas","\"Milliteslas\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.699713931838897*^9, 3.699791683452804*^9, 
  3.6997929988067155`*^9},ExpressionUUID->"389985cd-ca0d-4bd5-9d0f-\
6c34d76e15d6"]
}, Open  ]],

Cell["\<\
You can also read the most recent values recorded in the sensor\
\[CloseCurlyQuote]s buffer:\
\>", "Text",
 CellChangeTimes->{{3.699714782022566*^9, 
  3.699714809703727*^9}},ExpressionUUID->"fb5080c0-34e7-4dc1-be7a-\
f424d44f20cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceReadBuffer", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997147560527315`*^9, 3.699714780031656*^9}, {
  3.6997148195917645`*^9, 
  3.699714820159308*^9}},ExpressionUUID->"5d5acb5a-5c59-4385-9aad-\
1dd19fed7e5e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["QuantityArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                   1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                   1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                   0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                   1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> 
               True, Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, 
               ImageSize -> {Automatic, 
                 
                 Dynamic[(3.5 CurrentValue["FontCapHeight"])/
                  AbsoluteCurrentValue[Magnification], 
                  ImageSizeCache -> {94., {1., 9.}}]}, 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "420", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"Milliteslas\"", Short[#, 2]& ], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                   1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                   1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                   0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                   1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> 
               True, Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, 
               ImageSize -> {Automatic, 
                 
                 Dynamic[(3.5 CurrentValue["FontCapHeight"])/
                  AbsoluteCurrentValue[Magnification], 
                  ImageSizeCache -> {94., {1., 9.}}]}, 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "420", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"Milliteslas\"", Short[#, 2]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{
                    "0.0197265430765583`", "\"mT\"", "milliteslas", 
                    "\"Milliteslas\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    
                    TemplateBox[{
                    "0.022351054736645892`", "\"mT\"", "milliteslas", 
                    "\"Milliteslas\""}, "Quantity", SyntaxForm -> Mod]}], 
                    "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "StructuredArray[QuantityArray, {420}, <Milliteslas>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699714761109165*^9, 3.6997148112217426`*^9, 
  3.699791686014259*^9, 
  3.6997930009089327`*^9},ExpressionUUID->"7a940037-5c14-45cb-aae4-\
abf9d2dea01c"]
}, Open  ]],

Cell["\<\
Or take measurements over a given time interval. In the input below we are \
measuring every 0.1 second for a total duration of 10 seconds. A progress bar \
is shown while the Wolfram Language is reading data:\
\>", "Text",
 CellChangeTimes->{{3.6997148495506096`*^9, 
  3.699714958894782*^9}},ExpressionUUID->"9399787a-6384-4d77-b63c-\
463792551402"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceReadTimeSeries", "[", 
  RowBox[{"sensor", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6997148340631*^9, 
  3.699714871168326*^9}},ExpressionUUID->"5c1f6a17-2faf-43b0-aae3-\
40d7858b2347"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, {
             {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
              StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                "]],
               StripOnInput->False,
               FontFamily->"Arial"]}}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:16:42.987\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:16:52.976\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, {
             {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
              StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                "]],
               StripOnInput->False,
               FontFamily->"Arial"]}}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:16:42.987\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:16:52.976\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.10009384155273438`",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{{
      Quantity[0.0197265430765583, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.021142558669907885`, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.02032468759443873, "Milliteslas"], 
      Quantity[0.020935039143296308`, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.0197265430765583, "Milliteslas"], 
      Quantity[0.019921855572192726`, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.020935039143296308`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.020935039143296308`, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.02032468759443873, "Milliteslas"], 
      Quantity[0.0197265430765583, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.020129375098804303`, "Milliteslas"], 
      Quantity[0.02032468759443873, "Milliteslas"], 
      Quantity[0.02032468759443873, "Milliteslas"], 
      Quantity[0.020129375098804303`, "Milliteslas"], 
      Quantity[0.021142558669907885`, "Milliteslas"], 
      Quantity[0.02032468759443873, "Milliteslas"], 
      Quantity[0.020935039143296308`, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.020129375098804303`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.021142558669907885`, "Milliteslas"], 
      Quantity[0.020935039143296308`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.021142558669907885`, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.020935039143296308`, "Milliteslas"], 
      Quantity[0.022351054736645892`, "Milliteslas"], 
      Quantity[0.019921855572192726`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.022155742241011467`, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.02194822271439989, "Milliteslas"], 
      Quantity[0.02194822271439989, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.021545390692153887`, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.020935039143296308`, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.020129375098804303`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.021545390692153887`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.02032468759443873, "Milliteslas"], 
      Quantity[0.021142558669907885`, "Milliteslas"], 
      Quantity[0.020129375098804303`, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.020935039143296308`, "Milliteslas"], 
      Quantity[0.02032468759443873, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.020129375098804303`, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.021142558669907885`, "Milliteslas"], 
      Quantity[0.019921855572192726`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.020532207121050305`, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.021545390692153887`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.021142558669907885`, "Milliteslas"], 
      Quantity[0.020129375098804303`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.021142558669907885`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"], 
      Quantity[0.020935039143296308`, "Milliteslas"], 
      Quantity[0.02032468759443873, "Milliteslas"], 
      Quantity[0.021142558669907885`, "Milliteslas"], 
      Quantity[0.021752910218765464`, "Milliteslas"], 
      Quantity[0.020739726647661882`, "Milliteslas"], 
      Quantity[0.02133787116554231, "Milliteslas"]}}, CompressedData["
1:eJwt0HlI03EcxvGZmkcaKILkQa6GP3CwSFJxTmmRMBDssDIQFEbLTGVjeRSW
00lisFhew2PUwGGEiEkQGIjlpoZlWUqJoCQmXihCXghF8f72x8Prv8/D85Hr
jZcNvjKZzOd/bvyLvKPAM/xkXXv8kx6jD93EiOQiDL9dgmFPjRj61YxBhyvQ
X30PDdX3cWzYIty1ojehHt/lP0J5lw3rlu24qmzGpQIH6tzt2LPixFmFC9OL
utDV243OhRfoF9+LKv1LTHC8Qmn8NZ78M4C15wbRWvFW9L3x4MLmKM6fGEdt
4YTo65xE9ecpTPb9jokps6KveA4b+37g48VF3JKWMadkDS+4NjBrekvsC9zG
85o9zDQdiF73b0ydkXnZF+OHjosBOGYLRuWXUJT8w1CRGoH1DyKxpT8Kl3Zi
UaeWY0+1Ao96JDQFKLE0TYUfLKcx0XsGVfsp2KhJw+2aDMwd0eJAUCbGZOvQ
0pSFVaPZWHlwCctUV/Gb+TpOdedh0no+tp3S484dA+49v4XxP4vxWpwRc66Y
hQ3l4s7QXZz8VYUfJQu+z7PiiP2h+M90gzDQhnEaO8aamvCYuxWjZtowPMSJ
R84+w79PStUB
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6997149215158234`*^9, 3.699714970208624*^9, 
  3.699791699504302*^9, 
  3.6997930131217155`*^9},ExpressionUUID->"4377f3f2-ee28-4bfb-9c8b-\
b0e9f289dcb0"]
}, Open  ]],

Cell["\<\
When you are done, you can close the connection to the sensor:\
\>", "Text",
 CellChangeTimes->{{3.699715093126973*^9, 3.6997151147823043`*^9}, {
  3.6997917264876747`*^9, 
  3.6997917275351963`*^9}},ExpressionUUID->"2236dc4d-2c90-475b-a4a3-\
04644fc975b5"],

Cell[BoxData[
 RowBox[{"DeviceClose", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997151157762537`*^9, 
  3.699715118959304*^9}},ExpressionUUID->"ef3007d5-31d0-48b0-bb40-\
221c82c34b14"],

Cell["\<\
After you close the connection you can unplug the USB cable and connect \
another sensor.\
\>", "Text",
 CellChangeTimes->{{3.699715132446232*^9, 3.699715151894859*^9}, {
  3.6997917312557583`*^9, 
  3.6997917318233013`*^9}},ExpressionUUID->"91b06599-f65a-40d1-9698-\
dd87286a099c"]
},
WindowSize->{775, 872},
WindowMargins->{{75, Automatic}, {16, Automatic}},
DockedCells->{
  Cell["", "DockedCell", Background -> 
   RGBColor[0., 0.35294117647058826`, 0.3686274509803922], CellMargins -> 0, 
   CellFrameMargins -> 0, CellFrame -> False], 
  Cell[
   BoxData[
    TemplateBox[{
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1: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
4//WLMsl
         "], {{0, 65}, {170, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic], Selectable -> False], DefaultBaseStyle -> 
       "ImageGraphics", ImageSizeRaw -> {170, 65}, 
       PlotRange -> {{0, 170}, {0, 65}}, ImageSize -> {170, 65}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {100, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[100], Selectable -> False], 
      StyleBox[
      "\"Magnetic Field Sensor\"", FontColor -> GrayLevel[1], FontSize -> 36, 
       FontWeight -> Bold, FontFamily -> "Helvetica", StripOnInput -> False]},
      "RowDefault"]], "DockedCell", Background -> 
   RGBColor[0., 0.45098039215686275`, 0.4666666666666667], CellMargins -> 0, 
   CellFrameMargins -> 15, CellFrame -> False]},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 617, 10, 106, "Text", "ExpressionUUID" -> \
"2e15acf5-1f59-47f8-9e20-6d643c1150a2"],
Cell[1178, 32, 44866, 740, 296, "Input", "ExpressionUUID" -> \
"7fb35886-78cb-4c0f-85b6-ddad45b41ea3"],
Cell[46047, 774, 754, 17, 30, "Text", "ExpressionUUID" -> \
"4df89810-29dc-4ca4-9ab8-3cc097bb6dd7"],
Cell[CellGroupData[{
Cell[46826, 795, 235, 5, 30, "Input", "ExpressionUUID" -> \
"dc70b1e1-e72e-40a2-8eb9-a6351bc657cd"],
Cell[47064, 802, 16503, 347, 72, "Output", "ExpressionUUID" -> \
"e6fcacbe-d5fb-4c57-9253-f1774535c1e1"]
}, Open  ]],
Cell[63582, 1152, 377, 7, 30, "Text", "ExpressionUUID" -> \
"598faa9f-b294-4a17-81da-76687bee2f27"],
Cell[63962, 1161, 354, 9, 30, "Text", "ExpressionUUID" -> \
"24623a05-f0bd-4131-90d7-cdf970a589d4"],
Cell[64319, 1172, 274, 4, 30, "Text", "ExpressionUUID" -> \
"a067bab9-3b7a-4146-a1be-2f33a586643f"],
Cell[CellGroupData[{
Cell[64618, 1180, 198, 4, 30, "Input", "ExpressionUUID" -> \
"5c569eb2-aff1-44d1-8bac-fa0fbd66e120"],
Cell[64819, 1186, 267, 5, 38, "Output", "ExpressionUUID" -> \
"389985cd-ca0d-4bd5-9d0f-6c34d76e15d6"]
}, Open  ]],
Cell[65101, 1194, 242, 6, 30, "Text", "ExpressionUUID" -> \
"fb5080c0-34e7-4dc1-be7a-f424d44f20cd"],
Cell[CellGroupData[{
Cell[65368, 1204, 253, 5, 30, "Input", "ExpressionUUID" -> \
"5d5acb5a-5c59-4385-9aad-1dd19fed7e5e"],
Cell[65624, 1211, 11076, 220, 72, "Output", "ExpressionUUID" -> \
"7a940037-5c14-45cb-aae4-abf9d2dea01c"]
}, Open  ]],
Cell[76715, 1434, 361, 7, 49, "Text", "ExpressionUUID" -> \
"9399787a-6384-4d77-b63c-463792551402"],
Cell[CellGroupData[{
Cell[77101, 1445, 277, 7, 30, "Input", "ExpressionUUID" -> \
"5c1f6a17-2faf-43b0-aae3-40d7858b2347"],
Cell[77381, 1454, 16019, 356, 72, "Output", "ExpressionUUID" -> \
"4377f3f2-ee28-4bfb-9c8b-b0e9f289dcb0"]
}, Open  ]],
Cell[93415, 1813, 267, 6, 30, "Text", "ExpressionUUID" -> \
"2236dc4d-2c90-475b-a4a3-04644fc975b5"],
Cell[93685, 1821, 197, 4, 30, "Input", "ExpressionUUID" -> \
"ef3007d5-31d0-48b0-bb40-221c82c34b14"],
Cell[93885, 1827, 292, 7, 30, "Text", "ExpressionUUID" -> \
"91b06599-f65a-40d1-9698-dd87286a099c"]
}
]
*)

