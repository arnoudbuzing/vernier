(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    136473,       2538]
NotebookOptionsPosition[    129003,       2387]
NotebookOutlinePosition[    134530,       2495]
CellTagsIndexPosition[    134487,       2492]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Vernier\[CloseCurlyQuote]s wide-range temperature probe uses RTD (Resistance \
Temperature Detection) technology to establish a \[PlusMinus]0.5\[Degree]C \
accuracy, as well as excellent stability and repeatability. Each unit is \
individually calibrated, and the calibration is stored on a smart chip in the \
sensor. It is designed to be used as you would use a thermometer for \
experiments in organic and inorganic chemistry, physics, biology, Earth \
science, and environmental science.\
\>", "Text",
 CellChangeTimes->{3.699715254464568*^9, 3.6997916443859177`*^9, 
  3.6997929818087907`*^9, 
  3.699793572546071*^9},ExpressionUUID->"5a7f3c3e-a368-40aa-9a5c-\
3314a6ddf24b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXd8U1e6/nvuvf/c+/nNJKG5W7bVq2VZluUm2ZJVrGbLknvvvZsOIQkk
JEASSCDJpJAACWRCQkLovTdTDBgMNjZgwAZs3Ku677u1wZPJZObkzJlJJjPr
+azsbG1tyVtL6Ps+a+213uWXV20o+r//67/+q/7/hY0hd56kri53gfEFeJBY
VV9aXFVYoKqaXVhcWBeS9//AQff/67/+axT+w/YnkZCQkJD+13I4HL/2JSAh
ISEh/cPkcOrXvgokJCQkpH+kzGbzxMTEr30VSEhISEj/SIFpt9vtv/ZVICEh
ISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEh
ISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEh
ISEhISEhISEhISEhISEhISEhISEhISEhISEhISEh/cbkeFb+9AAJCQkJ6Tcu
xHYkJCSkfz/hOLc7MCG2IyEhIf17CKhuc9jxfZsVdh0I70hISEi/fTkePn60
Z++evr4+oLrdasfwjoSEhIT0mxXWDzM5+c133+bl5y1cuLDjbgccsdvtv/Z1
ISEhISH9VTn+okztYQS3YQy/datl/oK5sTp1qFDw2ccfYqfYrHabDQpO/r/6
Xj/x7j/x9//7s5CQkJCQ/if6a2x32B0AdpvFCvTesnlTQUE2P9A/kMtWyaXn
Th23Wy2TNqvVbMIIj99knbrN+j9j+1+5BiQkJCSk/4We4tThAEbbbDip/6y/
xe6wrVyxPCXZSPL14rLoxjhtQXbG5s8+nRgd/ql3w80+ViA4OOODfeqIber/
U/HA8aeGwiSiOhISEtL/QjhR7c/0Z/0qTpnME339vfc7792+09545dL8ebNz
s9JEocFBXPbOb7YunlMnF0esfXtVe+uNO223uh486O15MjQ0ZLZa7H8Xnp/h
344HhB+S/y+vDQkJCQnpR8Jp6bTnfzLndqut53H3taZrB/cf2PjZhtWrVy15
cUFNdXlpSWFOdkZ1ZVlxfk5mSqJEFMYiEynenjSCN59J1yllqQn67LSUvKzM
0uKi6srKhQvmrXzj9Q2frt+9a8flxkud9zsedT283dbecrOl+dr1xosXT50A
HTlz9uSVK5fb2toeP+oeGhy1Wm1/41KnAtAvVUNISEhIvxlNQXLqCOx3d3df
unTp22+2rXl79fy588pLy7IzszPTM/KzMopzs4pzs0vzcopyMhfPrc9OS05J
iA8L4gX7cwIZNCGHrZZEpsbrslISctJT8rMyC3Jz8rOyirKzC7OyCjKxUpaf
X11SWlVcWppXUFdeCTtF2Xn5Gdm5ORkZWSkZmSmlZWWz6+cvXPDSyhVvrf9k
/fbvtjdeauy4cxfCQU93T19//9jY2I+Qjnw8EhLSf5z+4jak3Y53of8ZC4GW
D7seHj50+L116+pq6/Jz8zJSUrLS0vOzs2GblZaWm5GRaoxPNepTDfoUQ1xa
QvyCuhoAuFoh1auVSXqdSholCRVqZBKjTp2RZMzNSC2EQJCXAxa/MCsTL0VZ
mblpqRmJCYk6vVEbm6CLNWo1Bo3KoInRqeRKmUQll+q1mvQk8Pw5JfkFRbm5
BVnZlSUli+bOff2VpauWv77qtdffe+fdP2758vChQy2tLb19vY4/D0zOLhz4
bFDsqJ8eCQnp31449qw269TsIovV2tn54NjxI5+uX7/81dcqyytys3OSE5PS
klMzUlNz09PLCgqg5GdmQsnLyEhPMoJRh5KWaMjLTKssKSzMyTTGauRRImOc
VioOjwoPidPEpBj1+GkZyUbYT4qPNcZp4rUqlVwSGSYU8PzZdDKHxmBRqFQ/
HxLBg+zrzqR5C7lshSgiUafJTU2uLMirKyueX121uL5+fnXNAig1tQtqauZV
1cwpr6oqLisrLCouLCotK124eNHHH3109PARMPamCdOfPqvDbLObHY6f7tVB
QkJC+q3LNomlBbD9YL7o0PDI9evN33373apVq+rravPzc9PTUrMyMgvy8vJz
ctNTUtNTU1MSElONxmSDIUmvd5Z4o06XqMcKsDohTgtIB25npiQC4WOio4J5
/gEseiifp5RGqmQSoL0oRIAfZFFJVD+Cr6ebp8sM1+nPe8ya7uPhSvTyZpBI
ggBOtDgsUa8uzE2tKS2aXVE2r6aqrry0qriwLC+nKDOzID0jLzUNtuW5+fWl
ZXMqq+ZX182rqZtdU1tfW1tVCY6+pKigAEptdfXrr732zVdbm65c6e9/MjmJ
m3nHT94RRkJCQvpt6enQwWd3G8Gom58NXBweG22+ceObbduWv7a8rLgkKz0z
KyM9OzMdOJ6SaEzQx+lUMdoYpUouUyvkGoVcq5THxii1CrlKJtXAQVk0MFwW
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
NxcoAHa6L4FC8PQjeBI8Xd1mveDhOsPX05XLokYE+SvCBHpZZGa8riQjpb44
b0Fl2ZL62lcXzHtjyeI3X3lp9euvvrNi+Ydvrly/+u1N69Zufv/9rz7+6Ov1
n3y98bNtWzbt2Prl7m1boez7btu+7dsO7vweyqFdO6Ac3r3z4J6d+/btPHxg
77rVb5bmZr+1dOnimprcxKQ4mUzIYtE8PX1mzODTaNA0MKhjMhIMC+tq5lSW
qySR0NaARockVAj7Onk0hJvEWOc94lhNldPnS0Vh4L0pzoYA1A/UDLj62opS
8OeAdAiFEBCV0kjw8FhjxzmQEjBeV1kG7wB4z81IFYUIAPgQJuDIpXOnex91
QhnoeTTS/wTHu3Vs1GEG927Du2gcjh8vLIiEhIT0t+XAZ5hOTm7fvS8xMUUU
IeJxuRSiH1hOtVyekZSQqNdGhYcAtYDquFHHx7qAdwWYz3rh9y7TnvNynQlP
OWcJ+YJpB+tO8fbEc7MA2z2mv+A+7XlP15k+Xq40orc/nRjOZ6slockaWXGK
YV5J/vJ5dW++OO+95S9//PaK9e+u3vTBui8//fDrTZ9+u2Xj9q++2LN164Fv
th3Zvv34zp2n9+07A+XQwXPHj146fbLp/Dko1y82XLt4/lojlAtNl85fvdBw
9WLD5Yvnzp8/c+HcaYDnpVMnzx0+dGznzgPffgvv9tX69e+vXLmgsjJJrV46
b+7alStKs7MS1KrizIxXFy2oLMgTcjlw5cpIkT5GER0WAjv4SPXUhPh5ddWA
98gwIeAdMO7tNgs+L4Q8cOavLF4AkI9VKeApYD6gG47DDrAdaibFqIdzgO3Q
BID3EQRwAP5hgsD59TXdnfe6Om4/ftABeMfd+8TgoG1szGE22c0mh93qHLiE
2I6EhPRz5XBSA3aOnjqbnJEjkygC2JwANkMtlxRkpqfEG8ShQqAQwAoflA6k
wsd7z3z+d0B1j1nTAW5UPwJgH56CHSiAMirRB9ju4zoLp7r3rBl+Hq5kbw82
xS+Mx1aLQ5LV0pI0/YKy/FWL5/1hxasb3337j39Y992GT3Z/uWnvN18e3P71
0T3bT+zfefrw3rPHDlw4cezSyZNXz565cfHCrSuXWy83tl9vunuzGcqDttbO
9luwvd/Weu/2rfu3b3W0t3a0t3S0tcDO3faW9pbmthvXWq9ebr3S2NJ48VrD
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
uP5HAvb9l84cu3v1/OM713Kz7xblPa14k1dVlF9dRvpcs5VzmHpohgaz6XeJ
QluYFiS11VU/rF2VNXn87OlTZ2ZNPrhnJ1Oy4AP1e/Ggp1QqKyoqaF015m/1
JzXBNBpVRWmRRllPzm3Q1lSWlRe/0WkU5KVJp1TKtDql1WZg2rz+5/WKOePs
L2NsMHPnzp2jR44IC/KbkNnLplPamF4IJEP4V//+k0E7m8Vg0qlUJq366oWz
AHv/XhlQcYP69YbcpWEWyPV+PbuD80AxcDcra/LqZd8Ny+wP/NLQOoUzWEq5
TSFM4yrtmK5z7BROGp9hJy6xe7LxGXproDIehKeJlzS2TwU2y2S2wR+NDkGK
h/j70EEBOgyKy4ZEj4+KoP276dgBzdWhyfZ0/hG9KeCEOAp7CkMCpWGCqHBR
pFiIM/BwTtxoHB38XJ0F/j7i4AAJL7hncmzWmKELpk2YO2nMomkTV8yduW7J
11vXrDi45YdTe3ddPHHk+sXT929dyXl452XOo6L852VvXtaUvqmvKm1sqMSk
xFgN2gYzM7uW1n/7zVGHPyszmdnUIK+v27Fjy7QpE6dPmbh722ZyYR8ytVpd
VVVFwd7UG+st2BWK+tKSIp1ORRvL4IkQPK+rrSwpKQDSIde1OpVCWafTq8wW
4y+pRc8ZZ38ZY5NYNm7cOGRQpijQe9rIzAajltYHaSDZxb8+28kMfZPZrDfg
m2fUKPKfP5k9bUpGahKezbECpIOZQCK4l5YYFy0Jo9SFvN+/azs0HvaRCEOp
9AVsgU0gGuimMhjSGgynE5QoSCn5sUK3t2ZGS1klTyFPc2MoydlYja+nG9BN
0iAD/UBsPEEIeUFgb4SIHxEmgLrGrYdGWmjUCI8bg/v36Zmegp2ZblCOuEJc
Hk19oVEgT+eufp5uUPW08RDOgPOQXCBvT6ZmAon2+Li5hPp4iYMCwgL8Q709
xUH+PZMSJg/PnDF68Jyxw7/NmrR+4bztS7/Zu2HNoV1bzx7ad/3U8XtXLzy5
fzP32aPXuTmF+S+qSgvrKktlVWVKWbW6HmCXm7Vqm/2Mnt+L7eQf32K2miCk
dXr1wQN7Zk2bsn7VcrP+w2zX6/VardZqtdpV1G8MxahUihICdg3TeeBtoTD8
bVVWleYX5GkYvNNaBDgNB3bO/lZGdTuWGzZsGDCgH8/PI2vEwAajjmmeZ2MC
lR/lG0GnLlqNRoNGZdSo6yrK923fNrz/gKH9+82YMnHm1EkDeveAmoV4pqXX
AU+IXhqTP33syLWL57ZtXD9ySCYgCXLSQA2FPBtOgbt06uDapRMpFN+mVdsv
Pmv5z09a/vMfLT/9R9tmn7Vr/gWWbBFFvNuhRTPnTh08HB28nR09HR3cHDq5
OXT2cu7q5cS4s6OPq7Ovq7OPqxNeenTtgn1cOnfEbg5tW7dv/kWon8+IzP7D
+vcVhwSFBQeG+HjhnO1bNWv1xadtWnzepWMbJ4cOrk6d3Z27uju7eLi4eLq6
eLk6e+MxwdvD39vL38szJMAvyM83wMfLj6lm7Napo7+LszQoKDM9fcrw4bNG
jfh6wrg187/avmzpgR/WHdu2+dyhfZdP/XjvyvnHt6+RkuzPH5e+elFe8Kq6
pFBWVa6qq1GRsr0KLZ6P9Ex03WplK5j97gnfTMk1XJT58uVLB/fvN+j1P7+n
1T4OT1eg58vLy3U6Hd3GOu2ZZbWaKyvLC4te6w1qi9WgUsvUarlBryO1fdja
bhzpOftLGxuTgW7v06dXiK/72AE9GvQqUgiL/Pl/rHKpjV2ZrFBwBoNarVcq
NfX1Lx8/Xb30O+h2+IQvR2ZNHAd6p8TH0DmqQDclNniOd+lc0cvnTq9buQz7
B/l60VxHOoPVzckBCtm9SyfgGmx369LJsV2bds0+B4RpDwunDu0c27d1Yd7F
etd2bTq3bgm8YwcsgWtsB719XJzgfm4ucDAfSKcO9uIlNmIFBwoC/Ib26zNu
2JAoIZ/v78vz8cb9okPzZk6d2jl2aufh7ODl5uTt7uzljqWrj4enr6eHr6e7
n5e7v4+Hj4eLr7uLh5ODE+R9u9aQ986dOwS4ucSGCQZmpI8flDl91MiFkyet
mjt32/dLD2384fSeXZeOHr519tSj66RKDJlwmpsDqlcVvZKVF8sry5VM+S+d
UqHXqE06nUFnYHIdmVzzPxLTaFqsxWo1GAz/on6y/Vv2YNcztwPrh6dOE21f
V1f1pjBfT4qJGTUahUohN5La7zaufQdnfwdj2b5t27ZevXqJgv2G90w21VeR
sh2EBB+xzQERUExOZIPZbNJqVTKZHt+/6qoHt298t2gBLfrdv1fG+NEjAPkx
I4YO7NMzOS46XMCDmKcRm8SYyKkTxm5at/rQ3l3bN22YPnlCUmwUwA4l79yl
g5eLI5Xc7g6dqUN1B3i4wYO9PbEEmdm3aL9RUB3kB5ah7Zv/499bfPIfUPVY
h7zHu51ataBLwJzuDGVOd47g8/p1T8cSjvsIPdChTWtfD1wqcN0K3gXethWe
IIi3be3QrnXX9q0d2rfC0qVjG2+nzgHuTuEh/onSMHzOIX26jx+eOX38qMWz
slYvmr9jzYoj27ae2bfv+onjdy+cz75+9eWjBwXPnha/fFHx5lVVUYGsolRR
Va6pq9HK67QKmZZ0UNJZTCaz0UQLDjOtpP9YU3ia0mJ/dpTzgxuVSmVZWRnN
mfn52wFNgLfV1lW+ep0L9WCzGtUkbUaJ3wlT55JjO2d/faNs37NnT5/efSR8
Xu8EibyioIFpePCxWUCAY2Gkm9Fk1huMaq2yjqCprrLs8f072zauHz1sMK0T
2LdHt1FDB4Hk8EljR0PP00YVtKRYhIiP3TJSkyDyRbwgaHiSf+7vCzkdFhwo
CQ2RCkJBXRoqgQ4Hfqk7d2wPqoPVQDoNzsBBcnAbDoCzTrdAz2NnyH7ofKzT
YyH7I4V8fwhyRuTTwwF83FaiI8KcHTp07dTO1aGjNxkbdfJzcQp0dw3x9hAF
+kpCAxKkwtSY8J6J0f3TEwf3TBs3pH/Wl8PmZ43/fuGs9csW7/hh5ZFdm88c
2XvtzI/3Ll/MuX0r//GjotznJfm5lYUFVSWFNWXFssoyVV21pr5Wy9QlNmqU
Rq3aDE37a9eH+Xj2SyLhdB+aM6P/+QBOkzXWnIHL6qsLCvN0elLdXamQUbw3
/MFuc5xx9jGMsv3s2bN9eveNDhOnSnjFuQ+x5Vco7/sLjFHv9Itos+gtBrVa
I69TyWoUtVWyqvKSgvyLZ06uWb4U6r139zTaZzM9Kb5PRvrg/n2GDxoA4NMU
SrzM7NtrUL/eWGJPUio8OjI6TAi8g+eQ6KCuR9curp07guc0FIMl4IyXgDyN
ugR6uof6+fB8vYO8PHAUXkLe40AagfFycqBPAdjf05Gs+7mSo0D1lJgoujPW
gXro+c//z//m+/tmpCUKQwOlotD48LBEiTg1Uto9NqpHYmy/tKRBPVKH9Eob
N7Tv1C8Hz5k0ZtHMKSu+/mr1twu2rFp6aPvGM4f3nT926NbFM9l3rj97dOdl
zsM3uc9K8vMqCgvqKsrqqspl1RX1zEQkLdMQkPYEtDF15m0/zW/8CzSKpmCv
q6v7aTLkv7CmPykms12llhUWvtTrlFS963DvMxnYeVvcGCtnf1WjbL93717m
wMzEyKiIALc7l35sIAVlfqNZi2zOsg2Py3qDWac2qOSgVn11BfAODV9ZUvg6
99nNKxf37dy6eP5XY0cO65GWDK1OJwTxg/yxEhYaDBfzQwQhAYE+nj7uLt4u
Tp7MwKi/h6t9HIaqa183Z9BbFBQAyR0jFsWGh0UIQoWB/tjN19WZANyhM/iP
2wEZQmWwj7d4fj4gNviPW4Yg0B+Hi0OCsOyZkjRy0IDeaSmuXTpS/d+1Xdtu
pPxjfLQ0LD4yPC02qldSwqD09DED+k0YOnDmuJHfzp6yevGczSsX7928+sju
7ScO7Dl//PC1c6fuXb345O7N/OyHBU+flLzMrWBK8jLl1ivqq6sUddVqhUyl
rCcRBpXcSNqGqpj+UFrS/o90dyWjGPalev8CbIfV19dXVlbSv9Vf0NzwLduZ
XnsmvV5VUvxKp1Va8MtSK7RqpdlkZJuS/yafgDPOfmuj35fCwsJhQ4akxEQI
fZz3/rCygaknY/nN/upZ7uBqzCaz0WDU6zQqpVqpkNfVyiorq0pKy968KX71
Kv8ZZOydq+fOHNy1Y/PaVUsWzJ0xecKY4UP698qAVk+IkkaKBGEhQYIAf76f
L9/HO8TT08/ZydOhi2vHDk7t2sJd2rdz69TRs0tnLwcHH0dH765dfZ2d/Vyc
fUjpLfcQL0+Br29ESHCMSJgSGZkeE90tLrZXclKf1OTeKWTZIzG+e3xcRkIc
szEls0ePoX16D+rZY+6UyV9mZrb/4vMv/u3/c2zXsntC5IgBPfqkJ/TvkTKs
X8b4YQOnjR2xaMaUNd8u3LLq+32b1x/bs+PC0YM3zp68d+Xio1s3cu7fffkk
+82LHIjzysICWWmJrLS4rrSEjI3WVKnratSyWp1SblCrwCa9Tmc0GEwGo9lo
JAFkNgGmge3l91v9w31koxjXarVgOzts+gto/PbvqSk4Y9XplGXlhWQqk9Wg
VJLMGaaCwa/QA5czzv6YRv+25XLFxPFjU2LCeJ5d508e12Axg+wm6+8DCZJF
g2+g0ajTA/H4OqrV9QpZZU1tOSBfVvyq4M2L5/lPH+dmP8i+ffPOlYsXTvx4
eN/uXVs3rV+1fOnC+fNnTJsyetSogQMyM7r3TU3pmZTYMzEBS6C4b1oqVnok
JvROAauT+3dLH9C92+CePYf27jVyQP8xgwdNGD5s8qiR08eOmTl+/JxJk+ZP
y5qXNfXrmdO/nTN7ydw5yxbMW7n46zVLvtmw7PuNK5ZvXrVy6+rV29auWf3t
N4tmzsCPG9yzx+Be3ccPGzBjwvBp4wbPmzb227lZq7+du3n1kl0bVx7evfHM
kb1XTh+7c+lC9s0bz+/fe53ztPBFLhNseV1dXFhTUlRfUSavKlfXVmvqajSy
Gr2isUk3nmXMOpVZp7EaDVamYZ+Nad/61wYT/eOUyWTA+y/pRd7U+dfcVKCg
aTvTMttk1pZVFMnlNVabQatVavDUY9RzbOfsr2pN7ZptS5cuSYqLEPh5DExP
UstqGmhJmd/vqmjivcVMZjmZtDqdSq1RKFX1cll1TVVpSXlRQWnBq8L8vFcv
cl48yX784O6DOzdvX7ty/eL5q2dPXzh+7MzhwycPHDh5YP/R3buO7t4NP7xr
56Ed2/dv3bJvy+a9mzfBt69bu2X1qh+WL1v//VLget3S77DESwLtNat3rF+H
fQ5s23p45w6c5NTB/WcOH7pw7MfzPx65curk9bNnb104f+/KlXtXLmN5++LF
8z8evXDs6IkDe4/s3rZ/24YD2zcc3rX5xIFdpw/vvXji0M0Lp0jR3TvXnj+6
QxpS5z4ve51fVfimupiUZ5RVldN+GSpZjVYhg0Q3adVwwJzMOTIbmfmkZhJ1
abD+iWMr/y2jVeZ+nu1scjt512QylZeX19bW2qdHMiU0TEzFGn1JyRuZrMpq
NWo1KjUJzpg4vHP2lzQ2DfLw4UOJybGR4lBpaEDOvVsNTPWP3//PHj/fYoXb
zBY6m1Wv1miUCpUclK+traqEV5SWlBYXFhW8fp2X++r587wnT148yn527/7j
W7ezb91+cO363ctXbl+6fOvCxVsXzzN+4cb5s9fPncXy5oVzN86fu3b2zPVz
Z+gWEPvO5Ut3r1x+dPP6o5s3sm/dfHr3Ts69ey8ePMh/8qQgJ+f1U4jtF8W5
eUW5uaUv88tfva54XVBR8KbqTWHJy7zivBevc57kPX6Q++je8wd3crPvY/3V
00cFz58U5eaUFeRWFOVXlRSQFJeKMkV1haKmRlkvU9TXwTUqEgo2aDUG6HOz
EU4amDJR9AaywswqbSp79Xv/w/x29p8Fxt9WIbBYTBUVZUVFRdD5P608ZiOV
fkmxYZPVaqqprcJDITiv0Sig3s0GI50x+zf6nXL29zBaWPXx0yfde/WIjgwP
8nLdvnYlvg5mk57qpd/z4mwNP5l3w6wbjUaDQa/VatRqlVxeX18vk8vldTVA
fXVdZVVVaVllcWllYXHFm6Ky12/KXhWUvHxdnPeq5GV+8cvcd7wkPw/Lopcv
ivPzsF766iXkNLy84FVlYUGTF9YUl8BlZRWy8op6xmVllbLySnlltaLJ5ZVV
isoqZVWVvAJvlcnKyurKSuvKSqpLSLAFjnVZRYmsqkReU66sq9LI6zSQ6Col
PgY+i06r1et1pPmgCfcw09s5pI1uJiUgbFx/5/eN9u+wGIza8oqSouICtVrd
8O694G2RMSb7nQn7mbQaRZ2cDE/LTTpdw4eKlXHG2Z/XGjsX22xKjWbM1MnS
yHCen+fIAT1NOoXNAra/W3b197jEBjuwMwOGTeOuRMjr9QaY3oAnbLgOz9n1
cuIyuaquXlFTJ6+qra+sgStqahW1VdRJiwrG5dUV8ppKRU0lWdZWqZioiBL7
MBVx1cRr1bI6jUymlsm0crmmvh6urZdr65VauVKvVOsVKsaxooDrFAqDUq1j
NhpVKjLlVibDIfQkGnmtWlGtUdZplTIDyUVXmfQ6g4EA3Ww2N4Ue8EGt7wUg
LEy9FAvH9p+ajYmlm01mXWVVSXFJgUpd/6ER0ka220igkcypsJgNddVlJYX5
FSVvaivLVTKZ2cDF3jn7qxkJyzCiZd22zVFREZLQ4Ch+UPbNKyRZ5g8Slvmp
26/aaN0rJrRkMZlNzBAsca3OqNbqVRq9Sq1VqLQKJVwnlxNXyPWMY0WnlOtV
CoNaiWWjqxV6DVkadWqzXm3WkaC3Wacz4TFfr7caDFha9FgazTqytHN901sG
+pYV67gSjRbHmpilWa81GzXEDVqrSW8zGxqYdKQPue2niYvWJrDb7DZy1jgL
VatTl5eX1NfXMsUmrWwRPHavxkIDzIw8i9lYVV5c9OrF69ynhfm5VaVF8ppq
rUpp4mLvnP3lzMaE3O8/eZielhwtEvI93b+ZMaXBomfy6xrYGnw/538QszYZ
NLDZaLLCTWabyWxlHCsNhp+4zWC2Gg02kxHfdjrrh7jFaLM2uc1ks5oaM8Yh
94zMSZjgf8MvcBvjVmPjBTS6xUSdnLZxdjxn/1PDs6dWq1UqlT+TA08rUNJO
TdbairKXOY/ynzzIy37w5kVOeVFBbUWpSi7j2M7ZX9KgdfQm4/RpWVIBPyI4
MF4Y+vopmaBKquc17tAYfP/Dsv0nZrN9+ELfWVotTMdk61tvjH7Yua0xNcXK
3C/+1U3u55wOGTSKbrt+cBzbfw1jgWxfE/idHUhrd9Jb1VpXVf7qxaOnD27k
3LtJEpbynlcylTM1SjnHds7+kmZhBM/VK5fjo6VSQWiIp9vMCWNIIzSz0WI2
sgiy2mhU+O2Bf9Cvg81uBLYJ7B+A/TtjtWSTtWl4joWwtbG6VCOi/+ts//kb
4R/0t/fnMVais8ntIPy7fVebRlAVtdWvXmQ/uH3h7rXTT+/eeJWTXczEZGTV
FRqlwvxHiEByxtmvbUzU3abX66ZOniTkBUl4QUJ/nwunTzBvWjUaZUFBPpZN
e1stFrOFTHGy0KLZf0R7D6ofZvs7O39wR9uH9vwfg52zj2HQHkaj8S3eaVl3
i1VVX1v86tnDWxfPHtvz8Ob5l9n3inKfVRW9kddUahQyI2nzwRlnf0Ej/ThM
5Ovw8NHDmBiphB/C9/FKS4gtLym8fun8nJlZvXp2mzB+9Ib1ax9nP9Tr2EY5
VoL597oY/0HtF8D2YyOZ4/3HNpr6RfHeOHXXZlPJal/nPbl28cfLpw/dvHjy
xcPbBc+yy1+/lJWXaOR1Jp3aYjL8p2fmjLM/pZEEggZoccB62fffhfFDokUC
f0+33t1Tu6UkRkeIE+Ki42IiY6Kk6anJkyaM27FtS/bD+2ql3EomS5LsBKZA
h/XjEetfnfQXgpJj+9/FiFg3GPQWswlPl/La6vych/dunD9zbPfNSyef3b/5
+unj8td5srISdV21Qa1osBiZsQ/OOPtrmo08uRIFLpfJxowYGSEUhQtCI0R8
UjI3LjohJjI+WhoXFZEQLY0UC2Ok4d2SE0YMHjh/zozDB/fqtApyBqvBYtHb
bCacx0xkE9N5oaFR038gHvJeqOTdS2I0GIzkfzM6zPLBVjtNuZAcLjlrGqc2
N9iMWpWssqSwOP/Z7QunzhzZd+fK+af3br3KeVz2Or++rFQrqyVF741aa4OJ
yZPnjLO/soGeWOY+e56elCwNE9ISi8mxUfEM0mMjJfEM3uFJsVHRkjBRaFBI
oM/kCV8+fnRXp5GT0u/mxsdbE2N0Vs4HgjbvRcLftw+GetgCIz89l5W9Y3B9
df7eZmWym0xGvbKypCD/+ePr509cPH741sUzOfcB9ielBS9rK0q1dTVGlYLM
MiBl3s0c2zn7yxuQScehbt64ntm/b//eGd1SEiHR+YF+Xi6O4QIePFYaDrYD
7OLQEHdnh66d2zl37SjiB40YMnDD2hVfz/9q3ZrVjx7eNxpJixyT0WA06I3M
A7LVYmLyDG2Ncv6nTLe9eyXEDuzf99Wc2T8ePfI4+1FJYaFGobDbgSh6kitu
a0x2YVMY/6jju5x9fGPqMxh0APubvJyHN6+cPXFwz40Lp3Me3Hr9/EnZm1e1
lWVq0ihcadJpSQbs27Qozjj7ixuIarYQGbNx47q0lIRuqUmQ7h6ODp1bt6S9
MKRhguS4aAj4AG+Pti2+aN+qmb+XGz/YXyLkRUtEUeEiqViUnBC3eMG8KxfO
VZYWWwx6WsPQZjZajAZbYxUsKzPBx2x7r1RtYyWEhoY7d+5ERUp4IYG8AP9w
fmisJLxfRsa3ixeeO3OqrLTYSpIzqVlNZqOZRleZkn/cF/Xva1Zjg9Ugr6so
zn9+9dyJM8f237l67sndWy+fPCopeFlXWaYC2NUqiA0brav51jnj7C9uZJKH
zao16CdMHBsbK02Mi44UC7u2be3Ytk2ovy8/OABUT0uMw0bHTu3bt2ru6tDR
z92FH+gbHxkeJxXHhItiI8SxErFEwJOK+P16dJs/c/r6lcvOnzhWX1lu1WmM
aqVFp7bq9BatwWowkUqPTCTFvqM9TXWYPi0rPFwYFSHG3UQSGiL09xP6+uKG
EuzvkxQXPf7LkTu2bHz66L5Bp3578Uyxv9+kJSBnf0izmYw6xZuXz25dOXvp
9JG7V88+u3/zTe6zisLXtRWl6nqZQaM2GQwfHrjhjLO/pDWFvo0Qvw0NBSVF
aenJMTER0dJwnr9Pp1YtfB0dRcEBEmFoakJsRmqSIMgfot2lc4dgL3dRkH+c
JCxBGh4TJsBKbHijx4WHSQWhwHIEnycODpo0eqSisrzBqG/QaxsMBtL3zGIj
vbBJCyGm5QTDZDpzPCcnJy0tNTpSIg0XRYtFseKwWKEwTiiMEAkkIr4oNDgk
wDfIzzuMHzKkf78Nq1ffu31bXidjO8qREA1hPBd9/5uZ1aiRV9+9censsf1P
7l7Lf3KnJP9ZZUlhXVW5Wi4z6XW0koaVVubhNABnfyejAZl79+4lxMXERUdJ
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
aExtfX3dMDNn5qL5c5YtWDBv5swvP/rw0z//++rFM7vb7tMJveTRTuLgy7Hh
DhZpgEUZFPPGVFKmWsJSiVmovFt1crdFG/JY4gFXKuyBoz5U25FMahzJlvJ2
oO0AAOB9ofiDBpspiUJlPl9Ac/l8NpPJpWA4nkhH44lwNOSHQj5/yOsJeFxO
i1Ejl5BwWEf68UMH0WR+zfIlSxfMRfWzXJwvJ/Nffoq12WBC/eGfSsX5P5dr
NSXB/+CH9fk35X2qLF9+LL/4h3/7n7/7n/8DlXr0t6Cp+8kjTejv5TKoqOBv
WrsK/ae+/OQjVN7RQG9gavfHhHXYLGx2af63386dMePzv3zwl9/9j5MHawwK
rl0vQcOk4iv4NBGLyKMP8xmjfAZOwiEphQyFgKEQojrP1sn5Vp0s5DEnQy44
FoDjkVw6gTnMoG/cP1f3t95sAAAA+HUpGcajKp/LZTLpZCpR6paPBgNoBLwe
yON2220GtZrPZHa9aDvfcrJm59b1q5YtXzx/7rffzJn59bczv57x9edfffbx
F5/85fOPP/wM65lHNfxPJWH/4M1MfsqX8qfz+fK3gHIm//v//X+jOo8+3bJ+
zbWL51BtR1+cmr1Cvz6Uc/jpX35WTuNnYWuYvpw1fdo3f//yr3/83Yf/6//a
v3M9lzTgs6jifhsc8SRD7qDb4rUodFKWgIZjjw2iwafixajIi5kyPlXKo6hE
TK2M7TAqwh57Lh4uwKnxXL6YK6BvVBEpltbZlv3cSopfnHJ3Q8bH8+Pj/383
ogEAAO8FpZFXLIpYxQYNrDKfgeFEPJOMJ6ORMORHA03mAx6P12G36DUiHmuo
r+vWlQtNe3dvXrtqxcL5i7+bPX/2jLkzps3CKvOf/P2ziePXcg7/oxYHP+p4
8EPNR19Hfxa9RkUezeenXkd/pNy9U97fXS7UfP35J9M//+Rr9OLLLz7/20cf
/fF3n//p35bN/uJI/c7OJ3d4lBGrVhIPOOIBZz7pT4VdXqsWzdIVAqaASWaR
htjkYT4dL+GQ5XyaQkBXofk8j6qVcG1aZcjtRFLJYhYu5tHIoJ+Fr9uTiuOv
H8ujZSB1BwAA7xkTeoWpPZamFnL5LAxnUulENJaIRCKBAKrzAazHxmE36DQi
IWlw4Om9uycPHqjatHHdsiWL5323YM6sOTPKDfOfTjnM/7S2Tzkb/IQ15Zvd
9eWfmurMLKfx5fiiFJ99/NFH/+eDrz7+cO5Xf0PvrG7L6v1Vm84da3h2/yp5
pEvIJDrMKr/LGPTaogF30GP3OS1OowoVcwEdzyQOoMGj4aTsMY2QphExlHyq
nEfTijg2nTzkt2aSgXEEnhDwwkS15t3yFwAAALxPvDv6WooCUkAy+VypkRJO
JhORcCToD3rcIZc74HC6zWadTE4nEJ4+eHD25MmqrVvXLl++cM6cebNmfTsd
E/npX36GivwXf/srGmVDmykrmzc1/50B2J/O8/9hoD/44Qd/+QBN+P8888tP
V8yZ3nqlpe3O5dvnjl88tv9U0+4zR/ZcP3+07dHN0b4XLPKIhEszKMV+hynu
syX8trDL6DYqDDKujEPmkofYpH4+bVjOJSl4FJWApuBT5EKKRsY2aSRehzkR
CSFZePINm8jjgbYDAID3hOIP4vV/mqo6lIoNRWQcySPZDAyX6vLJWDQaCob8
Psjj9rqcNqPRrNXymczejo5LZ87sralZt2JFucGmPPpaNo3Bjl8/+Whqtfeb
PfPlCsw/LeD8VPz5T3/90+8/+P1/fPnp376b/vcV300/Xr/z2a2LpN4X9JFO
Yt+zzic37lw+euHEvosn9587tu/q6cPP7l4ZbH/MHhswKwV+qybmtaAij4bP
rjVoBFI+hccYZZEGOORBERMv55KVQppcQJUJaGIuTSXjuezGRDRU8o1EJt4y
YC8GAADeA35C29/6PxVet1Qi+Ww+l8lm4SxmOpyIREJoKh+AfEGPB3K63Far
SaMRc7kj/X13blxt2F2zYfWKspdv2cId1XlU5MsK/46f/JQL8X9O2z/98IOP
PvgDmrfPmvb1nOlfVa5ffrhm6/Hdldeamzof3SAPtImZQyoBQUwbwHc+fHbr
7JUTDSf3VaJx4fj+B1fPdD+7Tx3pVvJpboPc59B5PUa/x+h1as1akVJE59FG
2MQBFrGfQxkSswloDi8TUMRcNKgaKd9l1ieC/gKcfuttAxoPAAB+WxTLk68T
PjaZTCaVTCYj0QgUCHp9QZ/f73J7HE6HxaiUisZww633bh87dHD7lo0rFy/A
Vt1hZXns7HXmtK++/uLTctGmXDN/J3Wfyup/zrFseQD24w8/mDNz2oJZ03dX
bDxcs/NUQ+3ZxvpLxw7cO3/y1YMbrOFuFROv55HNYoaSRSB2P3tx99KNlsOn
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
LDWbICIPUvtfknqe4zse4149Get9zsL3oDqvFbP8dn0MchQyyfIu2vLka6FY
9q6ZKNq8rftvFulBLQcAAADeBSvXYD02SDabzWQzqVQqFotFIpFgoORv4LJ4
7UanSWMzqExqqU7K10s5Mg6ZMtjx6uGNaycPHK3fvmfHuvrta3dtWLph0ay1
86avm/fNrnXLmhuqH15u6X96jzHcpWCN6Xk0o4CBhppFEo0NMYe7xrrbRjse
o0HoekYb6OAR+nVCltuoi/tdCBwv5tPFYq508IoUxid9bN5qtHlzISBI+AEA
AOBtJqxrMHkvX6AiD8OZVDKRTUbhWAgzsfG7Ah6H32V1Ww12vcKqkZqUQpOC
r+bTmISe/vYHty8db2mqPVi9cU/FyuoNS7etXLB56XflE9i6zavOH97b2XqT
NvhKTido2GSDgGHg0zVcioA8jL6Iavvwy0cDzx/gO59SBjq4xEEZm2zVygJu
SzoWHMfMynLYWevkweuv/X4BAADAb4+3dgJm4bKPTamLMohGLOjHRN5p8WAN
82pUgW06iVnDV4npPOrwcNfjRzfOnj+y91Dttvpt62o3r6pYMX/Dotkr5ny9
cu70yvVLzx2qf3n3Cr2/Q0IaVrLGdAK6lk9TcylSOp412jPW/Qzf3jra3jr8
spU80M7E9YoZBJNc6LPpUxF/PhND8inMeRjr/0EmdwICrQcAAIBfBprLlwMz
ls9mSjUbGE4lErFwJOAL+lw+B1axcZjVdqPSppUblSKNiMOl4Ii9bc/uXr5y
6tCR+p17d26o27qmctOKTSvnrZo3ffXc6dXrlrXswyo2uFdPuIR+OZOIirxR
zDKK6Co2novvHOtBM/nWoRePCN3PSL1t1KFOIQ2nlXLsJmUEciBwrJTM56cW
Av7a7xMAAAD8VsH0HXOWL6CRyWSSiTgq8vFoKBqEAl63z+VwWc0Og8Gq0RgV
Eq2YqeBRxEwCdaSr/dHN62ePHm+s2V+3dV/Vxt0Va2o2rKhYPGftvG+2r17Y
tGvLnXPHB549QPN2GROvFZJ1IppJwlKySYKxYdpgx2jHg+GX90Y6WnGdjylD
r3ikITWf6jbIoz57NhEuZNPjhdyUL/Kv/SYBAADAb4C3rF/K6wDHS4uXSlJf
LKBqn82k0ul4IhWNxYPhsA+CHG6v1eIwyMxqoU7G0cu5Cj5NQMfT8L297a23
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
AAAAAAAAAAAAAAAAAAAAAPyQ/wcRyqjB
    "], {{0, 281}, {500, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{500, 281},
  PlotRange->{{0, 500}, {0, 281}}]], "Input",
 CellChangeTimes->{{3.6997914616395655`*^9, 3.699791463893727*^9}, 
   3.6997915046957088`*^9, {3.6997915768003283`*^9, 3.6997915885636272`*^9}, {
   3.699792958712014*^9, 3.6997929680257807`*^9}, {3.699793549256375*^9, 
   3.699793558540329*^9}},ExpressionUUID->"57617c7e-308c-4844-a48d-\
c92c758605ab"],

Cell[TextData[{
 "Connect the sensor to your computer, then evaluate the following input (",
 ButtonBox["need help on evaluating inputs?",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/language/fast-introduction-for-programmers/en/\
interactive-usage/"], None},
  ButtonNote->
   "http://www.wolfram.com/language/fast-introduction-for-programmers/en/\
interactive-usage/"],
 "):"
}], "Text",
 CellChangeTimes->{{3.6997125247443123`*^9, 3.699712579376305*^9}, {
  3.6997127004721985`*^9, 3.6997128136174693`*^9}, {3.6997129340482063`*^9, 
  3.6997129667085037`*^9}, {3.6997916542560883`*^9, 3.6997916545914288`*^9}, {
  3.699792990854224*^9, 
  3.6997929911425004`*^9}},ExpressionUUID->"d1300c4b-717e-453d-8f08-\
55a16b0ef4b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sensor", "=", 
  RowBox[{"DeviceOpen", "[", "\"\<Vernier\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6997124941990185`*^9, 
  3.6997125020005355`*^9}},ExpressionUUID->"8a9c1186-a0de-4ed2-828d-\
21accf129218"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Temperature Sensor)", 
                "Not Connected (Temperature Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$ = 2, 
               Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm],
                ImageSizeCache->{213., {5., 9.}}],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[RasterBox[CompressedData["
1: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
uIaM0zIjI4PayJ3Ucv1Tp6D9mf8Vfx/8C+A+Swo=
           "], {{0, 0}, {70, 27}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 
            Dynamic[3.5 CurrentValue["FontCapHeight"]]},
          PlotRange->{{0, 70}, {0, 27}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Vernier\"\>",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Status: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                Style[
                 Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False], 
                Style[
                 Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                  9, ImageMargins -> {{3, 3}, {2, 0}}, 
                  BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                 False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                Opacity[1], 
                Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`status$$ = {
               "Connected (Temperature Sensor)", 
                "Not Connected (Temperature Sensor)"}, 
               Devices`DeviceAPI`DeviceDump`d$$ = 
               DeviceObject[{"Vernier", 1}], 
               Devices`DeviceAPI`DeviceDump`ind$$, 
               Devices`DeviceAPI`DeviceDump`indr$$}, 
               DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                 Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                   Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                   Part[
                   Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]],
               DynamicModuleValues:>{}],
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            TagBox[
             DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`opacities$$ = {
               Opacity[1], 
               Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
              DeviceObject[{"Vernier", 1}], 
              Devices`DeviceAPI`DeviceDump`props$$, 
              Devices`DeviceAPI`DeviceDump`vals$$, 
              Devices`DeviceAPI`DeviceDump`reg$$}, 
              
              DynamicBox[ToBoxes[
               Devices`DeviceAPI`DeviceDump`reg$$ = 
                 DeviceFramework`DeviceRegisteredQ[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`props$$ = 
                 DeviceFramework`DeviceExternalProperties[
                  Devices`DeviceAPI`DeviceDump`d$$]; 
                Devices`DeviceAPI`DeviceDump`vals$$ = 
                 Devices`DeviceAPI`DeviceDump`d$$[
                  Devices`DeviceAPI`DeviceDump`props$$]; Column[
                  Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                   MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]],
              DynamicModuleValues:>{}],
             "SummaryItem"], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Vernier", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6997125044548335`*^9, 3.699712819986573*^9, 
  3.6997916793969173`*^9, 3.6997918349066415`*^9, 3.6997929944884315`*^9, 
  3.699793581178397*^9},ExpressionUUID->"6aa6334b-a864-4f94-bee6-\
2ed43c3f4e8b"]
}, Open  ]],

Cell["\<\
If the \[OpenCurlyDoubleQuote]Status\[CloseCurlyDoubleQuote] field in the \
output shows a green dot, you are successfully connected to the sensor. \
\>", "Text",
 CellChangeTimes->{{3.699712992687853*^9, 3.699713128029845*^9}, 
   3.6997139551135426`*^9, {3.6997917450319614`*^9, 
   3.6997917461280117`*^9}},ExpressionUUID->"44509e83-6c77-413a-8927-\
c62b26d3c9f8"],

Cell[TextData[{
 "If the \"Status\" shows a yellow dot or a red dot, then ",
 ButtonBox["click here to open the Troubleshooting Guide",
  BaseStyle->"Hyperlink",
  ButtonData->{"TroubleshootingGuide.nb", None}],
 "."
}], "Text",
 CellChangeTimes->{{3.699712992687853*^9, 
  3.699713128029845*^9}},ExpressionUUID->"96e72601-7c79-40c6-96fc-\
ddc84fbe685e"],

Cell["You can now read from the sensor:", "Text",
 CellChangeTimes->{{3.699713897582999*^9, 3.699713944839697*^9}, {
  3.6997144347586184`*^9, 3.699714435439269*^9}, {3.699791708303795*^9, 
  3.6997917108549895`*^9}},ExpressionUUID->"423b43dc-3dda-4589-9aad-\
54c2d8430ef8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceRead", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997139262365284`*^9, 
  3.6997139315205917`*^9}},ExpressionUUID->"2c9e827a-2e4d-432e-97cc-\
e9560cef881c"],

Cell[BoxData[
 TemplateBox[{
  "22.268387148356254`","\"\[Degree]C\"","Celsius degrees difference",
   "\"DegreesCelsiusDifference\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.699713931838897*^9, 3.699791683452804*^9, 
  3.6997929988067155`*^9, 
  3.699793584523749*^9},ExpressionUUID->"c975f908-df19-45a1-bfc5-\
e678dab16800"]
}, Open  ]],

Cell["\<\
You can also read the most recent values recorded in the sensor\
\[CloseCurlyQuote]s buffer:\
\>", "Text",
 CellChangeTimes->{{3.699714782022566*^9, 
  3.699714809703727*^9}},ExpressionUUID->"7ccd42bb-8f4e-46f8-b107-\
4802dfcffd61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceReadBuffer", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997147560527315`*^9, 3.699714780031656*^9}, {
  3.6997148195917645`*^9, 
  3.699714820159308*^9}},ExpressionUUID->"5cb25717-738c-4a50-b130-\
ac5eb1e3ded4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["QuantityArray", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                   1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                   1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                   0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                   1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> 
               True, Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, 
               ImageSize -> {Automatic, 
                 
                 Dynamic[(3.5 CurrentValue["FontCapHeight"])/
                  AbsoluteCurrentValue[Magnification], 
                  ImageSizeCache -> {94., {1., 9.}}]}, 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "324", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"DegreesCelsiusDifference\"", Short[#, 2]& ], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                   1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                   1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
                 Antialiasing -> False, 
                  GrayLevel[0.3], 
                  
                  LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                   0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                   1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> 
               True, Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, 
               ImageSize -> {Automatic, 
                 
                 Dynamic[(3.5 CurrentValue["FontCapHeight"])/
                  AbsoluteCurrentValue[Magnification], 
                  ImageSizeCache -> {94., {1., 9.}}]}, 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "324", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"DegreesCelsiusDifference\"", Short[#, 2]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{
                    "22.084953363106813`", "\"\[Degree]C\"", 
                    "Celsius degrees difference", 
                    "\"DegreesCelsiusDifference\""}, "Quantity", SyntaxForm -> 
                    Mod], ",", 
                    
                    TemplateBox[{
                    "22.268387148356254`", "\"\[Degree]C\"", 
                    "Celsius degrees difference", 
                    "\"DegreesCelsiusDifference\""}, "Quantity", SyntaxForm -> 
                    Mod]}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "StructuredArray[QuantityArray, {324}, <DegreesCelsiusDifference>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.699714761109165*^9, 3.6997148112217426`*^9, 
  3.699791686014259*^9, 3.6997930009089327`*^9, 
  3.6997935861512375`*^9},ExpressionUUID->"6938e654-0d10-4f55-9637-\
e77c678a3b3d"]
}, Open  ]],

Cell["\<\
Or take measurements over a given time interval. In the input below we are \
measuring every 0.1 second for a total duration of 10 seconds. A progress bar \
is shown while the Wolfram Language is reading data:\
\>", "Text",
 CellChangeTimes->{{3.6997148495506096`*^9, 
  3.699714958894782*^9}},ExpressionUUID->"25acf372-0dbf-46d5-9353-\
9019777258fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceReadTimeSeries", "[", 
  RowBox[{"sensor", ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6997148340631*^9, 
  3.699714871168326*^9}},ExpressionUUID->"9c23e905-67a9-46bd-89c5-\
a8a62eb9a6de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, {
             {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
              StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                "]],
               StripOnInput->False,
               FontFamily->"Arial"]}}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:26:31.642\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:26:41.563\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{}, {{}, {}, {
             {GrayLevel[0.5], PointSize[0.125], AbsoluteThickness[1.5], 
              StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                "]],
               StripOnInput->False,
               FontFamily->"Arial"]}}}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{0., 0.},
          Background->GrayLevel[0.93],
          BaseStyle->{FontFamily -> "Arial"},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          LabelStyle->{FontFamily -> "Arial"},
          Method->{"ScalingFunctions" -> None},
          PlotRange->{{0., 50.}, {-7.030970816185017, 4.273359296964368}},
          PlotRangeClipping->True,
          PlotRangePadding->{{1, 1}, {1, 1}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:26:31.642\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"11:26:41.563\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["100",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0.10009098052978516`",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{{
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.173889510384072`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.268387148356254`, "DegreesCelsiusDifference"], 
      Quantity[22.36288785816673, "DegreesCelsiusDifference"], 
      Quantity[
      22.268387148356254`, "DegreesCelsiusDifference"]}}, CompressedData["
1:eJwt0l1Ik3EYhvF36VRcvZQYadZgkhZIwsSMDETBEAkFpUIdWo5NlrKZYmRI
0kpFTSvBwkznBx4EQbCDRX40DTHUdLhRJhWCBwNLHSiWWTnK69/BzY+L5/TR
6MtzjQGSJCn+z/Bv71s2944/XEkLntpC5c4vlLV+lIyKfbv6OwLxz0ywaEmF
W4ky/jAdQF9XOK7OHcK1wCjMzlQLb2kw034MM7zHMT0yDs9lxWOqVYsDE4nY
t30ae06exd7iFLQ9SsOuqXRx38nAbu157DRmY/uTHGybvYAPFHnYekqHzVeL
sLG7GBvcBtFKk+gzZXjXbMFlewUueatwMbIav2TV4CdrLS44rKK/1ok+2ogf
c+6hp/4+ugfb0LXWjjOaDnx78SmON9lw7HUfjq4P4EjMM3TmP8fh1hd42GNH
dZADjyS/wnDLMIb1O3H//BvRoROoSplEufIdVrx0Yfk3N5rVH7A0dwFNDZ+x
ZGgRL/uWsDDaiwWXljGveQV1Tp/ojXXxD7Hf8Y7+J95+/Btrp/1Y41fIu95M
UOKNkhC83qkS7ZKxak8YViYdxGulEWi2RWGZR42GoGjUJ8fgFcsJ0f1xqJuP
x/zQBPwLubGTFQ==
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6997149215158234`*^9, 3.699714970208624*^9, 
  3.699791699504302*^9, 3.6997930131217155`*^9, 
  3.699793601702897*^9},ExpressionUUID->"853cbc65-d035-4e48-9f61-\
322df68b7ee0"]
}, Open  ]],

Cell["\<\
When you are done, you can close the connection to the sensor:\
\>", "Text",
 CellChangeTimes->{{3.699715093126973*^9, 3.6997151147823043`*^9}, {
  3.6997917264876747`*^9, 
  3.6997917275351963`*^9}},ExpressionUUID->"df0f0e1c-1150-4c62-8708-\
52872d2d38c6"],

Cell[BoxData[
 RowBox[{"DeviceClose", "[", "sensor", "]"}]], "Input",
 CellChangeTimes->{{3.6997151157762537`*^9, 
  3.699715118959304*^9}},ExpressionUUID->"58257017-da43-42e5-b6b2-\
ebcb9b28779b"],

Cell["\<\
After you close the connection you can unplug the USB cable and connect \
another sensor.\
\>", "Text",
 CellChangeTimes->{{3.699715132446232*^9, 3.699715151894859*^9}, {
  3.6997917312557583`*^9, 3.6997917318233013`*^9}, {3.6997936185111322`*^9, 
  3.6997936188794866`*^9}},ExpressionUUID->"54931474-f13b-4f11-955e-\
377bf1b6e955"]
},
WindowSize->{775, 872},
WindowMargins->{{438, Automatic}, {5, Automatic}},
DockedCells->{
  Cell["", "DockedCell", Background -> 
   RGBColor[0., 0.35294117647058826`, 0.3686274509803922], CellMargins -> 0, 
   CellFrameMargins -> 0, CellFrame -> False], 
  Cell[
   BoxData[
    TemplateBox[{
      GraphicsBox[
       TagBox[
        RasterBox[CompressedData["
1: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
4//WLMsl
         "], {{0, 65}, {170, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic], Selectable -> False], DefaultBaseStyle -> 
       "ImageGraphics", ImageSizeRaw -> {170, 65}, 
       PlotRange -> {{0, 170}, {0, 65}}, ImageSize -> {170, 65}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {100, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[100], Selectable -> False], 
      StyleBox[
      "\"Wide-Range Temperature Probe\"", FontColor -> GrayLevel[1], FontSize -> 
       36, FontWeight -> Bold, FontFamily -> "Helvetica", StripOnInput -> 
       False]}, "RowDefault"]], "DockedCell", Background -> 
   RGBColor[0., 0.45098039215686275`, 0.4666666666666667], CellMargins -> 0, 
   CellFrameMargins -> 15, CellFrame -> False]},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 690, 12, 49, "Text", "ExpressionUUID" -> \
"5a7f3c3e-a368-40aa-9a5c-3314a6ddf24b"],
Cell[1251, 34, 78210, 1286, 296, "Input", "ExpressionUUID" -> \
"57617c7e-308c-4844-a48d-c92c758605ab"],
Cell[79464, 1322, 754, 17, 30, "Text", "ExpressionUUID" -> \
"d1300c4b-717e-453d-8f08-55a16b0ef4b9"],
Cell[CellGroupData[{
Cell[80243, 1343, 235, 5, 30, "Input", "ExpressionUUID" -> \
"8a9c1186-a0de-4ed2-828d-21accf129218"],
Cell[80481, 1350, 16483, 345, 72, "Output", "ExpressionUUID" -> \
"6aa6334b-a864-4f94-bee6-2ed43c3f4e8b"]
}, Open  ]],
Cell[96979, 1698, 377, 7, 30, "Text", "ExpressionUUID" -> \
"44509e83-6c77-413a-8927-c62b26d3c9f8"],
Cell[97359, 1707, 354, 9, 30, "Text", "ExpressionUUID" -> \
"96e72601-7c79-40c6-96fc-ddc84fbe685e"],
Cell[97716, 1718, 274, 4, 30, "Text", "ExpressionUUID" -> \
"423b43dc-3dda-4589-9aad-54c2d8430ef8"],
Cell[CellGroupData[{
Cell[98015, 1726, 198, 4, 30, "Input", "ExpressionUUID" -> \
"2c9e827a-2e4d-432e-97cc-e9560cef881c"],
Cell[98216, 1732, 334, 8, 39, "Output", "ExpressionUUID" -> \
"c975f908-df19-45a1-bfc5-e678dab16800"]
}, Open  ]],
Cell[98565, 1743, 242, 6, 30, "Text", "ExpressionUUID" -> \
"7ccd42bb-8f4e-46f8-b107-4802dfcffd61"],
Cell[CellGroupData[{
Cell[98832, 1753, 253, 5, 30, "Input", "ExpressionUUID" -> \
"5cb25717-738c-4a50-b130-ac5eb1e3ded4"],
Cell[99088, 1760, 11228, 221, 72, "Output", "ExpressionUUID" -> \
"6938e654-0d10-4f55-9637-e77c678a3b3d"]
}, Open  ]],
Cell[110331, 1984, 361, 7, 49, "Text", "ExpressionUUID" -> \
"25acf372-0dbf-46d5-9353-9019777258fe"],
Cell[CellGroupData[{
Cell[110717, 1995, 277, 7, 30, "Input", "ExpressionUUID" -> \
"9c23e905-67a9-46bd-89c5-a8a62eb9a6de"],
Cell[110997, 2004, 17175, 357, 72, "Output", "ExpressionUUID" -> \
"853cbc65-d035-4e48-9f61-322df68b7ee0"]
}, Open  ]],
Cell[128187, 2364, 267, 6, 30, "Text", "ExpressionUUID" -> \
"df0f0e1c-1150-4c62-8708-52872d2d38c6"],
Cell[128457, 2372, 197, 4, 30, "Input", "ExpressionUUID" -> \
"58257017-da43-42e5-b6b2-ebcb9b28779b"],
Cell[128657, 2378, 342, 7, 30, "Text", "ExpressionUUID" -> \
"54931474-f13b-4f11-955e-377bf1b6e955"]
}
]
*)

